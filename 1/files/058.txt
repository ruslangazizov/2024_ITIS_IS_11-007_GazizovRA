24 подсказки по работе в Xcode - SwiftBook
 
Учебник
Курсы
Онлайн-курс «iOS-разработчик»
Курсы по подписке
Копошилка
Статьи
Видео
Войти
Вход
Сброс пароля
 
Найти:
 
Учебник
Курсы
Онлайн-курс «iOS-разработчик»
Курсы по подписке
Копошилка
Статьи
Видео
Войти
Вход
Сброс пароля
 
Найти:
24 подсказки по работе в Xcode
 
  21.02.2022  
swiftbook Туториалы 
24 подсказки по работе в Xcode 
Xcode — это огромная программа, и если вы сможете использовать в работе даже пару приемов, которые сделают вашу работу более эффективной, вы сможете сэкономить несколько часов каждую неделю. В этой статье я хочу познакомить вас с 24 подсказками по работе в Xcode, которые помогут вам писать код быстрее, создавать более качественные тесты и более эффективно перемещаться по большим проектам — уверен, что каждый найдет что-то для себя!
1. Генерация инициализаторов класса
Swift может синтезировать почленные инициализаторы для структур, но не для классов. К счастью, Xcode может сгенерировать для нас код: выберите имя вашего класса, затем перейдите в меню Xcode и выберите Refactor > Generate Memberwise Initializer. Готово!
2. Переопределение среды
При создании программного обеспечения важно убедиться, что ваше приложение работает для всех. Отличный способ сделать это — использовать панель переопределения среды Xcode, которая позволяет настраивать размер динамического типа, параметры доступности и внешний вид в одном месте.
3. Выбор блоков кода
Вы, вероятно, уже знаете, что можете щелкнуть после любой открывающей { или закрывающей } скобки, чтобы Xcode подсветил соответствующую фигурную скобку, но еще один полезный совет заключается в том, что вы можете дважды щелкнуть на фигурную скобку, чтобы выбрать весь блок кода, который она содержит.
4. Проверка нашего правописания
Xcode может проверить правильность написания и даже понимает, что сamelCaseNames следует рассматривать как отдельные слова. Перейдите в меню Xcode и выберите Format > Spelling и Grammar > Check Spelling While Typing и Xcode проверит ваш код на наличие опечаток.
5. Исправление всех проблем
Если у вас есть файл Swift, содержащий много ошибок, вы можете использовать подсказки Xcode, чтобы попытаться исправить ошибки  по очереди. Но более быстрый способ — перейти в меню и выбрать Fix All Issues, чтобы сразу применить все исправления. (Убедитесь и перепроверьте, какие изменения были внесены!)
6. Удаление результатов поиска
Когда вы выполняете поиск с помощью навигатора поиска в Xcode, вы можете щелкнуть, чтобы просмотреть отдельные результаты и внести любые изменения, которые вы хотите. Но когда вы закончите, я рекомендую вам нажать Backspace, чтобы удалить этот элемент поиска из результатов, чтобы вы могли видеть, какие результаты остались для проверки.
7. Возобновление холста SwiftUI
Это самый простой совет, который я знаю, но он сэкономит вам время, если вы его еще не знаете. Всякий раз, когда вы видите, что автоматическое обновление предварительного просмотра приостанавливается на холсте SwiftUI, нажмите Opt+Cmd+P, чтобы возобновить предварительный просмотр. Или используйте Opt+Cmd+Return, чтобы полностью скрыть холст.
8. Тайлинг симулятора
Если вы часто переходите с Xcode на симулятор, разместите их рядом друг с другом. При активном симуляторе перейдите в окно меню и выберите Tile Window To Right Of Screen (Разместить окно справа от экрана), затем выберите Xcode слева. Отрегулируйте положение.
9. Расширение автозаполнения
В Xcode встроено отличное автозавершение кода, но иногда, когда вы прокручиваете параметры, вы можете обнаружить, что имена слишком длинные и не вмещаются. К счастью, вы можете просто взять край всплывающего окна автозаполнения и перетащить его так широко, как хотите!
10. Быстрое переключение брейкпоинтов
Брейкпоинты отлично подходят для дебаггинга — поместите их, выбрав номер строки, или удалите их, щелкнув правой кнопкой мыши и выбрав Delete Breakpoint. Вы также можете удалить один, перетащив его, но быстрый способ — использовать Cmd+\ для переключения брейкпоинта на текущей строке.
11. Рандомизация тестового порядка
Иногда выходные данные одного теста влияют на входные данные другого. У Xcode есть решение: перейдите в меню Product, удерживайте нажатой кнопку Option, затем нажмите Test. Во вкладке Info нажмите Options, затем установите флажок на Randomize Execution Order, чтобы каждый раз запускать тесты в другом порядке.
12. Фильтрация jump bar
Jump bar в Xcode (Ctrl-6) — лучший способ быстро перемещаться по длинным файлам, позволяя просматривать все свойства и методы в вашем файле. Для более длинных файлов начните вводить текст с открытым jump bar и Xcode отфильтрует их — трюк, который также работает для выбора устройства.
13. Генерация файла интерфейса
Часто хочется получить представление о том, как работает какой-то код. Если вы нажмете Ctrl+Cmd+Up, Xcode создаст сгенерированный интерфейс, показывающий свойства, сигнатуры функций и комментарии. Если вы нажмете ее еще раз, Xcode перенесет вас к тестам для этого файла, если они существуют.
14. Быстрое добавление комментариев
Одним из моих наиболее часто используемых сочетаний клавиш Xcode является Cmd+/ для переключения комментариев к текущей строке или выделению, но другой полезный — это Option+Cmd+/ — нажмите его непосредственно перед методом, чтобы Xcode сгенерировал комментарий к документации, включая его параметры.
15. Поиск файлов быстрее
По мере роста ваших проектов становится все труднее использовать навигатор проекта, чтобы что-то найти. Есть два решения: одно — щелкнуть правой кнопкой мыши любую группу файлов и выбрать Sort By Name (Сортировать по имени), чтобы упорядочить их по алфавиту, а второе — ввести в поле фильтра внизу.
16. Отображение исходных изменений во время выполнения
Xcode может обрабатывать исходные изменения прямо в своем редакторе. Чтобы попробовать, включите Show Source Control Changes (Показать изменения системы управления версиями) в настройках Xcode, а затем внесите изменения. Слева вы увидите синюю полосу, но если вы щелкнете по ней и выберите Show Change (Показать изменение), Xcode покажет вам старый и новый встроенный код.
17. Поиск кода на миникарте
Миникарта Xcode помогает нам просматривать длинные файлы — включите ее в меню Editor > Minimap. Когда вы наводите на него указатель мыши, мини-карта сообщает вам название метода, который вы закончили. Вы также можете удерживать Cmd, чтобы показать названия всего, а затем щелкнуть имя, чтобы перейти к нему.
18. Повторно запустите последний тест
Часто бывает, что были написаны неудачные тесты, особенно при использовании TDD. К счастью, в Xcode есть сочетание клавиш для запуска только последнего теста, что быстрее, чем запуск всего: Ctrl+Opt+Cmd+G. У Джона Рида есть специальное название, которое облегчает запоминание: «Smash Go!»
19. Переназначение бесполезных клавиш
Некоторые замечательные сочетания клавиш (например, Shift+Cmd+O для быстрого открытия) находятся рядом с бесполезными сочетаниями клавиш (Shift+Cmd+P, когда вы хотите напечатать код). Удаление бесполезных клавиш занимает всего несколько секунд, и вы даже можете переназначить такие сочетания, как Cmd + P, для возобновления предварительного просмотра SwiftUI.
20. Усовершенствуем ваши поиски
Все заголовки в навигаторе поиска Xcode могут быть изменены: Find можно «Заменить», Text может быть ссылкой или регулярным выражением, а Containing может быть сопоставлением, запуском и т. д. Вы также можете щелкнуть увеличительное стекло, чтобы просмотреть недавние поисковые запросы — при выборе одного из них он повторяется.
21. Изменение отступа кода
Если вы скопировали код откуда-то еще, то есть большая вероятность, что вы вставите что-то с неправильным отступом. Xcode может исправить это с помощью одного ярлыка: выберите код, который вы хотите исправить, затем нажмите Ctrl+I, чтобы изменить его отступ.
22. Тестирование встроенных покупок
Вы можете протестировать покупки в приложении без App Store Connect. Создайте новый файл конфигурации StoreKit и добавьте свой IAP. Теперь перейдите в меню Product, удерживайте нажатой клавишу Option и нажмите Run. На вкладке Options измените конфигурацию StoreKit, и теперь вы будете использовать тестовую IAP.
23. Изучение вариантов сборки
Существует множество настроек для управления тем, как Xcode собирает ваш код, но трудно вспомнить, что они все делают. К счастью, вы можете выбрать один из них и использовать Quick Help inspector, чтобы просмотреть документацию по большинству параметров, или, удерживая клавишу Option, дважды щелкнуть, чтобы получить встроенную справку.
24. Закрепление превью
Холст — отличный способ предварительного просмотра макетов во время работы, но его сложнее использовать, когда одно вью разделено на несколько файлов. Чтобы упростить задачу, используйте пин внизу для сохранения текущего предварительного просмотра активным, что позволит вам изменить один файл во время предварительного просмотра другого.
Оригинал статьи
Комментарии Отменить ответДля отправки комментария вам необходимо авторизоваться. 
 
SwiftBook Самое крупное сообщество iOS разработчиков на языке Swift
О нас
Мы в социальных сетяхYouTubeVKontakteFacebookЧат_Telegram
instagramПолезноеPodlodka
Подпишись на новости 
   Политика конфиденциальности
Пользовательское соглашение
Найти:
  © Акулов И.Б., 2014-2021      
 
Сообщить об опечатке
Текст, который будет отправлен нашим редакторам:
Ваш комментарий (необязательно):
Отправить
Отмена
tag:blogger.com,1999:blog-39415539074308991632024-03-19T20:39:40.824-04:00Python InsiderPython core development news and information.Doug Hellmannhttps://www.blogger.com/profile/01892352754222143463noreply@blogger.comBlogger2582625tag:blogger.com,1999:blog-3941553907430899163.post-14801642054615450372022-10-25T00:00:00.000-04:002022-10-25T00:00:14.521-04:00Python 3.12.0 alpha 1 released<p>&nbsp;As Pablo released Python 3.11.0 final earlier today, now it's my turn to release Python 3.12.0 alpha 1.</p><b><div><p style="background-color: white; font-family: Arial, Tahoma, Helvetica, FreeSans, sans-serif; font-size: 13px; font-weight: 400;"><a href="https://www.python.org/downloads/release/python-3120a1/"><span style="color: #0b5394;">https://www.python.org/downloads/release/python-3120a1/</span></a></p></div><div><b><br /></b></div>This is an early developer preview of Python 3.12<br /></b><br /><h1 style="text-align: left;"><span style="font-size: medium;">Major new features of the 3.12 series, compared to 3.11</span></h1><br />Python 3.12 is still in development. This release, 3.12.0a1, is the first of seven planned alpha releases.<br /><br />Alpha releases are intended to make it easier to test the current state of new features and bug fixes and to test the release process.<br /><br />During the alpha phase, features may be added up until the start of the beta phase (2023-05-08) and, if necessary, may be modified or deleted up until the release candidate phase (2023-07-31). Please keep in mind that this is a preview release and its use is&nbsp;<b><i>not&nbsp;</i></b>recommended for production environments.<br /><br />Many new features for Python 3.12 are still being planned and written. Among the new major new features and changes so far:<br /><ul><li style="margin-left: 15px;">The deprecated `wstr` and `wstr_length` members of the C implementation of unicode objects were removed, per&nbsp;<a data-saferedirecturl="https://www.google.com/url?q=https://peps.python.org/pep-0623/&amp;source=gmail&amp;ust=1666756135375000&amp;usg=AOvVaw0vQevcavj1x48CoyLQZ8_i" href="https://peps.python.org/pep-0623/" target="_blank"><span style="color: #0b5394;">PEP 623</span></a>.</li><li style="margin-left: 15px;">In the `unittest` module, a number of long deprecated methods and classes were removed. (They had been deprecated since Python 3.1 or 3.2).</li><li style="margin-left: 15px;">The deprecated `smtpd` module has been removed.</li><li style="margin-left: 15px;">A number of other old, broken and deprecated functions, classes and methods have been removed.</li><li style="margin-left: 15px;">(Hey, **fellow core developer,** if a feature you find important is&nbsp;missing from this list,&nbsp;<a href="mailto:thomas@python.org" target="_blank"><span style="color: #0b5394;">let Thomas&nbsp;know</span></a>.)</li></ul>The next pre-release of Python 3.12 will be 3.12.0a2, currently scheduled for 2022-11-14.<br /><br /><h1 style="text-align: left;"><span style="font-size: medium;">More resources</span></h1><ul><li style="margin-left: 15px;"><a data-saferedirecturl="https://www.google.com/url?q=https://docs.python.org/3.12&amp;source=gmail&amp;ust=1666756135375000&amp;usg=AOvVaw2smNo0CylnKSrolTudp839" href="https://docs.python.org/3.12" target="_blank"><span style="color: #0b5394;">Online Documentation</span></a></li><li style="margin-left: 15px;"><a data-saferedirecturl="https://www.google.com/url?q=https://www.python.org/dev/peps/pep-0693/&amp;source=gmail&amp;ust=1666756135375000&amp;usg=AOvVaw2zuJggv-yBrVuJg1NBMdzx" href="https://www.python.org/dev/peps/pep-0693/" target="_blank"><span style="color: #0b5394;">PEP 693</span></a>, the 3.12 Release Schedule</li><li style="margin-left: 15px;">Report bugs at&nbsp;<a data-saferedirecturl="https://www.google.com/url?q=https://github.com/python/cpython/issues&amp;source=gmail&amp;ust=1666756135375000&amp;usg=AOvVaw3Lewla_XmiJ7TSqGmLmpGV" href="https://github.com/python/cpython/issues" target="_blank"><span style="color: #0b5394;">https://github.com/python/<wbr></wbr>cpython/issues</span></a>.</li><li style="margin-left: 15px;">Help fund Python and its community at&nbsp;<a data-saferedirecturl="https://www.google.com/url?q=https://www.python.org/psf/donations/&amp;source=gmail&amp;ust=1666756135375000&amp;usg=AOvVaw3q6f1GSHCFtdlTpk9Ys0aK" href="https://www.python.org/psf/donations/" target="_blank"><span style="color: #0b5394;">https://www.python.org/psf/<wbr></wbr>donations/</span></a>.</li></ul><br /><h3 style="text-align: left;"><span style="font-size: medium;">And now for something completely different</span></h3><br /><span style="color: #0b5394;"><a data-saferedirecturl="https://www.google.com/url?q=https://twitter.com/brian_bilston/status/1579378460610662401&amp;source=gmail&amp;ust=1666756135375000&amp;usg=AOvVaw1T581InW5JgmVkhpWWQukK" href="https://twitter.com/brian_bilston/status/1579378460610662401" target="_blank"><span style="color: #0b5394;">This is Not the Poem that I Had Hoped to Write</span></a><br /></span><br /><span style="font-family: verdana, sans-serif;"><span style="font-size: x-small;">This is not the poem that I had hoped to write<br />when I sat at my desk and the page was white.<br />You see, there were other words that I’d had in mind,<br />yet this is what I leave behind.<br /><br />I thought it was a poem to eradicate war;<br />one of such power, it would heal all the sores<br />of a world torn apart by conflict and schism.<br />But it isn’t.<br /><br />Lovers, I’d imagined, would quote from it daily,<br />Mothers would sing it to soothe crying babies.<br />And whole generations would be given new hope.<br />Nope.<br /><br />I had grand aspirations. Believe me, I tried.<br />Humanity examined with lessons applied.<br />But the right words escaped me; so often they do.<br />Have these in lieu.</span><br /></span><br /><span style="color: #0b5394;"><a data-saferedirecturl="https://www.google.com/url?q=https://twitter.com/brian_bilston&amp;source=gmail&amp;ust=1666756135375000&amp;usg=AOvVaw2VgEN02yURJlifR4O_7FbH" href="https://twitter.com/brian_bilston" target="_blank"><span style="color: #0b5394;">Brian Bilston</span></a><br /></span><br /><h2 style="text-align: left;"><span style="font-size: medium;">Enjoy the new releases</span></h2>Thanks to all of the many volunteers who help make Python Development and these releases possible! Please consider supporting our efforts by volunteering yourself or through organization contributions to the Python Software Foundation.<br /><br /><div><a href="https://www.python.org/psf/"><span style="color: #0b5394;">https://www.python.org/psf/</span></a></div><br />Your release team,<br />Thomas Wouters<br />Ned Deily<br />Steve Dower<span style="color: #888888;"><br /><div><br style="background-color: white; font-family: Arial, Helvetica, sans-serif; font-size: small;" /></div></span>Thomas Woutershttps://www.blogger.com/profile/10346112333332923135noreply@blogger.comtag:blogger.com,1999:blog-3941553907430899163.post-20602341480464696342022-10-24T16:29:00.003-04:002022-10-24T16:29:32.834-04:00Python 3.11.0 is now available<p>&nbsp;</p><div class="separator" style="clear: both; text-align: center;"><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEickKZquPSoujo5pHqw1C1q7m4_kEMV27tJ-7lIt1sxNnzvPQMpKso_RVbnrnkq1x4rQ2Ybx8zmTy-LmL3K5Ye3fP_bfwTdMRSFhFRCGcLXLNNtlj4mEurgdSvz5msOKq1fmLGKVfeXxxVh9W_SzLCfK9M5HsviItUSLPy19qTWch9mMh5YWpmCjC0a/s507/311logo.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" data-original-height="500" data-original-width="507" height="316" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEickKZquPSoujo5pHqw1C1q7m4_kEMV27tJ-7lIt1sxNnzvPQMpKso_RVbnrnkq1x4rQ2Ybx8zmTy-LmL3K5Ye3fP_bfwTdMRSFhFRCGcLXLNNtlj4mEurgdSvz5msOKq1fmLGKVfeXxxVh9W_SzLCfK9M5HsviItUSLPy19qTWch9mMh5YWpmCjC0a/s320/311logo.png" width="320" /></a></div><br /><p></p><h2>This is the release of Python 3.11.0</h2><p>Python 3.11 is finally released. In the CPython release team, we have put a lot of effort into making 3.11 the best version of Python possible. Better tracebacks, faster Python, exception groups and except*, typing improvements and much more. Get it here:</p><p><a href="https://www.python.org/downloads/release/python-3110/">https://www.python.org/downloads/release/python-3110/</a></p><h2><span style="font-family: inherit; font-size: large;">Major new features of the 3.11 series, compared to 3.10</span></h2><div class="gmail_default"><p><span style="font-family: inherit;"><span>Among the new major new features and changes so far:</span><span><br /></span></span></p><ul style="background-color: white; clear: both; margin: 0px; padding: 0px 0px 0px 40px;"><li style="color: #222222;"><span style="font-family: inherit;"><a href="https://www.python.org/dev/peps/pep-0657/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 657</a>&nbsp;– Include Fine-Grained Error Locations in Tracebacks</span></li><li style="color: #222222;"><span style="font-family: inherit;"><a href="https://www.python.org/dev/peps/pep-0654/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 654</a>&nbsp;– Exception Groups and except*</span></li><li style="color: #222222;"><span style="font-family: inherit;"><a href="https://www.python.org/dev/peps/pep-0673/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 673</a>&nbsp;– Self Type</span></li><li style="color: #222222;"><span style="font-family: inherit;"><a href="https://www.python.org/dev/peps/pep-0646/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 646</a>&nbsp;– Variadic Generics</span></li><li style="color: #222222;"><a href="https://www.python.org/dev/peps/pep-0680/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 680</a>&nbsp;– tomllib: Support for Parsing TOML in the Standard Library</li><li style="color: #222222;"><a href="https://www.python.org/dev/peps/pep-0675/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 675</a>&nbsp;– Arbitrary Literal String Type</li><li style="color: #222222;"><a href="https://www.python.org/dev/peps/pep-0655/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 655</a>&nbsp;– Marking individual TypedDict items as required or potentially-missing</li><li style="color: #222222;"><a href="https://bugs.python.org/issue46752" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">bpo-46752</a>&nbsp;– Introduce task groups to asyncio</li><li style="color: #222222;"><a href="https://www.python.org/dev/peps/pep-0681/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 681</a>&nbsp;– Data Class Transforms</li><li style="color: #222222;"><a href="https://github.com/python/cpython/issues/34627/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">bpo-433030</a>– Atomic grouping ((?&gt;…)) and possessive quantifiers (<code style="background: var(--hljs-bg); color: var(--primary-very-high); font-family: Consolas, Menlo, Monaco, &quot;Lucida Console&quot;, &quot;Liberation Mono&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, monospace; font-size: 15.008px;">*+, ++, ?+, {m,n}+</code><span face="Arial, sans-serif" style="font-size: 15.008px;">) are now supported in regular expressions.</span></li><li><span style="color: #222222;">The&nbsp;<a href="https://github.com/faster-cpython" target="_blank">Faster Cpython Project</a>&nbsp;is already yielding some exciting results. Python 3.11 is up to 10-60% faster than Python 3.10. On average, we measured a 1.22x speedup on the standard benchmark suite. See&nbsp;<a href="https://docs.python.org/3.11/whatsnew/3.11.html#faster-cpython" target="_blank">Faster CPython for details.</a></span></li></ul><div><p style="background-color: white;"><span style="background-color: transparent; font-family: inherit;">More resources</span></p></div><ul style="background-color: white; clear: both; color: #222222; margin: 0px; padding: 0px 0px 0px 40px;"><li><a href="https://docs.python.org/3.10/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">Online Documentation</a></li></ul><ul style="background-color: white; clear: both; color: #222222; margin: 0px; padding: 0px 0px 0px 40px;"><li><a href="https://www.python.org/dev/peps/pep-0664/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 664</a>, 3.11 Release Schedule</li><li><span style="font-family: inherit; font-size: small;">Report bugs at&nbsp;<a href="https://bugs.python.org/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">https://bugs.python.org</a>.</span></li></ul><ul style="background-color: white; clear: both; color: #222222; margin: 0px; padding: 0px 0px 0px 40px;"><li><span style="font-family: inherit; font-size: small;"><a href="https://www.python.org/psf/donations/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">Help fund Python and its community</a>.</span></li></ul><p></p></div><div class="gmail_default"><h2><span style="font-family: inherit; font-size: medium;">And now for something completely different</span></h2><p>When a spherical non-rotating body of a critical radius collapses under its own gravitation under general relativity, theory suggests it will collapse to a single point. This is not the case with a rotating black hole (a Kerr black hole). With a fluid rotating body, its distribution of mass is not spherical (it shows an equatorial bulge), and it has angular momentum. Since a point cannot support rotation or angular momentum in classical physics (general relativity being a classical theory), the minimal shape of the singularity that can support these properties is instead a ring with zero thickness but non-zero radius, and this is referred to as a ringularity or Kerr singularity.</p><p>This kind of singularity has the following peculiar property. The spacetime allows a geodesic curve (describing the movement of observers and photons in spacetime) to pass through the center of this ring singularity. The region beyond permits closed time-like curves. Since the trajectory of observers and particles in general relativity are described by time-like curves, it is possible for observers in this region to return to their past. This interior solution is not likely to be physical and is considered a purely mathematical artefact.</p><p>There are some other interesting free-fall trajectories. For example, there is a point in the axis of symmetry that has the property that if an observer is below this point, the pull from the singularity will force the observer to pass through the middle of the ring singularity to the region with closed time-like curves and it will experience repulsive gravity that will push it back to the original region, but then it will experience the pull from the singularity again and will repeat this process forever. This is, of course, only if the extreme gravity doesn’t destroy the observer first.</p></div><div class="gmail_default"><h2><span style="font-family: inherit; font-size: medium;">We hope you enjoy the new releases!</span></h2><span style="font-family: inherit;">Thanks to all of the many volunteers who help make Python Development and these releases possible! Please consider supporting our efforts by volunteering yourself or through organization contributions to the Python Software Foundation.<br /></span></div><div class="gmail_default"><span style="font-family: inherit;"><br /></span></div><div class="gmail_default"><span style="font-family: inherit;"><a href="https://www.python.org/psf/"><span style="font-family: inherit;">https://www.python.org/psf/</span><br /></a></span></div><div class="gmail_default"><p><span style="font-family: inherit;">Your friendly release team,<br /><a href="https://discuss.python.org/u/nad">Ned Deily @nad&nbsp;</a><br /><a href="https://discuss.python.org/u/steve.dower">Steve Dower @steve.dower</a>&nbsp;<br /><a href="https://discuss.python.org/u/pablogsal">Pablo Galindo Salgado @pablogsal</a></span></p></div>Pablo Galindohttps://www.blogger.com/profile/07923137967169776470noreply@blogger.comtag:blogger.com,1999:blog-3941553907430899163.post-39111138395679712102022-10-24T12:05:00.000-04:002022-10-24T12:17:08.782-04:00Python Core Development Sprint 2022: 3.11 and beyond!<p><span style="caret-color: rgb(51, 51, 51); color: #333333; font-family: &quot;Helvetica Neue&quot;, -apple-system; font-size: 16px;">From October 3rd to October 7th a group of Python core developers gathered for a sprint hosted at Google. The event was mainly sponsored by Google and the Python Software Foundation. The core team used to do this annually between 2016 and 2019. It was high time to return to this tradition as the remote online sprints organized in years 2020 and 2021 proved to be a poor substitution for in-person collaboration.</span></p><p></p><div class="separator" style="clear: both; text-align: center;"><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhWb9gBRfAR3nyw4TdiCuIuywPW8JL0ilByfbb1WEx9G7JsN_L0TaA92pDQooIN0jZlERcdRbUUGSvGjc-N-iGnIJ3vMEGWsCj7zMJ4NPmUL8O6EldHr3zPGrubRe-GhtIOHE6qlMH1EXQFbCfBI6npywvpAyevS3YWMgjW0PW5G4ea0D4ZyQ_0D09g7A/s3280/core-sprint-2022.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img alt="A group photo of the sprint participants with 25 people, mostly smiling" border="0" data-original-height="2470" data-original-width="3280" height="482" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhWb9gBRfAR3nyw4TdiCuIuywPW8JL0ilByfbb1WEx9G7JsN_L0TaA92pDQooIN0jZlERcdRbUUGSvGjc-N-iGnIJ3vMEGWsCj7zMJ4NPmUL8O6EldHr3zPGrubRe-GhtIOHE6qlMH1EXQFbCfBI6npywvpAyevS3YWMgjW0PW5G4ea0D4ZyQ_0D09g7A/w640-h482/core-sprint-2022.jpg" width="640" /></a></div><br /><span style="caret-color: rgb(51, 51, 51); color: #333333; font-family: &quot;Helvetica Neue&quot;, -apple-system; font-size: 16px;"><br /></span><p></p><p style="box-sizing: border-box; caret-color: rgb(51, 51, 51); color: #333333; font-family: &quot;Helvetica Neue&quot;, -apple-system; font-size: 16px; line-height: 24px; margin-bottom: 16px; margin-top: 0px;">Participating in a core sprint that isn't following a public tech conference is unique in many ways. We come fresh and ready to work on Python for the entire week, without the brain fog that builds up during a multi-day conference. With other contributors there with us, it's easier to focus on the task at hand without professional or private interruptions. Finally, on a human level, we really missed each other. And some of us never met in real life before.</p><p style="box-sizing: border-box; caret-color: rgb(51, 51, 51); color: #333333; font-family: &quot;Helvetica Neue&quot;, -apple-system; font-size: 16px; line-height: 24px; margin-bottom: 16px; margin-top: 0px;">The sprint was the most active week on the repository in five years. It managed to overshadow&nbsp;<a href="https://blog.python.org/2016/09/python-core-development-sprint-2016-36.html" style="box-sizing: border-box; color: #4078c0; cursor: pointer; text-decoration: none;">the sprint at Meta in 2016</a>&nbsp;which happened shortly before the 3.6 beta freeze, at the time said to be "the most productive [single] week for Python ever". During the five days of the sprint there were 344 commits to our five active branches that span versions of Python from 3.7 to 3.12. 157 of those were made to the&nbsp;<code style="background-color: rgba(0, 0, 0, 0.04); border-radius: 3px; border: 1px solid rgba(0, 0, 0, 0.04); box-sizing: border-box; font-family: &quot;Source Code Pro&quot;, Courier, monospace, &quot;Liberation Mono&quot;, Menlo; font-size: 14px; font-stretch: normal; line-height: 28px; margin: 0px; padding: 0.2em 0px; transition: background 0.5s ease-out 0s;">main</code>&nbsp;branch alone, which will end up being Python 3.12. Some fixes were pretty deep, like the&nbsp;<a href="https://github.com/python/cpython/pull/97996" style="box-sizing: border-box; color: #4078c0; cursor: pointer; text-decoration: none;">sneaky 3.11 crasher</a>&nbsp;that only reproduces when performing a full pytest run on a large async app, and disappears once you start diagnosing it. Progress was made on putting full f-string parsing into the grammar of the language, which will allow some new constructs that I'm sure will raise more than one eyebrow when the time comes!</p><p style="box-sizing: border-box; caret-color: rgb(51, 51, 51); color: #333333; font-family: &quot;Helvetica Neue&quot;, -apple-system; font-size: 16px; line-height: 24px; margin-bottom: 16px; margin-top: 0px;">Using the opportunity of meeting in person, the sprint week contained some additional events like a Q&amp;A meeting between the core developers and the Steering Council. We discussed the process for core mentorship, open undecided PEPs like PEP 649, or the future of the C API. To be clear, no decisions about the Python programming language are made behind closed doors. The meetings during the sprint help reaching consensus but continue in our dedicated online communications channels like&nbsp;<a href="https://discuss.python.org/" style="box-sizing: border-box; color: #4078c0; cursor: pointer; text-decoration: none;">discuss.python.org</a>&nbsp;and the&nbsp;<a href="https://www.python.org/community/lists/" style="box-sizing: border-box; color: #4078c0; cursor: pointer; text-decoration: none;">python-dev mailing list</a>. All changes require opening&nbsp;<a href="https://github.com/python/cpython/issues" style="box-sizing: border-box; color: #4078c0; cursor: pointer; text-decoration: none;">issues on GitHub</a>, and larger ones require going through&nbsp;<a href="https://peps.python.org/pep-0001/" style="box-sizing: border-box; color: #4078c0; cursor: pointer; text-decoration: none;">the PEP process</a>.</p><p style="box-sizing: border-box; caret-color: rgb(51, 51, 51); color: #333333; font-family: &quot;Helvetica Neue&quot;, -apple-system; font-size: 16px; line-height: 24px; margin-bottom: 16px; margin-top: 0px;">A few interest groups gathered to meet during the sprint as well. Most of those meetings were hybrid, meaning that they included remote participants dialing in. The documentation experts, the core workflow experts, the asyncio experts, the code of conduct working group, and the C API interest group all met to discuss their respective topics.</p><p style="box-sizing: border-box; caret-color: rgb(51, 51, 51); color: #333333; font-family: &quot;Helvetica Neue&quot;, -apple-system; font-size: 16px; line-height: 24px; margin-bottom: 16px; margin-top: 0px;">One highlight of the event that most participants brought up is rapid knowledge sharing that it allowed. Pair programming, whiteboard design, or simply talking somebody through a problem, happened often. Among the topics in this vein the&nbsp;<a href="https://github.com/python/cpython/blob/c2370763793734aa6be8dbc326b70132770eaeaa/Python/ceval.c#L1141" style="box-sizing: border-box; color: #4078c0; cursor: pointer; text-decoration: none;">eval breaker</a>&nbsp;came up often, as did asyncio and typing topics. Ken Jin presented a summary of the performance improvements coming in Python 3.11, and Dustin Ingram talked about Sigstore for Python releases. Speaking of security, Google provided core developers attending the sprint with FIDO2 hardware security keys to additionally secure their access to GitHub and PyPI.</p><p style="box-sizing: border-box; caret-color: rgb(51, 51, 51); color: #333333; font-family: &quot;Helvetica Neue&quot;, -apple-system; font-size: 16px; line-height: 24px; margin-bottom: 16px; margin-top: 0px;">Some work looks further into the future. Ken Jin and C.A.M. Gerlach authored&nbsp;<a href="https://peps.python.org/pep-0699/" style="box-sizing: border-box; color: #4078c0; cursor: pointer; text-decoration: none;">a new PEP</a>&nbsp;during the sprint as well, and&nbsp;<a href="https://peps.python.org/pep-0688/" style="box-sizing: border-box; color: #4078c0; cursor: pointer; text-decoration: none;">PEP 688</a>&nbsp;received a rewrite from Jelle Zijlstra. Carl Meyer worked on dict watchers and&nbsp;<a href="https://github.com/python/cpython/pull/97875" style="box-sizing: border-box; color: #4078c0; cursor: pointer; text-decoration: none;">callbacks when a type is modified</a>, both needed to allow for a pluggable JIT.</p><p style="box-sizing: border-box; caret-color: rgb(51, 51, 51); color: #333333; font-family: &quot;Helvetica Neue&quot;, -apple-system; font-size: 16px; line-height: 24px; margin-bottom: 16px; margin-top: 0px;">A vote to nominate a new core developer, Alex Waygood,&nbsp;<a href="https://discuss.python.org/t/vote-to-promote-alex-waygood/19690?u=ambv" style="box-sizing: border-box; color: #4078c0; cursor: pointer; text-decoration: none;">was opened during the sprint</a>&nbsp;and passed unanimously. Alex was present at the sprint as a collaborating triager and mentee.</p><p style="box-sizing: border-box; caret-color: rgb(51, 51, 51); color: #333333; font-family: &quot;Helvetica Neue&quot;, -apple-system; font-size: 16px; line-height: 24px; margin-bottom: 16px; margin-top: 0px;">Huge thanks to everybody that participated! The list below is in alphabetical order, along with thanks to the organizations that helped finance their attendance. We also acknowledge that travel for a multi-day event separates people from their families. We're grateful for their understanding. In the end, we had 28 in-person participants from 8 countries on 3 continents:</p><ul style="box-sizing: border-box; caret-color: rgb(51, 51, 51); color: #333333; font-family: &quot;Helvetica Neue&quot;, -apple-system; font-size: 16px; line-height: 24px; margin-bottom: 16px; margin-left: 20px; margin-top: 0px; padding: 0px;"><li style="box-sizing: border-box; line-height: 24px; list-style-position: outside;">Brandt Bucher</li><li style="box-sizing: border-box; line-height: 24px; list-style-position: outside;">Brett Cannon (Microsoft)</li><li style="box-sizing: border-box; line-height: 24px; list-style-position: outside;">Ned Deily</li><li style="box-sizing: border-box; line-height: 24px; list-style-position: outside;">Martin Demello (Google)</li><li style="box-sizing: border-box; line-height: 24px; list-style-position: outside;">C.A.M. Gerlach</li><li style="box-sizing: border-box; line-height: 24px; list-style-position: outside;">Larry Hastings</li><li style="box-sizing: border-box; line-height: 24px; list-style-position: outside;">Dustin Ingram (Google)</li><li style="box-sizing: border-box; line-height: 24px; list-style-position: outside;">Ken Jin</li><li style="box-sizing: border-box; line-height: 24px; list-style-position: outside;">Hugo van Kemenade</li><li style="box-sizing: border-box; line-height: 24px; list-style-position: outside;">Senthil Kumaran</li><li style="box-sizing: border-box; line-height: 24px; list-style-position: outside;">Łukasz Langa</li><li style="box-sizing: border-box; line-height: 24px; list-style-position: outside;">Carl Meyer (Meta)</li><li style="box-sizing: border-box; line-height: 24px; list-style-position: outside;">Joannah Nanjekye</li><li style="box-sizing: border-box; line-height: 24px; list-style-position: outside;">Lysandros Nikolaou</li><li style="box-sizing: border-box; line-height: 24px; list-style-position: outside;">Benjamin Peterson</li><li style="box-sizing: border-box; line-height: 24px; list-style-position: outside;">Guido van Rossum (Microsoft)</li><li style="box-sizing: border-box; line-height: 24px; list-style-position: outside;">Pablo Galindo Salgado (Bloomberg)</li><li style="box-sizing: border-box; line-height: 24px; list-style-position: outside;">Yury Selivanov (EdgeDB)</li><li style="box-sizing: border-box; line-height: 24px; list-style-position: outside;">Mariatta (Google)</li><li style="box-sizing: border-box; line-height: 24px; list-style-position: outside;">Mark Shannon (Microsoft)</li><li style="box-sizing: border-box; line-height: 24px; list-style-position: outside;">Eric Smith</li><li style="box-sizing: border-box; line-height: 24px; list-style-position: outside;">Gregory P. Smith (Google)</li><li style="box-sizing: border-box; line-height: 24px; list-style-position: outside;">Eric Snow (Microsoft)</li><li style="box-sizing: border-box; line-height: 24px; list-style-position: outside;">Barry Warsaw (Microsoft)</li><li style="box-sizing: border-box; line-height: 24px; list-style-position: outside;">Alex Waygood</li><li style="box-sizing: border-box; line-height: 24px; list-style-position: outside;">Frank Wierzbicki</li><li style="box-sizing: border-box; line-height: 24px; list-style-position: outside;">Thomas Wouters (Google)</li><li style="box-sizing: border-box; line-height: 24px; list-style-position: outside;">Jelle Zijlstra (Quora)</li></ul><p style="box-sizing: border-box; caret-color: rgb(51, 51, 51); color: #333333; font-family: &quot;Helvetica Neue&quot;, -apple-system; font-size: 16px; line-height: 24px; margin-bottom: 16px; margin-top: 0px;">Special thanks to Greg for making the event happen!</p>Łukasz Langahttps://www.blogger.com/profile/01161413896843370614noreply@blogger.comtag:blogger.com,1999:blog-3941553907430899163.post-28089380967923835922022-10-11T15:44:00.015-04:002022-10-11T15:51:42.047-04:00Python versions 3.10.8, 3.9.15, 3.8.15, 3.7.15 now available<p><span style="font-family: inherit;"><em>Déjà vu?</em>&nbsp;Right, a month after the expedited releases we are doing the dance again. This coincides with the regular scheduled time for 3.10.8 but since we accrued a few fixes in 3.7 - 3.9 as well, we’re again releasing all four editions at the same time. We’re not promising to continue at this pace&nbsp;<span style="aspect-ratio: 20 / 20; height: 20px; vertical-align: middle; width: 20px;"><img alt=":sweat_smile:" class="emoji" height="20" loading="lazy" src="https://emoji.discourse-cdn.com/apple/sweat_smile.png?v=12" style="aspect-ratio: 20 / 20; border-style: none; height: 20px; vertical-align: middle; width: 20px;" title=":sweat_smile:" width="20" /></span></span></p><h2 style="ont-size: var(--font-up-2-rem); line-height: var(--line-height-medium); margin: 30px 0px 10px;"><span style="font-family: inherit;"><a class="anchor" href="https://discuss.python.org/c/committers/5#security-content-this-time-1" name="security-content-this-time-1" style="cursor: pointer; opacity: 0; overflow-wrap: break-word; text-decoration: none; transition: opacity 0.25s ease 0s;"></a>Security content this time</span></h2><ul style="caret-color: rgb(238, 238, 238); clear: both; margin: 1em 0px 1em 1.25em; padding: 0px 0px 0px 1.25em;"><li><span style="font-family: inherit;">CVE-2022-40674: bundled libexpat was upgraded from 2.4.7 to 2.4.9 which fixes a heap use-after-free vulnerability in function&nbsp;<code style="background: var(--hljs-bg); font-size: 1em;">doContent</code></span></li><li><span style="font-family: inherit;">gh-97616: a fix for a possible buffer overflow in&nbsp;<code style="background: var(--hljs-bg); font-size: 1em;">list *= int</code></span></li><li><span style="font-family: inherit;">gh-97612: a fix for possible shell injection in the example script&nbsp;<code style="background: var(--hljs-bg); font-size: 1em;">get-remote-certificate.py</code>(this issue originally had a CVE assigned to it, which its author withdrew)</span></li><li><span style="font-family: inherit;">gh-96577: a fix for a potential buffer overrun in&nbsp;<code style="background: var(--hljs-bg); font-size: 1em;">msilib</code></span></li></ul><h2 style="ont-size: var(--font-up-2-rem); line-height: var(--line-height-medium); margin: 30px 0px 10px;"><span style="font-family: inherit;"><a class="anchor" href="https://discuss.python.org/c/committers/5#python-3108-2" name="python-3108-2" style="cursor: pointer; opacity: 0; overflow-wrap: break-word; text-decoration: none; transition: opacity 0.25s ease 0s;"></a>Python 3.10.8</span></h2><p style="margin-top: 0px;">Get it here:&nbsp;<a href="https://www.python.org/downloads/release/python-3108/">https://www.python.org/downloads/release/python-3108/</a></p><p><span style="font-family: inherit;">As a bugfix release coming a mere month after an out-of-schedule security release, 3.10.8 is somewhat smaller compared to 3.9.8 released at the same stage of the release cycle a year ago. There’s 151 commits vs 204 in 3.9. It’s still a larger release than 3.10.7 at 113 commits. One way or the other, it’s worth&nbsp;<a href="https://docs.python.org/release/3.10.8/whatsnew/changelog.html" style="cursor: pointer; overflow-wrap: break-word; text-decoration: none;">checking out the change log</a>.</span></p><h2 style="ont-size: var(--font-up-2-rem); line-height: var(--line-height-medium); margin: 30px 0px 10px;"><span style="font-family: inherit;"><a class="anchor" href="https://discuss.python.org/c/committers/5#and-now-for-something-completely-different-3" name="and-now-for-something-completely-different-3" style="cursor: pointer; opacity: 0; overflow-wrap: break-word; text-decoration: none; transition: opacity 0.25s ease 0s;"></a>And now for something completely different</span></h2><p style="margin-top: 0px;"><span style="font-family: inherit;">Granular convection is a phenomenon where granular material subjected to shaking or vibration will exhibit circulation patterns similar to types of fluid convection.</span></p><p><span style="font-family: inherit;">It is sometimes described as the Brazil nut effect when the largest particles end up on the surface of a granular material containing a mixture of variously sized objects; this derives from the example of a typical container of mixed nuts, where the largest will be Brazil nuts.</span></p><p><span style="font-family: inherit;">The phenomenon is also known as the muesli effect since it is seen in packets of breakfast cereal containing particles of different sizes but similar densities, such as muesli mix.</span></p><p><span style="font-family: inherit;">Under experimental conditions, granular convection of variously sized particles has been observed forming convection cells similar to fluid motion.</span></p><h2 style="font-size: var(--font-up-2-rem); line-height: var(--line-height-medium); margin: 30px 0px 10px;"><span style="font-family: inherit;"><a class="anchor" href="https://discuss.python.org/c/committers/5#we-hope-you-enjoy-the-new-releases-4" name="we-hope-you-enjoy-the-new-releases-4" style="cursor: pointer; opacity: 0; overflow-wrap: break-word; text-decoration: none; transition: opacity 0.25s ease 0s;"></a>We hope you enjoy the new releases!</span></h2><p style="margin-top: 0px;"><span style="font-family: inherit;">Thanks to all of the many volunteers who help make Python Development and these releases possible! Please consider supporting our efforts by volunteering yourself or through organization contributions to the Python Software Foundation.</span></p><p><span style="font-family: inherit;">Your friendly release team,</span></p><p><span style="font-family: inherit;">Ned Deily&nbsp;<a class="mention" href="https://discuss.python.org/u/nad" style="background: var(--primary-low); border-radius: 8px; cursor: pointer; display: inline-block; font-size: 0.93em; font-weight: bold; overflow-wrap: break-word; padding: 0px 4px 1px; text-decoration: none;">@nad</a><br />Steve Dower&nbsp;<a class="mention" href="https://discuss.python.org/u/steve.dower" style="background: var(--primary-low); border-radius: 8px; cursor: pointer; display: inline-block; font-size: 0.93em; font-weight: bold; overflow-wrap: break-word; padding: 0px 4px 1px; text-decoration: none;">@steve.dower</a><br />Pablo Galindo Salgado&nbsp;<a class="mention" href="https://discuss.python.org/u/pablogsal" style="background: var(--primary-low); border-radius: 8px; cursor: pointer; display: inline-block; font-size: 0.93em; font-weight: bold; overflow-wrap: break-word; padding: 0px 4px 1px; text-decoration: none;">@pablogsal</a><br />Łukasz Langa&nbsp;<a class="mention" href="https://discuss.python.org/u/ambv" style="background: var(--primary-low); border-radius: 8px; cursor: pointer; display: inline-block; font-size: 0.93em; font-weight: bold; overflow-wrap: break-word; padding: 0px 4px 1px; text-decoration: none;">@ambv</a></span></p>Łukasz Langahttps://www.blogger.com/profile/01161413896843370614noreply@blogger.comtag:blogger.com,1999:blog-3941553907430899163.post-25062428407569298772022-09-12T07:26:00.006-04:002022-09-12T07:27:15.767-04:00Python 3.11.0rc2 is now available<h2 style="text-align: left;">This is the second release candidate of Python 3.11</h2><p><a href="https://www.python.org/downloads/release/python-3110rc2/">https://www.python.org/downloads/release/python-3110rc2/</a></p><p>This release, 3.11.0rc2, is the last preview before the final release of Python 3.11.0 on 2022-10-24.</p><p>Entering the release candidate phase, only reviewed code changes which are clear bug fixes are allowed between this release candidate and the final release. The second candidate and the last planned release preview is currently planned for Monday, 2022-09-05 while the official release is planned for Monday, 2022-10-24.</p><p>There will be no ABI changes from this point forward in the 3.11 series and the goal is that there will be as few code changes as possible.</p><h2>Modification of the final release</h2><p style="text-align: left;">Due to the fact that we needed to delay the last release candidate by a week and because of personal scheduling problems I am delaying the final release to 2022-10-24 (three weeks from the original date).</p><h2>Call to action</h2><div><img alt=":warning:" class="emoji" height="20" loading="lazy" src="https://emoji.discourse-cdn.com/apple/warning.png?v=12" style="aspect-ratio: 20 / 20; background-color: white; border-style: none; color: #222222; font-family: Arial, sans-serif; font-size: 15.008px; height: 20px; vertical-align: middle; width: 20px;" title=":warning:" width="20" /><img alt=":warning:" class="emoji" height="20" loading="lazy" src="https://emoji.discourse-cdn.com/apple/warning.png?v=12" style="aspect-ratio: 20 / 20; background-color: white; border-style: none; color: #222222; font-family: Arial, sans-serif; font-size: 15.008px; height: 20px; vertical-align: middle; width: 20px;" title=":warning:" width="20" /><img alt=":warning:" class="emoji" height="20" loading="lazy" src="https://emoji.discourse-cdn.com/apple/warning.png?v=12" style="aspect-ratio: 20 / 20; background-color: white; border-style: none; color: #222222; font-family: Arial, sans-serif; font-size: 15.008px; height: 20px; vertical-align: middle; width: 20px;" title=":warning:" width="20" /><img alt=":warning:" class="emoji" height="20" loading="lazy" src="https://emoji.discourse-cdn.com/apple/warning.png?v=12" style="aspect-ratio: 20 / 20; background-color: white; border-style: none; color: #222222; font-family: Arial, sans-serif; font-size: 15.008px; height: 20px; vertical-align: middle; width: 20px;" title=":warning:" width="20" /><img alt=":warning:" class="emoji" height="20" loading="lazy" src="https://emoji.discourse-cdn.com/apple/warning.png?v=12" style="aspect-ratio: 20 / 20; background-color: white; border-style: none; color: #222222; font-family: Arial, sans-serif; font-size: 15.008px; height: 20px; vertical-align: middle; width: 20px;" title=":warning:" width="20" /><img alt=":warning:" class="emoji" height="20" loading="lazy" src="https://emoji.discourse-cdn.com/apple/warning.png?v=12" style="aspect-ratio: 20 / 20; background-color: white; border-style: none; color: #222222; font-family: Arial, sans-serif; font-size: 15.008px; height: 20px; vertical-align: middle; width: 20px;" title=":warning:" width="20" /><img alt=":warning:" class="emoji" height="20" loading="lazy" src="https://emoji.discourse-cdn.com/apple/warning.png?v=12" style="aspect-ratio: 20 / 20; background-color: white; border-style: none; color: #222222; font-family: Arial, sans-serif; font-size: 15.008px; height: 20px; vertical-align: middle; width: 20px;" title=":warning:" width="20" /><br style="background-color: white; color: #222222; font-family: Arial, sans-serif; font-size: 15.008px;" /><span face="Arial, sans-serif" style="background-color: white; color: #222222; font-size: 15.008px;">The 3.11 branch is now accepting changes for 3.11.</span><span face="Arial, sans-serif" style="background-color: white; color: #222222; font-size: 15.008px;">1</span><span face="Arial, sans-serif" style="background-color: white; color: #222222; font-size: 15.008px;">. To maximize stability, the final release will be cut from the v3.11.0rc2 tag. If you</span><br style="background-color: white; color: #222222; font-family: Arial, sans-serif; font-size: 15.008px;" /><span face="Arial, sans-serif" style="background-color: white; color: #222222; font-size: 15.008px;">need the release manager (me) to cherry-pick any critical fixes, mark issues as release blockers, and/or add me as a reviewer on a critical</span><br style="background-color: white; color: #222222; font-family: Arial, sans-serif; font-size: 15.008px;" /><span face="Arial, sans-serif" style="background-color: white; color: #222222; font-size: 15.008px;">backport PR on GitHub. To see which changes are currently cherry-picked for inclusion in 3.11.0, look at the short-lived branch-v3.11.0</span><br style="background-color: white; color: #222222; font-family: Arial, sans-serif; font-size: 15.008px;" /><a href="https://github.com/python/cpython/tree/branch-v3.11.0" style="background-color: white; cursor: pointer; font-family: Arial, sans-serif; font-size: 15.008px; overflow-wrap: break-word; text-decoration-line: none;">https://github.com/python/cpython/tree/branch-v3.11.0</a><span face="Arial, sans-serif" style="background-color: white; color: #222222; font-size: 15.008px;">&nbsp;on GitHub.</span><br style="background-color: white; color: #222222; font-family: Arial, sans-serif; font-size: 15.008px;" /><img alt=":warning:" class="emoji" height="20" loading="lazy" src="https://emoji.discourse-cdn.com/apple/warning.png?v=12" style="aspect-ratio: 20 / 20; background-color: white; border-style: none; color: #222222; font-family: Arial, sans-serif; font-size: 15.008px; height: 20px; vertical-align: middle; width: 20px;" title=":warning:" width="20" /><img alt=":warning:" class="emoji" height="20" loading="lazy" src="https://emoji.discourse-cdn.com/apple/warning.png?v=12" style="aspect-ratio: 20 / 20; background-color: white; border-style: none; color: #222222; font-family: Arial, sans-serif; font-size: 15.008px; height: 20px; vertical-align: middle; width: 20px;" title=":warning:" width="20" /><img alt=":warning:" class="emoji" height="20" loading="lazy" src="https://emoji.discourse-cdn.com/apple/warning.png?v=12" style="aspect-ratio: 20 / 20; background-color: white; border-style: none; color: #222222; font-family: Arial, sans-serif; font-size: 15.008px; height: 20px; vertical-align: middle; width: 20px;" title=":warning:" width="20" /><img alt=":warning:" class="emoji" height="20" loading="lazy" src="https://emoji.discourse-cdn.com/apple/warning.png?v=12" style="aspect-ratio: 20 / 20; background-color: white; border-style: none; color: #222222; font-family: Arial, sans-serif; font-size: 15.008px; height: 20px; vertical-align: middle; width: 20px;" title=":warning:" width="20" /><img alt=":warning:" class="emoji" height="20" loading="lazy" src="https://emoji.discourse-cdn.com/apple/warning.png?v=12" style="aspect-ratio: 20 / 20; background-color: white; border-style: none; color: #222222; font-family: Arial, sans-serif; font-size: 15.008px; height: 20px; vertical-align: middle; width: 20px;" title=":warning:" width="20" /><img alt=":warning:" class="emoji" height="20" loading="lazy" src="https://emoji.discourse-cdn.com/apple/warning.png?v=12" style="aspect-ratio: 20 / 20; background-color: white; border-style: none; color: #222222; font-family: Arial, sans-serif; font-size: 15.008px; height: 20px; vertical-align: middle; width: 20px;" title=":warning:" width="20" /><img alt=":warning:" class="emoji" height="20" loading="lazy" src="https://emoji.discourse-cdn.com/apple/warning.png?v=12" style="aspect-ratio: 20 / 20; background-color: white; border-style: none; color: #222222; font-family: Arial, sans-serif; font-size: 15.008px; height: 20px; vertical-align: middle; width: 20px;" title=":warning:" width="20" /></div><div><br /></div><h3>Core developers: all eyes on the docs now</h3><p>* Are all your changes properly documented?</p><p>* Did you notice other changes you know of to have insufficient documentation?</p><h3>Community members</h3><p>We strongly encourage maintainers of third-party Python projects to prepare their projects for 3.11 compatibilities during this phase. As always, report any issues to the&nbsp;<a href="https://github.com/issues" target="_blank">Python bug tracker</a>.</p><p>Please keep in mind that this is a preview release and its use is **not** recommended for production environments.</p><div class="gmail_default"><h2><span style="font-family: inherit; font-size: medium;">Major new features of the 3.11 series, compared to 3.10</span></h2><p><span style="font-family: inherit;"><span>Among the new major new features and changes so far:</span><span><br /></span></span></p><ul style="background-color: white; clear: both; margin: 0px; padding: 0px 0px 0px 40px;"><li style="color: #222222;"><span style="font-family: inherit;"><a href="https://www.python.org/dev/peps/pep-0657/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 657</a>&nbsp;– Include Fine-Grained Error Locations in Tracebacks</span></li><li style="color: #222222;"><span style="font-family: inherit;"><a href="https://www.python.org/dev/peps/pep-0654/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 654</a>&nbsp;– Exception Groups and except*</span></li><li style="color: #222222;"><span style="font-family: inherit;"><a href="https://www.python.org/dev/peps/pep-0673/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 673</a>&nbsp;– Self Type</span></li><li style="color: #222222;"><span style="font-family: inherit;"><a href="https://www.python.org/dev/peps/pep-0646/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 646</a>&nbsp;– Variadic Generics</span></li><li style="color: #222222;"><a href="https://www.python.org/dev/peps/pep-0680/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 680</a>&nbsp;– tomllib: Support for Parsing TOML in the Standard Library</li><li style="color: #222222;"><a href="https://www.python.org/dev/peps/pep-0675/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 675</a>&nbsp;– Arbitrary Literal String Type</li><li style="color: #222222;"><a href="https://www.python.org/dev/peps/pep-0655/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 655</a>&nbsp;– Marking individual TypedDict items as required or potentially-missing</li><li style="color: #222222;"><a href="https://bugs.python.org/issue46752" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">bpo-46752</a>&nbsp;– Introduce task groups to asyncio</li><li style="color: #222222;"><a href="https://www.python.org/dev/peps/pep-0681/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 681</a>&nbsp;– Data Class Transforms</li><li style="color: #222222;"><a href="https://github.com/python/cpython/issues/34627/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">bpo-433030</a>– Atomic grouping ((?&gt;…)) and possessive quantifiers (<code style="background: var(--hljs-bg); color: var(--primary-very-high); font-family: Consolas, Menlo, Monaco, &quot;Lucida Console&quot;, &quot;Liberation Mono&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, monospace; font-size: 15.008px;">*+, ++, ?+, {m,n}+</code><span face="Arial, sans-serif" style="font-size: 15.008px;">) are now supported in regular expressions.</span></li><li><span style="color: #222222;">The&nbsp;<a href="https://github.com/faster-cpython" target="_blank">Faster Cpython Project</a>&nbsp;is already yielding some exciting results. Python 3.11 is up to 10-60% faster than Python 3.10. On average, we measured a 1.22x speedup on the standard benchmark suite. See&nbsp;<a href="https://docs.python.org/3.11/whatsnew/3.11.html#faster-cpython" target="_blank">Faster CPython for details.</a></span></li><span style="color: #222222; font-family: inherit;"><span style="font-size: 0.75rem;">(Hey,&nbsp;</span></span><span style="color: #222222; font-family: inherit; font-size: 0.75rem; font-weight: bolder;">fellow core developer,</span><span style="color: #222222; font-family: inherit; font-size: 0.75rem;">&nbsp;if a feature you find important is missing from this list,&nbsp;</span><a href="mailto:pablogsal@python.org" style="background-color: transparent; color: #222222; cursor: pointer; font-family: inherit; font-size: 0.75rem; overflow-wrap: break-word; text-decoration-line: none;">let Pablo know</a><span style="color: #222222; font-family: inherit; font-size: 0.75rem;">.)</span></ul><div><p style="background-color: white;"><span style="color: #222222;">The next release will be the final release of Python 3.11.0, which is currently scheduled for Monday, 2022-10-24.</span></p><p style="background-color: white;"><span style="background-color: transparent; font-family: inherit;">More resources</span></p></div><ul style="background-color: white; clear: both; color: #222222; margin: 0px; padding: 0px 0px 0px 40px;"><li><a href="https://docs.python.org/3.10/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">Online Documentation</a></li></ul><ul style="background-color: white; clear: both; color: #222222; margin: 0px; padding: 0px 0px 0px 40px;"><li><a href="https://www.python.org/dev/peps/pep-0664/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 664</a>, 3.11 Release Schedule</li><li><span style="font-family: inherit; font-size: small;">Report bugs at&nbsp;<a href="https://bugs.python.org/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">https://bugs.python.org</a>.</span></li></ul><ul style="background-color: white; clear: both; color: #222222; margin: 0px; padding: 0px 0px 0px 40px;"><li><span style="font-family: inherit; font-size: small;"><a href="https://www.python.org/psf/donations/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">Help fund Python and its community</a>.</span></li></ul><p></p></div><div class="gmail_default"><h2><span style="font-family: inherit; font-size: medium;">And now for something completely different</span></h2><p>In general relativity, a white hole is a theoretical region of spacetime and singularity that cannot be entered from the outside, although energy-matter, light and information can escape from it. In this sense, it is the reverse of a black hole, which can be entered only from the outside and from which energy-matter, light and information cannot escape. White holes appear in the theory of eternal black holes. In addition to a black hole region in the future, such a solution of the Einstein field equations has a white hole region in its past. This region does not exist for black holes that have formed through gravitational collapse, however, nor are there any observed physical processes through which a white hole could be formed. Supermassive black holes are theoretically predicted to be at the centre of every galaxy and that possibly, a galaxy cannot form without one. Stephen Hawking and others have proposed that these supermassive black holes spawn a supermassive white hole.</p></div><div class="gmail_default"><h2><span style="font-family: inherit; font-size: medium;">We hope you enjoy the new releases!</span></h2><span style="font-family: inherit;">Thanks to all of the many volunteers who help make Python Development and these releases possible! Please consider supporting our efforts by volunteering yourself or through organization contributions to the Python Software Foundation.<br /></span></div><div class="gmail_default"><span style="font-family: inherit;"><br /></span></div><div class="gmail_default"><span style="font-family: inherit;"><a href="https://www.python.org/psf/"><span style="font-family: inherit;">https://www.python.org/psf/</span><br /></a></span></div><div class="gmail_default"><p><span style="font-family: inherit;">Your friendly release team,<br /><a href="https://discuss.python.org/u/nad">Ned Deily @nad&nbsp;</a><br /><a href="https://discuss.python.org/u/steve.dower">Steve Dower @steve.dower</a>&nbsp;<br /><a href="https://discuss.python.org/u/pablogsal">Pablo Galindo Salgado @pablogsal</a></span></p></div>Pablo Galindohttps://www.blogger.com/profile/07923137967169776470noreply@blogger.comtag:blogger.com,1999:blog-3941553907430899163.post-33882292424112191842022-09-07T09:03:00.002-04:002022-09-07T09:04:03.215-04:00Python releases 3.10.7, 3.9.14, 3.8.14, and 3.7.14 are now available<div aria-level="2" class="topic-meta-data" role="heading" style="align-items: center; display: flex; font-family: Arial, sans-serif; font-size: 15.008000373840332px; padding: 0px 11px 0.25em;"><p style="text-align: left;">We have some security content, and plenty of regular bug fixes for 3.10. Let’s dive right in.</p></div><div class="regular contents" style="font-family: Arial, sans-serif; font-size: 15.008000373840332px; position: relative;"><div class="cooked" style="line-height: var(--line-height-large); overflow: hidden; padding: 1em 11px 0.25em; word-wrap: break-word;"><h2 style="font-family: var(--heading-font-family); font-size: var(--font-up-2-rem); line-height: var(--line-height-medium); margin: 30px 0px 10px;"><a class="anchor" href="https://discuss.python.org/#cve-2020-10735httpscvemitreorgcgi-bincvenamecginamecve-2020-10735-1" name="cve-2020-10735httpscvemitreorgcgi-bincvenamecginamecve-2020-10735-1" style="color: var(--tertiary); cursor: pointer; opacity: 0; text-decoration: none; transition: opacity 0.25s ease 0s; word-wrap: break-word;"></a><a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-10735" style="color: var(--tertiary); cursor: pointer; text-decoration: none; word-wrap: break-word;">CVE-2020-10735</a></h2><p style="margin-top: 0px;">Converting between int and str in bases other than 2 (binary), 4, 8 (octal), 16 (hexadecimal), or 32 such as base 10 (decimal)&nbsp;<a href="https://docs.python.org/release/3.10.7/whatsnew/3.10.html#notable-security-feature-in-3-10-7" style="color: var(--tertiary); cursor: pointer; text-decoration: none; word-wrap: break-word;">now raises a ValueError</a>&nbsp;if the number of digits in string form is above a limit to avoid potential denial of service attacks due to the algorithmic complexity.</p><p>Security releases for 3.9.14, 3.8.14, and 3.7.14 are made available simultaneously to address this issue, along with some less urgent security content.</p><p>Upgrading your installations is highly recommended.</p><h2 style="font-family: var(--heading-font-family); font-size: var(--font-up-2-rem); line-height: var(--line-height-medium); margin: 30px 0px 10px;"><a class="anchor" href="https://discuss.python.org/#python-3107-2" name="python-3107-2" style="color: var(--tertiary); cursor: pointer; opacity: 0; text-decoration: none; transition: opacity 0.25s ease 0s; word-wrap: break-word;"></a>Python 3.10.7</h2><p style="margin-top: 0px;">Get it here:</p><p style="margin-top: 0px;"><a href="https://www.python.org/downloads/release/python-3107/">https://www.python.org/downloads/release/python-3107/</a></p><p>This bugfix version of Python was released out-of-schedule to address the CVE, and as such contains a smaller number of changes compared to 3.10.6 (200 commits), or in fact 3.9.7 (187 commits) at the same stage of the release cycle a year ago. But there’s still over a 100 commits in this latest Python version so it’s worth&nbsp;<a href="https://docs.python.org/release/3.10.7/whatsnew/changelog.html" style="color: var(--tertiary); cursor: pointer; text-decoration: none; word-wrap: break-word;">checking out the change log</a>.</p><h2 style="font-size: var(--font-up-2-rem); line-height: var(--line-height-medium); margin: 30px 0px 10px;"><a class="anchor" href="https://discuss.python.org/#and-now-for-something-completely-different-3" name="and-now-for-something-completely-different-3" style="color: var(--tertiary); cursor: pointer; opacity: 0; text-decoration: none; transition: opacity 0.25s ease 0s; word-wrap: break-word;"></a>And now for something completely different</h2><p style="margin-top: 0px;">In quantum mechanics, the uncertainty principle (also known as Heisenberg’s uncertainty principle) is any of a variety of mathematical inequalities asserting a fundamental limit to the accuracy with which the values for certain pairs of physical quantities of a particle, such as position and momentum or the time and the energy can be predicted from initial conditions.</p><p>Such variable pairs are known as complementary variables or canonically conjugate variables; and, depending on interpretation, the uncertainty principle limits to what extent such conjugate properties maintain their approximate meaning, as the mathematical framework of quantum physics does not support the notion of simultaneously well-defined conjugate properties expressed by a single value.</p><p>The uncertainty principle implies that it is in general not possible to predict the value of a quantity with arbitrary certainty, even if all initial conditions are specified.</p><h2 style="font-size: var(--font-up-2-rem); line-height: var(--line-height-medium); margin: 30px 0px 10px;"><a class="anchor" href="https://discuss.python.org/#we-hope-you-enjoy-the-new-releases-4" name="we-hope-you-enjoy-the-new-releases-4" style="color: var(--tertiary); cursor: pointer; opacity: 0; text-decoration: none; transition: opacity 0.25s ease 0s; word-wrap: break-word;"></a>We hope you enjoy the new releases!</h2><p style="margin-top: 0px;">Thanks to all of the many volunteers who help make Python Development and these releases possible! Please consider supporting our efforts by volunteering yourself or through organization contributions to the Python Software Foundation.</p><p style="margin-top: 0px;"><a href="https://www.python.org/psf/">https://www.python.org/psf/</a></p><p style="margin-top: 0px;"><br /></p><p>Your friendly release team,</p><p>Ned Deily&nbsp;<a class="mention" href="https://discuss.python.org/u/nad" style="background: var(--primary-low); border-radius: 8px; color: var(--primary-high-or-secondary-low); cursor: pointer; display: inline-block; font-size: 0.93em; font-weight: bold; padding: 0px 4px 1px; text-decoration: none; word-wrap: break-word;">@nad</a><br />Steve Dower&nbsp;<a class="mention" href="https://discuss.python.org/u/steve.dower" style="background: var(--primary-low); border-radius: 8px; color: var(--primary-high-or-secondary-low); cursor: pointer; display: inline-block; font-size: 0.93em; font-weight: bold; padding: 0px 4px 1px; text-decoration: none; word-wrap: break-word;">@steve.dower</a><br />Pablo Galindo Salgado&nbsp;<a class="mention" href="https://discuss.python.org/u/pablogsal" style="background: var(--primary-low); border-radius: 8px; color: var(--primary-high-or-secondary-low); cursor: pointer; display: inline-block; font-size: 0.93em; font-weight: bold; padding: 0px 4px 1px; text-decoration: none; word-wrap: break-word;">@pablogsal</a><br />Łukasz Langa&nbsp;<a class="mention" href="https://discuss.python.org/u/ambv" style="background: var(--primary-low); border-radius: 8px; color: var(--primary-high-or-secondary-low); cursor: pointer; display: inline-block; font-size: 0.93em; font-weight: bold; padding: 0px 4px 1px; text-decoration: none; word-wrap: break-word;">@ambv</a></p></div></div>Łukasz Langahttps://www.blogger.com/profile/01161413896843370614noreply@blogger.comtag:blogger.com,1999:blog-3941553907430899163.post-14040472031068512172022-08-08T13:17:00.002-04:002022-08-08T13:17:46.321-04:00Python 3.11.0rc1 is now available<p><br /></p><h2>This is the first release candidate of Python 3.11</h2><p><a href="https://www.python.org/downloads/release/python-3110rc1/">https://www.python.org/downloads/release/python-3110rc1/</a></p><p>This release, **3.11.0rc1**, is the penultimate release preview.&nbsp; Entering the release candidate phase, only reviewed code changes which are clear bug fixes are allowed between this release candidate and the final release. The second candidate and the last planned release preview is currently planned for Monday, 2022-09-05 while the official release is planned for Monday, 2022-10-03.</p><p>There will be no ABI changes from this point forward in the 3.11 series and the goal is that there will be as few code changes as possible.</p><h2 style="text-align: left;">Call to action</h2><h3 style="text-align: left;">Core developers: all eyes on the docs now</h3><p>* Are all your changes properly documented?</p><p>* Did you notice other changes you know of to have insufficient documentation?</p><h3 style="text-align: left;">Community members</h3><p>We strongly encourage maintainers of third-party Python projects to prepare their projects for 3.11 compatibilities during this phase. As always, report any issues to the <a href="https://github.com/issues" target="_blank">Python bug tracker</a>.</p><p>Please keep in mind that this is a preview release and its use is **not** recommended for production environments.</p><div class="gmail_default"><h2><span style="font-family: inherit; font-size: medium;">Major new features of the 3.11 series, compared to 3.10</span></h2><p><span style="font-family: inherit;"><span>Among the new major new features and changes so far:</span><span><br /></span></span></p><ul style="background-color: white; clear: both; margin: 0px; padding: 0px 0px 0px 40px;"><li style="color: #222222;"><span style="font-family: inherit;"><a href="https://www.python.org/dev/peps/pep-0657/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 657</a>&nbsp;– Include Fine-Grained Error Locations in Tracebacks</span></li><li style="color: #222222;"><span style="font-family: inherit;"><a href="https://www.python.org/dev/peps/pep-0654/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 654</a>&nbsp;– Exception Groups and except*</span></li><li style="color: #222222;"><span style="font-family: inherit;"><a href="https://www.python.org/dev/peps/pep-0673/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 673</a>&nbsp;– Self Type</span></li><li style="color: #222222;"><span style="font-family: inherit;"><a href="https://www.python.org/dev/peps/pep-0646/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 646</a>&nbsp;– Variadic Generics</span></li><li style="color: #222222;"><a href="https://www.python.org/dev/peps/pep-0680/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 680</a>&nbsp;– tomllib: Support for Parsing TOML in the Standard Library</li><li style="color: #222222;"><a href="https://www.python.org/dev/peps/pep-0675/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 675</a>&nbsp;– Arbitrary Literal String Type</li><li style="color: #222222;"><a href="https://www.python.org/dev/peps/pep-0655/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 655</a>&nbsp;– Marking individual TypedDict items as required or potentially-missing</li><li style="color: #222222;"><a href="https://bugs.python.org/issue46752" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">bpo-46752</a>&nbsp;– Introduce task groups to asyncio</li><li style="color: #222222;"><a href="https://www.python.org/dev/peps/pep-0681/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 681</a>&nbsp;– Data Class Transforms</li><li style="color: #222222;"><a href="https://github.com/python/cpython/issues/34627/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">bpo-433030</a>– Atomic grouping ((?&gt;…)) and possessive quantifiers (<code style="background: var(--hljs-bg); color: var(--primary-very-high); font-family: Consolas, Menlo, Monaco, &quot;Lucida Console&quot;, &quot;Liberation Mono&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, monospace; font-size: 15.008px;">*+, ++, ?+, {m,n}+</code><span face="Arial, sans-serif" style="font-size: 15.008px;">) are now supported in regular expressions.</span></li><li><span style="color: #222222;">The&nbsp;<a href="https://github.com/faster-cpython" target="_blank">Faster Cpython Project</a>&nbsp;is already yielding some exciting results. Python 3.11 is up to 10-60% faster than Python 3.10. On average, we measured a 1.22x speedup on the standard benchmark suite. See&nbsp;<a href="https://docs.python.org/3.11/whatsnew/3.11.html#faster-cpython" target="_blank">Faster CPython for details.</a></span></li><span style="color: #222222; font-family: inherit;"><span style="font-size: 0.75rem;">(Hey,&nbsp;</span></span><span style="color: #222222; font-family: inherit; font-size: 0.75rem; font-weight: bolder;">fellow core developer,</span><span style="color: #222222; font-family: inherit; font-size: 0.75rem;">&nbsp;if a feature you find important is missing from this list,&nbsp;</span><a href="mailto:pablogsal@python.org" style="background-color: transparent; color: #222222; cursor: pointer; font-family: inherit; font-size: 0.75rem; overflow-wrap: break-word; text-decoration-line: none;">let Pablo know</a><span style="color: #222222; font-family: inherit; font-size: 0.75rem;">.)</span></ul><div><p style="background-color: white;"><span style="color: #222222;">The next pre-release of Python 3.11 will be 3.11.0rc2, currently scheduled for&nbsp; Monday, 2022-09-05.</span></p><p style="background-color: white;"><span style="background-color: transparent; font-family: inherit;">More resources</span></p></div><ul style="background-color: white; clear: both; color: #222222; margin: 0px; padding: 0px 0px 0px 40px;"><li><a href="https://docs.python.org/3.10/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">Online Documentation</a></li></ul><ul style="background-color: white; clear: both; color: #222222; margin: 0px; padding: 0px 0px 0px 40px;"><li><a href="https://www.python.org/dev/peps/pep-0664/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 664</a>, 3.11 Release Schedule</li><li><span style="font-family: inherit; font-size: small;">Report bugs at&nbsp;<a href="https://bugs.python.org/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">https://bugs.python.org</a>.</span></li></ul><ul style="background-color: white; clear: both; color: #222222; margin: 0px; padding: 0px 0px 0px 40px;"><li><span style="font-family: inherit; font-size: small;"><a href="https://www.python.org/psf/donations/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">Help fund Python and its community</a>.</span></li></ul><p></p></div><div class="gmail_default"><h2><span style="font-family: inherit; font-size: medium;">And now for something completely different</span></h2><p>A quark star is a hypothetical type of compact, exotic star, where extremely high core temperature and pressure have forced nuclear particles to form quark matter, a continuous state of matter consisting of free quarks.&nbsp;</p><p>Some massive stars collapse to form neutron stars at the end of their life cycle, as has been both observed and explained theoretically. Under the extreme temperatures and pressures inside neutron stars, the neutrons are normally kept apart by degeneracy pressure, stabilizing the star and hindering further gravitational collapse. However, it is hypothesized that under even more extreme temperature and pressure, the degeneracy pressure of the neutrons is overcome, and the neutrons are forced to merge and dissolve into their constituent quarks, creating an ultra-dense phase of quark matter based on densely packed quarks. In this state, a new equilibrium is supposed to emerge, as a new degeneracy pressure between the quarks, as well as repulsive electromagnetic forces, will occur and hinder total gravitational collapse.</p><p>If these ideas are correct, quark stars might occur, and be observable, somewhere in the universe. Theoretically, such a scenario is seen as scientifically plausible, but it has been impossible to prove both observationally and experimentally because the very extreme conditions needed for stabilizing quark matter cannot be created in any laboratory nor observed directly in nature. The stability of quark matter, and hence the existence of quark stars, is for these reasons among the unsolved problems in physics.</p></div><div class="gmail_default"><h2><span style="font-family: inherit; font-size: medium;">We hope you enjoy the new releases!</span></h2><span style="font-family: inherit;">Thanks to all of the many volunteers who help make Python Development and these releases possible! Please consider supporting our efforts by volunteering yourself or through organization contributions to the Python Software Foundation.<br /></span></div><div class="gmail_default"><span style="font-family: inherit;"><br /></span></div><div class="gmail_default"><span style="font-family: inherit;"><a href="https://www.python.org/psf/"><span style="font-family: inherit;">https://www.python.org/psf/</span><br /></a></span></div><div class="gmail_default"><p><span style="font-family: inherit;">Your friendly release team,<br /><a href="https://discuss.python.org/u/nad">Ned Deily @nad&nbsp;</a><br /><a href="https://discuss.python.org/u/steve.dower">Steve Dower @steve.dower</a>&nbsp;<br /><a href="https://discuss.python.org/u/pablogsal">Pablo Galindo Salgado @pablogsal</a></span></p></div>Pablo Galindohttps://www.blogger.com/profile/07923137967169776470noreply@blogger.comtag:blogger.com,1999:blog-3941553907430899163.post-84725889440549877352022-08-02T06:14:00.004-04:002022-08-02T06:14:25.106-04:00Python 3.10.6 is available<p>Here you have a nice package of 200 commits of bugfixes and documentation improvements freshly made for Python 3.10. Go and download it when is still hot:</p><div class="gmail_default"><p><u style="color: #0000ee;"><a href="https://www.python.org/downloads/release/python-3106/">https://www.python.org/downloads/release/python-3106/</a></u></p><h2><a href="https://www.python.org/downloads/release/python-3106/"><span style="font-family: inherit; font-size: medium;"></span></a></h2><h2><span style="font-size: medium;">This is the sixth maintenance release of Python 3.10</span></h2><div><span style="font-family: inherit;">Python 3.10.6 is the newest major release of the Python programming language, and it contains many new features and optimizations.</span></div><h2><span style="font-family: inherit; font-size: medium;">Major new features of the 3.10 series, compared to 3.9</span></h2><p><span style="font-family: inherit;">Among the new major new features and changes so far:</span><span style="font-family: inherit;"><br /></span></p><ul style="background-color: white; clear: both; color: #222222; margin: 0px; padding: 0px 0px 0px 40px;"><li><span style="font-family: inherit;"><a href="https://www.python.org/dev/peps/pep-0623/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 623</a>&nbsp;– Deprecate and prepare for the removal of the wstr member in PyUnicodeObject.</span></li></ul><ul style="background-color: white; clear: both; color: #222222; margin: 0px; padding: 0px 0px 0px 40px;"><li><span style="font-family: inherit;"><a href="https://www.python.org/dev/peps/pep-0604/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 604</a>&nbsp;– Allow writing union types as X | Y</span></li></ul><ul style="background-color: white; clear: both; color: #222222; margin: 0px; padding: 0px 0px 0px 40px;"><li><span style="font-family: inherit;"><a href="https://www.python.org/dev/peps/pep-0612/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 612</a>&nbsp;– Parameter Specification Variables</span></li></ul><ul style="background-color: white; clear: both; color: #222222; margin: 0px; padding: 0px 0px 0px 40px;"><li><span style="font-family: inherit;"><a href="https://www.python.org/dev/peps/pep-0626/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 626</a>&nbsp;– Precise line numbers for debugging and other tools.</span></li></ul><ul style="background-color: white; clear: both; color: #222222; margin: 0px; padding: 0px 0px 0px 40px;"><li><span style="font-family: inherit;"><a href="https://www.python.org/dev/peps/pep-0618/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 618&nbsp;</a>– Add Optional Length-Checking To zip.</span></li></ul><ul style="background-color: white; clear: both; color: #222222; margin: 0px; padding: 0px 0px 0px 40px;"><li><span style="font-family: inherit;"><a href="https://bugs.python.org/issue12782" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">bpo-12782</a>: Parenthesized context managers are now officially allowed.</span></li></ul><ul style="background-color: white; clear: both; color: #222222; margin: 0px; padding: 0px 0px 0px 40px;"><li><span style="font-family: inherit;"><a href="https://www.python.org/dev/peps/pep-0632/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 632&nbsp;</a>– Deprecate distutils module.</span></li></ul><ul style="background-color: white; clear: both; color: #222222; margin: 0px; padding: 0px 0px 0px 40px;"><li><span style="font-family: inherit;"><a href="https://www.python.org/dev/peps/pep-0613/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 613&nbsp;</a>– Explicit Type Aliases</span></li></ul><ul style="background-color: white; clear: both; color: #222222; margin: 0px; padding: 0px 0px 0px 40px;"><li><span style="font-family: inherit;"><a href="https://www.python.org/dev/peps/pep-0634/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 634&nbsp;</a>– Structural Pattern Matching: Specification</span></li></ul><ul style="background-color: white; clear: both; color: #222222; margin: 0px; padding: 0px 0px 0px 40px;"><li><span style="font-family: inherit;"><a href="https://www.python.org/dev/peps/pep-0635/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 635&nbsp;</a>– Structural Pattern Matching: Motivation and Rationale</span></li></ul><ul style="background-color: white; clear: both; color: #222222; margin: 0px; padding: 0px 0px 0px 40px;"><li><span style="font-family: inherit;"><a href="https://www.python.org/dev/peps/pep-0636/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 636&nbsp;</a>– Structural Pattern Matching: Tutorial</span></li></ul><ul style="background-color: white; clear: both; color: #222222; margin: 0px; padding: 0px 0px 0px 40px;"><li><span style="font-family: inherit;"><a href="https://www.python.org/dev/peps/pep-0644/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 644&nbsp;</a>– Require OpenSSL 1.1.1 or newer</span></li></ul><ul style="background-color: white; clear: both; color: #222222; margin: 0px; padding: 0px 0px 0px 40px;"><li><span style="font-family: inherit;"><a href="https://www.python.org/dev/peps/pep-0624/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 624&nbsp;</a>– Remove Py_UNICODE encoder APIs</span></li></ul><ul style="background-color: white; clear: both; color: #222222; margin: 0px; padding: 0px 0px 0px 40px;"><li><span style="font-family: inherit;"><a href="https://www.python.org/dev/peps/pep-0597/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 597&nbsp;</a>– Add optional EncodingWarning</span></li></ul><div><span style="color: #222222;"><br /></span></div><span style="font-family: inherit;">More resources</span><ul style="background-color: white; clear: both; color: #222222; margin: 0px; padding: 0px 0px 0px 40px;"><li><a href="https://docs.python.org/3.10/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">Online Documentation</a></li></ul><ul style="background-color: white; clear: both; color: #222222; margin: 0px; padding: 0px 0px 0px 40px;"><li><span style="font-family: inherit; font-size: small;"><a href="https://www.python.org/dev/peps/pep-0619/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 619</a>, 3.10 Release Schedule</span></li></ul><ul style="background-color: white; clear: both; color: #222222; margin: 0px; padding: 0px 0px 0px 40px;"><li><span style="font-family: inherit; font-size: small;">Report bugs at&nbsp;<a href="https://bugs.python.org/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">https://bugs.python.org</a>.</span></li></ul><ul style="background-color: white; clear: both; color: #222222; margin: 0px; padding: 0px 0px 0px 40px;"><li><span style="font-family: inherit; font-size: small;"><a href="https://www.python.org/psf/donations/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">Help fund Python and its community</a>.</span></li></ul><p></p></div><div class="gmail_default"><p><span style="font-family: inherit;"><a href="https://bugs.python.org/issue38605" style="background-color: white; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">bpo-38605</a><span face="Arial, sans-serif" style="background-color: white; color: #222222;">:&nbsp;</span><code style="color: var(--primary-very-high);">from __future__ import annotations</code><span face="Arial, sans-serif" style="background-color: white; color: #222222;">&nbsp;(</span><a href="https://www.python.org/dev/peps/pep-0563/" style="background-color: white; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 563</a><span face="Arial, sans-serif" style="background-color: white; color: #222222;">) used to be on this list in previous pre-releases but it has been postponed to Python 3.11 due to some compatibility concerns. You can read the Steering Council communication about it&nbsp;</span><a href="https://mail.python.org/archives/list/python-dev@python.org/thread/CLVXXPQ2T2LQ5MP2Y53VVQFCXYWQJHKZ/" style="background-color: white; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">here</a><span face="Arial, sans-serif" style="background-color: white; color: #222222;">&nbsp;to learn more.</span></span></p><h2><span style="font-family: inherit; font-size: small;">And now for something completely different</span></h2></div><div class="gmail_default"><p>A pentaquark is a human-made subatomic particle, consisting of four quarks and one antiquark bound together; they are not known to occur naturally or exist outside of experiments to create them. As quarks have a baryon number of (+1/3), and antiquarks of (−1/3), the pentaquark would have a total baryon number of 1 and thus would be a baryon. Further, because it has five quarks instead of the usual three found in regular baryons (a.k.a. ‘triquarks’), it is classified as an exotic baryon. The name pentaquark was coined by Claude Gignoux et al. (1987) and Harry J. Lipkin in 1987; however, the possibility of five-quark particles was identified as early as 1964 when Murray Gell-Mann first postulated the existence of quarks. Although predicted for decades, pentaquarks proved surprisingly tricky to discover and some physicists were beginning to suspect that an unknown law of nature prevented their production.</p></div><div class="gmail_default"><h2><span style="font-family: inherit; font-size: small;">We hope you enjoy the new releases!</span></h2><span style="font-family: inherit;">Thanks to all of the many volunteers who help make Python Development and these releases possible! Please consider supporting our efforts by volunteering yourself or through organization contributions to the Python Software Foundation.<br /></span></div><div class="gmail_default"><span style="font-family: inherit;"><br /></span></div><div class="gmail_default"><span style="font-family: inherit;"><a href="https://www.python.org/psf/"><span style="font-family: inherit;">https://www.python.org/psf/</span><br /></a></span></div><div class="gmail_default"><p><span style="font-family: inherit;">Your friendly release team,<br /><a href="https://discuss.python.org/u/nad">Ned Deily @nad&nbsp;</a><br /><a href="https://discuss.python.org/u/steve.dower">Steve Dower @steve.dower</a>&nbsp;<br /><a href="https://discuss.python.org/u/pablogsal">Pablo Galindo Salgado @pablogsal</a></span></p></div>Pablo Galindohttps://www.blogger.com/profile/07923137967169776470noreply@blogger.comtag:blogger.com,1999:blog-3941553907430899163.post-20513932378982621812022-07-26T06:29:00.004-04:002022-07-26T06:29:53.794-04:00Python 3.11.0b5 is now available<p>Here we are. The universe. The vastness of spacetime. At the edge. The last frontier. The last beta*(conditions apply) for Python 3.11.</p><p>We have defied the powerful gods of release blockers and we have won by using the required amount of ruse and subterfuge.</p><p><u style="color: #1155cc;"><a href="https://www.python.org/downloads/release/python-3110b5/">https://www.python.org/downloads/release/python-3110b5/</a></u></p><h2>This is a beta preview of Python 3.11</h2><p>Python 3.11 is still in development. 3.11.0b5 is the last of five planned beta release previews. Beta release previews are intended to give the wider community the opportunity to test new features and bug fixes and to prepare their projects to support the new feature release.</p><p>We&nbsp;<b>strongly encourage&nbsp;</b>maintainers of third-party Python projects to<b>&nbsp;test with 3.11&nbsp;</b>during the beta phase and report issues found to the&nbsp;<a href="https://github.com/python/cpython/issues">Python bug tracker&nbsp;</a>as soon as possible. While the release is planned to be feature complete entering the beta phase, it is possible that features may be modified or, in rare cases, deleted up until the start of the release candidate phase (Monday, 2021-08-02). Our goal is have no ABI changes after beta 5 and as few code changes as possible after 3.11.0rc1, the first release candidate. To achieve that, it will be&nbsp;<b>extremely important&nbsp;</b>to get as much exposure for 3.11 as possible during the beta phase.</p><p>Please keep in mind that this is a preview release and its use is&nbsp;<b>not recommended</b>&nbsp;for production environments.</p><div class="gmail_default"><h2><span style="font-family: inherit; font-size: medium;">Major new features of the 3.11 series, compared to 3.10</span></h2><p><span style="font-family: inherit;"><span>Among the new major new features and changes so far:</span><span><br /></span></span></p><ul style="background-color: white; clear: both; margin: 0px; padding: 0px 0px 0px 40px;"><li style="color: #222222;"><span style="font-family: inherit;"><a href="https://www.python.org/dev/peps/pep-0657/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 657</a>&nbsp;– Include Fine-Grained Error Locations in Tracebacks</span></li><li style="color: #222222;"><span style="font-family: inherit;"><a href="https://www.python.org/dev/peps/pep-0654/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 654</a>&nbsp;– Exception Groups and except*</span></li><li style="color: #222222;"><span style="font-family: inherit;"><a href="https://www.python.org/dev/peps/pep-0673/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 673</a>&nbsp;– Self Type</span></li><li style="color: #222222;"><span style="font-family: inherit;"><a href="https://www.python.org/dev/peps/pep-0646/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 646</a>&nbsp;– Variadic Generics</span></li><li style="color: #222222;"><a href="https://www.python.org/dev/peps/pep-0680/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 680</a>&nbsp;– tomllib: Support for Parsing TOML in the Standard Library</li><li style="color: #222222;"><a href="https://www.python.org/dev/peps/pep-0675/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 675</a>&nbsp;– Arbitrary Literal String Type</li><li style="color: #222222;"><a href="https://www.python.org/dev/peps/pep-0655/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 655</a>&nbsp;– Marking individual TypedDict items as required or potentially-missing</li><li style="color: #222222;"><a href="https://bugs.python.org/issue46752" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">bpo-46752</a>&nbsp;– Introduce task groups to asyncio</li><li style="color: #222222;"><a href="https://www.python.org/dev/peps/pep-0681/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 681</a>&nbsp;– Data Class Transforms</li><li style="color: #222222;"><a href="https://github.com/python/cpython/issues/34627/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">bpo-433030</a>– Atomic grouping ((?&gt;…)) and possessive quantifiers (<code style="background: var(--hljs-bg); color: var(--primary-very-high); font-family: Consolas, Menlo, Monaco, &quot;Lucida Console&quot;, &quot;Liberation Mono&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, monospace; font-size: 15.008px;">*+, ++, ?+, {m,n}+</code><span face="Arial, sans-serif" style="font-size: 15.008px;">) are now supported in regular expressions.</span></li><li><span style="color: #222222;">The&nbsp;<a href="https://github.com/faster-cpython" target="_blank">Faster Cpython Project</a>&nbsp;is already yielding some exciting results. Python 3.11 is up to 10-60% faster than Python 3.10. On average, we measured a 1.22x speedup on the standard benchmark suite. See&nbsp;<a href="https://docs.python.org/3.11/whatsnew/3.11.html#faster-cpython" target="_blank">Faster CPython for details.</a></span></li><span style="color: #222222; font-family: inherit;"><span style="font-size: 0.75rem;">(Hey,&nbsp;</span></span><span style="color: #222222; font-family: inherit; font-size: 0.75rem; font-weight: bolder;">fellow core developer,</span><span style="color: #222222; font-family: inherit; font-size: 0.75rem;">&nbsp;if a feature you find important is missing from this list,&nbsp;</span><a href="mailto:pablogsal@python.org" style="background-color: transparent; color: #222222; cursor: pointer; font-family: inherit; font-size: 0.75rem; overflow-wrap: break-word; text-decoration-line: none;">let Pablo know</a><span style="color: #222222; font-family: inherit; font-size: 0.75rem;">.)</span></ul><div><p style="background-color: white;"><span style="color: #222222;">The next pre-release of Python 3.11 will be 3.11.0rc1, currently scheduled for Monday, 2022-08-01.</span></p><p style="background-color: white;"><span style="background-color: transparent; font-family: inherit;">More resources</span></p></div><ul style="background-color: white; clear: both; color: #222222; margin: 0px; padding: 0px 0px 0px 40px;"><li><a href="https://docs.python.org/3.10/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">Online Documentation</a></li></ul><ul style="background-color: white; clear: both; color: #222222; margin: 0px; padding: 0px 0px 0px 40px;"><li><a href="https://www.python.org/dev/peps/pep-0664/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 664</a>, 3.11 Release Schedule</li><li><span style="font-family: inherit; font-size: small;">Report bugs at&nbsp;<a href="https://bugs.python.org/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">https://bugs.python.org</a>.</span></li></ul><ul style="background-color: white; clear: both; color: #222222; margin: 0px; padding: 0px 0px 0px 40px;"><li><span style="font-family: inherit; font-size: small;"><a href="https://www.python.org/psf/donations/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">Help fund Python and its community</a>.</span></li></ul><p></p></div><div class="gmail_default"><h2><span style="font-family: inherit; font-size: medium;">And now for something completely different</span></h2><p>Schwarzschild wormholes, also known as Einstein–Rosen bridges (named after Albert Einstein and Nathan Rosen), are connections between areas of space that can be modelled as vacuum solutions to the Einstein field equations, and that are now understood to be intrinsic parts of the maximally extended version of the Schwarzschild metric describing an eternal black hole with no charge and no rotation. Here, "maximally extended" refers to the idea that spacetime should not have any "edges": it should be possible to continue this path arbitrarily far into the particle's future or past for any possible trajectory of a free-falling particle (following a geodesic in the spacetime).</p><p>The Einstein–Rosen bridge was discovered by Ludwig Flamm in 1916, a few months after Schwarzschild published his solution, and was rediscovered by Albert Einstein and his colleague Nathan Rosen, who published their result in 1935. However, in 1962, John Archibald Wheeler and Robert W. Fuller published a paper showing that this type of wormhole is unstable if it connects two parts of the same universe and that it will pinch off too quickly for light (or any particle moving slower than light) that falls in from one exterior region to make it to the other exterior region.</p><p>Although Schwarzschild wormholes are not traversable in both directions, their existence inspired Kip Thorne to imagine traversable wormholes created by holding the "throat" of a Schwarzschild wormhole open with exotic matter (material that has negative mass/energy).</p></div><div class="gmail_default"><h2><span style="font-family: inherit; font-size: medium;">We hope you enjoy the new releases!</span></h2><span style="font-family: inherit;">Thanks to all of the many volunteers who help make Python Development and these releases possible! Please consider supporting our efforts by volunteering yourself or through organization contributions to the Python Software Foundation.<br /></span></div><div class="gmail_default"><span style="font-family: inherit;"><br /></span></div><div class="gmail_default"><span style="font-family: inherit;"><a href="https://www.python.org/psf/"><span style="font-family: inherit;">https://www.python.org/psf/</span><br /></a></span></div><div class="gmail_default"><p><span style="font-family: inherit;">Your friendly release team,<br /><a href="https://discuss.python.org/u/nad">Ned Deily @nad&nbsp;</a><br /><a href="https://discuss.python.org/u/steve.dower">Steve Dower @steve.dower</a>&nbsp;<br /><a href="https://discuss.python.org/u/pablogsal">Pablo Galindo Salgado @pablogsal</a></span></p></div>Pablo Galindohttps://www.blogger.com/profile/07923137967169776470noreply@blogger.comtag:blogger.com,1999:blog-3941553907430899163.post-62344088559564780572022-07-11T14:46:00.006-04:002022-07-26T07:33:57.631-04:00Python 3.11.0b4 is now available<p>I cannot believe I am writing this, but Python 3.11.b4 is available!</p><p><span style="color: #1155cc;"><u><a href="https://www.python.org/downloads/release/python-3110b4/">https://www.python.org/downloads/release/python-3110b4/</a></u></span></p><h2>This is a beta preview of Python 3.11</h2><p>Python 3.11 is still in development. 3.11.0b4 is the fourth of four planned beta release previews. Beta release previews are intended to give the wider community the opportunity to test new features and bug fixes and to prepare their projects to support the new feature release.</p><p>We&nbsp;<b>strongly encourage&nbsp;</b>maintainers of third-party Python projects to<b>&nbsp;test with 3.11&nbsp;</b>during the beta phase and report issues found to the&nbsp;<a href="https://github.com/python/cpython/issues">Python bug tracker&nbsp;</a>as soon as possible. While the release is planned to be feature complete entering the beta phase, it is possible that features may be modified or, in rare cases, deleted up until the start of the release candidate phase (Monday, 2021-08-02). Our goal is have no ABI changes after beta 4 and as few code changes as possible after 3.11.0rc1, the first release candidate. To achieve that, it will be&nbsp;<b>extremely important&nbsp;</b>to get as much exposure for 3.11 as possible during the beta phase.</p><p>Please keep in mind that this is a preview release and its use is&nbsp;<b>not recommended</b>&nbsp;for production environments.</p><div class="gmail_default"><h2><span style="font-family: inherit; font-size: medium;">Major new features of the 3.11 series, compared to 3.10</span></h2><p><span style="font-family: inherit;"><span>Among the new major new features and changes so far:</span><span><br /></span></span></p><ul style="background-color: white; clear: both; margin: 0px; padding: 0px 0px 0px 40px;"><li style="color: #222222;"><span style="font-family: inherit;"><a href="https://www.python.org/dev/peps/pep-0657/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 657</a>&nbsp;– Include Fine-Grained Error Locations in Tracebacks</span></li><li style="color: #222222;"><span style="font-family: inherit;"><a href="https://www.python.org/dev/peps/pep-0654/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 654</a>&nbsp;– Exception Groups and except*</span></li><li style="color: #222222;"><span style="font-family: inherit;"><a href="https://www.python.org/dev/peps/pep-0673/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 673</a>&nbsp;– Self Type</span></li><li style="color: #222222;"><span style="font-family: inherit;"><a href="https://www.python.org/dev/peps/pep-0646/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 646</a>&nbsp;– Variadic Generics</span></li><li style="color: #222222;"><a href="https://www.python.org/dev/peps/pep-0680/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 680</a>&nbsp;– tomllib: Support for Parsing TOML in the Standard Library</li><li style="color: #222222;"><a href="https://www.python.org/dev/peps/pep-0675/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 675</a>&nbsp;– Arbitrary Literal String Type</li><li style="color: #222222;"><a href="https://www.python.org/dev/peps/pep-0655/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 655</a>&nbsp;– Marking individual TypedDict items as required or potentially-missing</li><li style="color: #222222;"><a href="https://bugs.python.org/issue46752" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">bpo-46752</a>&nbsp;– Introduce task groups to asyncio</li><li style="color: #222222;"><a href="https://www.python.org/dev/peps/pep-0681/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 681</a>&nbsp;– Data Class Transforms</li><li style="color: #222222;"><a href="https://github.com/python/cpython/issues/34627/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">bpo-433030</a>– Atomic grouping ((?&gt;…)) and possessive quantifiers (<code style="background: var(--hljs-bg); color: var(--primary-very-high); font-family: Consolas, Menlo, Monaco, &quot;Lucida Console&quot;, &quot;Liberation Mono&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, monospace; font-size: 15.008px;">*+, ++, ?+, {m,n}+</code><span face="Arial, sans-serif" style="font-size: 15.008px;">) are now supported in regular expressions.</span></li><li><span style="color: #222222;">The&nbsp;<a href="https://github.com/faster-cpython" target="_blank">Faster Cpython Project</a>&nbsp;is already yielding some exciting results. Python 3.11 is up to 10-60% faster than Python 3.10. On average, we measured a 1.22x speedup on the standard benchmark suite. See&nbsp;<a href="https://docs.python.org/3.11/whatsnew/3.11.html#faster-cpython" target="_blank">Faster CPython for details.</a></span></li><span style="color: #222222; font-family: inherit;"><span style="font-size: 0.75rem;">(Hey,&nbsp;</span></span><span style="color: #222222; font-family: inherit; font-size: 0.75rem; font-weight: bolder;">fellow core developer,</span><span style="color: #222222; font-family: inherit; font-size: 0.75rem;">&nbsp;if a feature you find important is missing from this list,&nbsp;</span><a href="mailto:pablogsal@python.org" style="background-color: transparent; color: #222222; cursor: pointer; font-family: inherit; font-size: 0.75rem; overflow-wrap: break-word; text-decoration-line: none;">let Pablo know</a><span style="color: #222222; font-family: inherit; font-size: 0.75rem;">.)</span></ul><div><p style="background-color: white;"><span style="color: #222222;">The next pre-release of Python 3.11 will be 3.11.0b5, currently scheduled for Monday, 2022-07-25.</span></p><p style="background-color: white;"><span style="background-color: transparent; font-family: inherit;">More resources</span></p></div><ul style="background-color: white; clear: both; color: #222222; margin: 0px; padding: 0px 0px 0px 40px;"><li><a href="https://docs.python.org/3.10/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">Online Documentation</a></li></ul><ul style="background-color: white; clear: both; color: #222222; margin: 0px; padding: 0px 0px 0px 40px;"><li><a href="https://www.python.org/dev/peps/pep-0664/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 664</a>, 3.11 Release Schedule</li><li><span style="font-family: inherit; font-size: small;">Report bugs at&nbsp;<a href="https://bugs.python.org/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">https://bugs.python.org</a>.</span></li></ul><ul style="background-color: white; clear: both; color: #222222; margin: 0px; padding: 0px 0px 0px 40px;"><li><span style="font-family: inherit; font-size: small;"><a href="https://www.python.org/psf/donations/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">Help fund Python and its community</a>.</span></li></ul><p></p></div><div class="gmail_default"><h2><span style="font-family: inherit; font-size: medium;">And now for something completely different</span></h2><p>The Planck temperature is 1.416784×10**32 K. At this temperature, the wavelength of light emitted by thermal radiation reaches the Planck length. There are no known physical models able to describe temperatures greater than the Planck temperature and a quantum theory of gravity would be required to model the extreme energies attained. Hypothetically, a system in thermal equilibrium at the Planck temperature might contain Planck-scale black holes, constantly being formed from thermal radiation and decaying via Hawking evaporation; adding energy to such a system might decrease its temperature by creating larger black holes, whose Hawking temperature is lower.</p><p>Rumours say the Planck temperature can be reached in some of the hottest parts of Spain in summer.</p></div><div class="gmail_default"><h2><span style="font-family: inherit; font-size: medium;">We hope you enjoy the new releases!</span></h2><span style="font-family: inherit;">Thanks to all of the many volunteers who help make Python Development and these releases possible! Please consider supporting our efforts by volunteering yourself or through organization contributions to the Python Software Foundation.<br /></span></div><div class="gmail_default"><span style="font-family: inherit;"><br /></span></div><div class="gmail_default"><span style="font-family: inherit;"><a href="https://www.python.org/psf/"><span style="font-family: inherit;">https://www.python.org/psf/</span><br /></a></span></div><div class="gmail_default"><p><span style="font-family: inherit;">Your friendly release team,<br /><a href="https://discuss.python.org/u/nad">Ned Deily @nad&nbsp;</a><br /><a href="https://discuss.python.org/u/steve.dower">Steve Dower @steve.dower</a>&nbsp;<br /><a href="https://discuss.python.org/u/pablogsal">Pablo Galindo Salgado @pablogsal</a></span></p></div>Pablo Galindohttps://www.blogger.com/profile/07923137967169776470noreply@blogger.comtag:blogger.com,1999:blog-3941553907430899163.post-2745465328178616252022-06-06T13:33:00.000-04:002022-06-06T13:33:02.154-04:00Python 3.10.5 is available<p><span style="color: #212529; white-space: pre-wrap;">The latest bugfix drop for Python 3.10 is here: Python 3.10.5. This release packs more than 230 bugfixes and docs changes, so you surely want to update :) You can get it here:</span></p><div class="gmail_default"><p><u style="color: #0000ee;">https://www.python.org/downloads/release/python-3105/</u></p><h2><span style="font-family: inherit; font-size: medium;"></span></h2><h2><span style="font-size: medium;">This is the first maintenance release of Python 3.10</span></h2><div><span style="font-family: inherit;"><br /></span></div><div><span style="font-family: inherit;">Python 3.10.5 is the newest major release of the Python programming language, and it contains many new features and optimizations.</span></div><h2><span style="font-family: inherit; font-size: medium;"><br /></span></h2><h2><span style="font-family: inherit; font-size: medium;">Major new features of the 3.10 series, compared to 3.9</span></h2><p><span style="font-family: inherit;">Among the new major new features and changes so far:</span><span style="font-family: inherit;"><br /></span></p><ul style="background-color: white; clear: both; color: #222222; margin: 0px; padding: 0px 0px 0px 40px;"><li><span style="font-family: inherit;"><a href="https://www.python.org/dev/peps/pep-0623/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 623</a>&nbsp;– Deprecate and prepare for the removal of the wstr member in PyUnicodeObject.</span></li></ul><ul style="background-color: white; clear: both; color: #222222; margin: 0px; padding: 0px 0px 0px 40px;"><li><span style="font-family: inherit;"><a href="https://www.python.org/dev/peps/pep-0604/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 604</a>&nbsp;– Allow writing union types as X | Y</span></li></ul><ul style="background-color: white; clear: both; color: #222222; margin: 0px; padding: 0px 0px 0px 40px;"><li><span style="font-family: inherit;"><a href="https://www.python.org/dev/peps/pep-0612/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 612</a>&nbsp;– Parameter Specification Variables</span></li></ul><ul style="background-color: white; clear: both; color: #222222; margin: 0px; padding: 0px 0px 0px 40px;"><li><span style="font-family: inherit;"><a href="https://www.python.org/dev/peps/pep-0626/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 626</a>&nbsp;– Precise line numbers for debugging and other tools.</span></li></ul><ul style="background-color: white; clear: both; color: #222222; margin: 0px; padding: 0px 0px 0px 40px;"><li><span style="font-family: inherit;"><a href="https://www.python.org/dev/peps/pep-0618/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 618&nbsp;</a>– Add Optional Length-Checking To zip.</span></li></ul><ul style="background-color: white; clear: both; color: #222222; margin: 0px; padding: 0px 0px 0px 40px;"><li><span style="font-family: inherit;"><a href="https://bugs.python.org/issue12782" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">bpo-12782</a>: Parenthesized context managers are now officially allowed.</span></li></ul><ul style="background-color: white; clear: both; color: #222222; margin: 0px; padding: 0px 0px 0px 40px;"><li><span style="font-family: inherit;"><a href="https://www.python.org/dev/peps/pep-0632/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 632&nbsp;</a>– Deprecate distutils module.</span></li></ul><ul style="background-color: white; clear: both; color: #222222; margin: 0px; padding: 0px 0px 0px 40px;"><li><span style="font-family: inherit;"><a href="https://www.python.org/dev/peps/pep-0613/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 613&nbsp;</a>– Explicit Type Aliases</span></li></ul><ul style="background-color: white; clear: both; color: #222222; margin: 0px; padding: 0px 0px 0px 40px;"><li><span style="font-family: inherit;"><a href="https://www.python.org/dev/peps/pep-0634/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 634&nbsp;</a>– Structural Pattern Matching: Specification</span></li></ul><ul style="background-color: white; clear: both; color: #222222; margin: 0px; padding: 0px 0px 0px 40px;"><li><span style="font-family: inherit;"><a href="https://www.python.org/dev/peps/pep-0635/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 635&nbsp;</a>– Structural Pattern Matching: Motivation and Rationale</span></li></ul><ul style="background-color: white; clear: both; color: #222222; margin: 0px; padding: 0px 0px 0px 40px;"><li><span style="font-family: inherit;"><a href="https://www.python.org/dev/peps/pep-0636/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 636&nbsp;</a>– Structural Pattern Matching: Tutorial</span></li></ul><ul style="background-color: white; clear: both; color: #222222; margin: 0px; padding: 0px 0px 0px 40px;"><li><span style="font-family: inherit;"><a href="https://www.python.org/dev/peps/pep-0644/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 644&nbsp;</a>– Require OpenSSL 1.1.1 or newer</span></li></ul><ul style="background-color: white; clear: both; color: #222222; margin: 0px; padding: 0px 0px 0px 40px;"><li><span style="font-family: inherit;"><a href="https://www.python.org/dev/peps/pep-0624/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 624&nbsp;</a>– Remove Py_UNICODE encoder APIs</span></li></ul><ul style="background-color: white; clear: both; color: #222222; margin: 0px; padding: 0px 0px 0px 40px;"><li><span style="font-family: inherit;"><a href="https://www.python.org/dev/peps/pep-0597/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 597&nbsp;</a>– Add optional EncodingWarning</span></li></ul><div><span style="color: #222222;"><br /></span></div><span style="font-family: inherit;">More resources</span><ul style="background-color: white; clear: both; color: #222222; margin: 0px; padding: 0px 0px 0px 40px;"><li><a href="https://docs.python.org/3.10/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">Online Documentation</a></li></ul><ul style="background-color: white; clear: both; color: #222222; margin: 0px; padding: 0px 0px 0px 40px;"><li><span style="font-family: inherit; font-size: small;"><a href="https://www.python.org/dev/peps/pep-0619/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 619</a>, 3.10 Release Schedule</span></li></ul><ul style="background-color: white; clear: both; color: #222222; margin: 0px; padding: 0px 0px 0px 40px;"><li><span style="font-family: inherit; font-size: small;">Report bugs at&nbsp;<a href="https://bugs.python.org/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">https://bugs.python.org</a>.</span></li></ul><ul style="background-color: white; clear: both; color: #222222; margin: 0px; padding: 0px 0px 0px 40px;"><li><span style="font-family: inherit; font-size: small;"><a href="https://www.python.org/psf/donations/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">Help fund Python and its community</a>.</span></li></ul><p></p></div><div class="gmail_default"><p><span style="font-family: inherit;"><a href="https://bugs.python.org/issue38605" style="background-color: white; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">bpo-38605</a><span face="Arial, sans-serif" style="background-color: white; color: #222222;">:&nbsp;</span><code style="color: var(--primary-very-high);">from __future__ import annotations</code><span face="Arial, sans-serif" style="background-color: white; color: #222222;">&nbsp;(</span><a href="https://www.python.org/dev/peps/pep-0563/" style="background-color: white; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 563</a><span face="Arial, sans-serif" style="background-color: white; color: #222222;">) used to be on this list in previous pre-releases but it has been postponed to Python 3.11 due to some compatibility concerns. You can read the Steering Council communication about it&nbsp;</span><a href="https://mail.python.org/archives/list/python-dev@python.org/thread/CLVXXPQ2T2LQ5MP2Y53VVQFCXYWQJHKZ/" style="background-color: white; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">here</a><span face="Arial, sans-serif" style="background-color: white; color: #222222;">&nbsp;to learn more.</span></span></p><h2><span style="font-family: inherit; font-size: small;">And now for something completely different</span></h2></div><div class="gmail_default"><p>Strange quarks are the third lightest quarks, which are subatomic particles that are so small,&nbsp; they are believed to be the fundamental particles, and not further divisible. Like down quarks, strange quarks have a charge of -1/3. Like all fermions (which are particles that can not exist in the same place at the same time), strange quarks have a spin of 1/2. What makes strange quarks different from down quarks–apart from having 25 times the mass of down quarks–is that they have something that scientists call "strangeness." Strangeness is basically a resistance to decay against strong force and electromagnetism. This means that any particle that contains a strange quark can not decay due to strong force (or electromagnetism), but instead with the much slower weak force. It was believed that this was a 'strange' method of decay, which is why the scientists gave the particles that name.</p></div><div class="gmail_default"><h2><span style="font-family: inherit; font-size: small;">We hope you enjoy the new releases!</span></h2><span style="font-family: inherit;">Thanks to all of the many volunteers who help make Python Development and these releases possible! Please consider supporting our efforts by volunteering yourself or through organization contributions to the Python Software Foundation.<br /></span></div><div class="gmail_default"><span style="font-family: inherit;"><br /></span></div><div class="gmail_default"><span style="font-family: inherit;"><a href="https://www.python.org/psf/"><span style="font-family: inherit;">https://www.python.org/psf/</span><br /></a></span></div><div class="gmail_default"><p><span style="font-family: inherit;">Your friendly release team,<br /><a href="https://discuss.python.org/u/nad">Ned Deily @nad&nbsp;</a><br /><a href="https://discuss.python.org/u/steve.dower">Steve Dower @steve.dower</a>&nbsp;<br /><a href="https://discuss.python.org/u/pablogsal">Pablo Galindo Salgado @pablogsal</a></span></p></div>Pablo Galindohttps://www.blogger.com/profile/07923137967169776470noreply@blogger.comtag:blogger.com,1999:blog-3941553907430899163.post-80434385276590012402022-06-01T12:51:00.010-04:002022-06-01T12:52:21.583-04:00Expedited release of Python3.11.0b3<p style="text-align: left;">Due to a known incompatibility with pytest and the previous beta release (Python 3.11.0b2) and after
some deliberation, I and the rest of the release team have decided to do an expedited release of
Python 3.11.0b3 so the community can continue testing their packages with pytest and therefore
testing the betas as expected.</p><h3 style="text-align: left;">&nbsp;Where can I get the new release?</h3><div><br /></div><div><a href=" https://www.python.org/downloads/release/python-3110b3/" target="_blank">&nbsp;https://</a><a href=" https://www.python.org/downloads/release/python-3110b3/" target="_blank">www.python.org/downloads/release/python-3110b3/</a></div><div><br /></div><h3 style="text-align: left;">What happened?&nbsp;</h3><p style="text-align: left;">Pytest by default rewrites the AST nodes in the testing code to provide better diagnostics when something fails in the test. For doing this, it creates new AST nodes that are then compiled. In Python 3.11, after some changes in the compiler and AST nodes, these new AST nodes that pytest was creating were invalid. This causes CPython to crash in debug mode because we have several assert statements in the compiler, but in release mode this doesn't cause always a crash, but it creates potential corrupted structures in the compiler silently.
In 3.11.0b3 we changed the compiler to reject invalid AST nodes, so what was a silent problem and a crash in debug mode turned into an exception being raised.&nbsp;</p><p style="text-align: left;">We had a fix to allow the nodes that pytest is creating to work to preserve backwards compatibility but unfortunately, it didn't make it into 3.11.0b2.
Is still possible to use pytest with 3.11.0b2 if you add "--assert=plain" to the pytest invocation but given how many users would have to modify their test suite invocation we decided to proceed with a new release that has the fix.&nbsp;</p><h3 style="text-align: left;">What happens with future beta releases&nbsp;</h3><p style="text-align: left;">Python 3.11.0b3 should be considered as an extra beta release. Instead of four beta releases, we will have five and the next beta release (3.11.0b4) will happen as scheduled on Thursday, 2022-06-16.&nbsp;</p><h3>We hope you enjoy the new releases!</h3><p style="text-align: left;"><span style="font-family: inherit;">Thanks to all of the many volunteers who help make Python Development and these releases possible! Please consider supporting our efforts by volunteering yourself or through organization contributions to the Python Software Foundation.</span></p><div><div class="gmail_default"><span style="font-family: inherit;"><br /></span></div><div class="gmail_default"><span style="font-family: inherit;"><a href="https://www.python.org/psf/"><span style="font-family: inherit;">https://www.python.org/psf/</span><br /></a></span></div><div class="gmail_default"><p><span style="font-family: inherit;">Your friendly release team,<br /><a href="https://discuss.python.org/u/nad">Ned Deily @nad&nbsp;</a><br /><a href="https://discuss.python.org/u/steve.dower">Steve Dower @steve.dower</a>&nbsp;<br /><a href="https://discuss.python.org/u/pablogsal">Pablo Galindo Salgado @pablogsal</a></span></p></div></div>Pablo Galindohttps://www.blogger.com/profile/07923137967169776470noreply@blogger.comtag:blogger.com,1999:blog-3941553907430899163.post-32210791230414899842022-05-31T09:34:00.007-04:002022-05-31T09:34:49.551-04:00Python 3.11.0b2 is now available<p>Does anyone want bug fixes? Because we have 164 new commits fixing different things, from code to documentation. If you have reported some issue after 3.11.0b1, you should check if is fixed and if not, make sure you tell us so we can take a look&nbsp;<span style="background-color: white; color: #222222; font-family: Arial, sans-serif; font-size: 15.008px;">&nbsp;</span><img alt=":eyes:" class="emoji" height="20" loading="lazy" src="https://emoji.discourse-cdn.com/apple/eyes.png?v=12" style="aspect-ratio: 20 / 20; background-color: white; border-style: none; color: #222222; font-family: Arial, sans-serif; font-size: 15.008px; height: 20px; padding-bottom: 0px; vertical-align: middle; width: 20px;" title=":eyes:" width="20" />&nbsp;We still have two more betas to go so help us to make sure we don’t miss anything so everything is ready for the final release&nbsp;<img alt=":rocket:" class="emoji" height="20" loading="lazy" src="https://emoji.discourse-cdn.com/apple/rocket.png?v=12" style="aspect-ratio: 20 / 20; background-color: white; border-style: none; color: #222222; font-family: Arial, sans-serif; font-size: 15.008px; height: 20px; padding-bottom: 0px; vertical-align: middle; width: 20px;" title=":rocket:" width="20" /></p><p><span style="color: #1155cc;"><u><a href="https://www.python.org/downloads/release/python-3110b2/">https://www.python.org/downloads/release/python-3110b2/</a></u></span></p><h2>This is a beta preview of Python 3.11</h2><p>Python 3.11 is still in development. 3.11.0b2 is the second of four planned beta release previews. Beta release previews are intended to give the wider community the opportunity to test new features and bug fixes and to prepare their projects to support the new feature release.</p><p>We&nbsp;<b>strongly encourage&nbsp;</b>maintainers of third-party Python projects to<b>&nbsp;test with 3.11&nbsp;</b>during the beta phase and report issues found to the&nbsp;<a href="https://github.com/python/cpython/issues">Python bug tracker&nbsp;</a>as soon as possible. While the release is planned to be feature complete entering the beta phase, it is possible that features may be modified or, in rare cases, deleted up until the start of the release candidate phase (Monday, 2021-08-02). Our goal is have no ABI changes after beta 4 and as few code changes as possible after 3.11.0rc1, the first release candidate. To achieve that, it will be&nbsp;<b>extremely important&nbsp;</b>to get as much exposure for 3.11 as possible during the beta phase.</p><p>Please keep in mind that this is a preview release and its use is&nbsp;<b>not recommended</b>&nbsp;for production environments.</p><div class="gmail_default"><h2><span style="font-family: inherit; font-size: medium;">Major new features of the 3.11 series, compared to 3.10</span></h2><p><span style="font-family: inherit;"><span>Among the new major new features and changes so far:</span><span><br /></span></span></p><ul style="background-color: white; clear: both; margin: 0px; padding: 0px 0px 0px 40px;"><li style="color: #222222;"><span style="font-family: inherit;"><a href="https://www.python.org/dev/peps/pep-0657/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 657</a>&nbsp;– Include Fine-Grained Error Locations in Tracebacks</span></li><li style="color: #222222;"><span style="font-family: inherit;"><a href="https://www.python.org/dev/peps/pep-0654/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 654</a>&nbsp;– Exception Groups and except*</span></li><li style="color: #222222;"><span style="font-family: inherit;"><a href="https://www.python.org/dev/peps/pep-0673/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 673</a>&nbsp;– Self Type</span></li><li style="color: #222222;"><span style="font-family: inherit;"><a href="https://www.python.org/dev/peps/pep-0646/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 646</a>&nbsp;– Variadic Generics</span></li><li style="color: #222222;"><a href="https://www.python.org/dev/peps/pep-0680/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 680</a>&nbsp;– tomllib: Support for Parsing TOML in the Standard Library</li><li style="color: #222222;"><a href="https://www.python.org/dev/peps/pep-0675/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 675</a>&nbsp;– Arbitrary Literal String Type</li><li style="color: #222222;"><a href="https://www.python.org/dev/peps/pep-0655/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 655</a>&nbsp;– Marking individual TypedDict items as required or potentially-missing</li><li style="color: #222222;"><a href="https://bugs.python.org/issue46752" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">bpo-46752</a>&nbsp;– Introduce task groups to asyncio</li><li style="color: #222222;"><a href="https://www.python.org/dev/peps/pep-0681/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 681</a>&nbsp;– Data Class Transforms</li><li style="color: #222222;"><a href="https://github.com/python/cpython/issues/34627/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">bpo-433030</a>– Atomic grouping ((?&gt;…)) and possessive quantifiers (<code style="background: var(--hljs-bg); color: var(--primary-very-high); font-family: Consolas, Menlo, Monaco, &quot;Lucida Console&quot;, &quot;Liberation Mono&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, monospace; font-size: 15.008px;">*+, ++, ?+, {m,n}+</code><span style="font-family: Arial, sans-serif; font-size: 15.008px;">) are now supported in regular expressions.</span></li><li><span style="color: #222222;">The&nbsp;<a href="https://github.com/faster-cpython" target="_blank">Faster Cpython Project</a>&nbsp;is already yielding some exciting results. Python 3.11 is up to 10-60% faster than Python 3.10. On average, we measured a 1.22x speedup on the standard benchmark suite. See&nbsp;<a href="https://docs.python.org/3.11/whatsnew/3.11.html#faster-cpython" target="_blank">Faster CPython for details.</a></span></li><span style="color: #222222; font-family: inherit;"><span style="font-size: 0.75rem;">(Hey,&nbsp;</span></span><span style="color: #222222; font-family: inherit; font-size: 0.75rem; font-weight: bolder;">fellow core developer,</span><span style="color: #222222; font-family: inherit; font-size: 0.75rem;">&nbsp;if a feature you find important is missing from this list,&nbsp;</span><a href="mailto:pablogsal@python.org" style="background-color: transparent; color: #222222; cursor: pointer; font-family: inherit; font-size: 0.75rem; overflow-wrap: break-word; text-decoration-line: none;">let Pablo know</a><span style="color: #222222; font-family: inherit; font-size: 0.75rem;">.)</span></ul><div><p style="background-color: white;"><span style="color: #222222;">The next pre-release of Python 3.11 will be 3.11.0b3, currently scheduled for &nbsp;currently scheduled for Thursday, 2022-06-16</span></p><p style="background-color: white;"><span style="background-color: transparent; font-family: inherit;">More resources</span></p></div><ul style="background-color: white; clear: both; color: #222222; margin: 0px; padding: 0px 0px 0px 40px;"><li><a href="https://docs.python.org/3.10/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">Online Documentation</a></li></ul><ul style="background-color: white; clear: both; color: #222222; margin: 0px; padding: 0px 0px 0px 40px;"><li><a href="https://www.python.org/dev/peps/pep-0664/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 664</a>, 3.11 Release Schedule</li><li><span style="font-family: inherit; font-size: small;">Report bugs at&nbsp;<a href="https://bugs.python.org/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">https://bugs.python.org</a>.</span></li></ul><ul style="background-color: white; clear: both; color: #222222; margin: 0px; padding: 0px 0px 0px 40px;"><li><span style="font-family: inherit; font-size: small;"><a href="https://www.python.org/psf/donations/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">Help fund Python and its community</a>.</span></li></ul><p></p></div><div class="gmail_default"><h2><span style="font-family: inherit; font-size: medium;">And now for something completely different</span></h2><p>The Planck time is the time required for light to travel a distance of 1 Planck length in a vacuum, which is a time interval of approximately 5.39*10^(−44) s. No current physical theory can describe timescales shorter than the Planck time, such as the earliest events after the Big Bang, and it is conjectured that the structure of time breaks down on intervals comparable to the Planck time. While there is currently no known way to measure time intervals on the scale of the Planck time, researchers in 2020 found that the accuracy of an atomic clock is constrained by quantum effects on the order of the Planck time, and for the most precise atomic clocks thus far they calculated that such effects have been ruled out to around 10^−33s, or 10 orders of magnitude above the Planck scale.</p></div><div class="gmail_default"><h2><span style="font-family: inherit; font-size: medium;">We hope you enjoy the new releases!</span></h2><span style="font-family: inherit;">Thanks to all of the many volunteers who help make Python Development and these releases possible! Please consider supporting our efforts by volunteering yourself or through organization contributions to the Python Software Foundation.<br /></span></div><div class="gmail_default"><span style="font-family: inherit;"><br /></span></div><div class="gmail_default"><span style="font-family: inherit;"><a href="https://www.python.org/psf/"><span style="font-family: inherit;">https://www.python.org/psf/</span><br /></a></span></div><div class="gmail_default"><p><span style="font-family: inherit;">Your friendly release team,<br /><a href="https://discuss.python.org/u/nad">Ned Deily @nad&nbsp;</a><br /><a href="https://discuss.python.org/u/steve.dower">Steve Dower @steve.dower</a>&nbsp;<br /><a href="https://discuss.python.org/u/pablogsal">Pablo Galindo Salgado @pablogsal</a></span></p></div>Pablo Galindohttps://www.blogger.com/profile/07923137967169776470noreply@blogger.comtag:blogger.com,1999:blog-3941553907430899163.post-91579992811017205822022-05-17T13:33:00.000-04:002022-05-17T13:33:39.391-04:00Python 3.9.13 is now available<p>&nbsp;</p><div class="cooked"><p>This is the thirteenth maintenance release of Python 3.9. Get it here:<a href="https://www.python.org/downloads/release/python-3913/" rel="noopener" target="_blank"><br />Python 3.9.13</a></p><aside class="onebox allowlistedgeneric" data-onebox-src="https://www.python.org/downloads/release/python-3913/"><div class="onebox-metadata">
    
    
  </div>
  <div style="clear: both;"></div>
</aside>
<p>According to the release calendar specified in <a href="https://www.python.org/dev/peps/pep-0596/">PEP 596</a>, Python 3.9.13 is the <strong>final</strong>
 regular maintenance release. Starting now, the 3.9 branch will only 
accept security fixes and releases of those will be made in source-only 
form until October 2025.</p>
<p>This is a milestone moment for me as it means that now both of my 
release series are security-only. My work as release manager enters its 
final stage. I’m not crying, <em>you’re</em> crying! <img alt=":smiling_face_with_tear:" class="emoji" height="20" src="https://emoji.discourse-cdn.com/apple/smiling_face_with_tear.png?v=12" style="aspect-ratio: 20 / 20;" title=":smiling_face_with_tear:" width="20" /></p>
<p>Compared to the 3.8 series, this last regular bugfix release is still
 pretty active at 166 commits since 3.9.12. In comparison, version 
3.8.10, the final regular bugfix release of Python 3.8, included only 92
 commits. However, it’s likely that it was 3.8 that was special here 
with the governance changes occupying core developers’ minds. For 
reference, version 3.7.8, the final regular bugfix release of Python 
3.7, included 187 commits.</p>
<p>In any case, 166 commits is quite a few changes, some of which being pretty important fixes. Take a look at the <a href="https://docs.python.org/release/3.9.13/whatsnew/changelog.html">change log</a> for details.</p>
<h3 style="text-align: left;">
<a class="anchor" href="https://discuss.python.org/t/python-3-9-13-is-now-available/15815#major-new-features-of-the-39-series-compared-to-38-1" name="major-new-features-of-the-39-series-compared-to-38-1"></a>Major new features of the 3.9 series, compared to 3.8</h3>
<p>Some of the new major new features and changes in Python 3.9 are:</p>
<ul><li>
<a href="https://www.python.org/dev/peps/pep-0573/">PEP 573</a>, Module State Access from C Extension Methods</li><li>
<a href="https://www.python.org/dev/peps/pep-0584/">PEP 584</a>, Union Operators in <code>dict</code>
</li><li>
<a href="https://www.python.org/dev/peps/pep-0585/">PEP 585</a>, Type Hinting Generics In Standard Collections</li><li>
<a href="https://www.python.org/dev/peps/pep-0593/">PEP 593</a>, Flexible function and variable annotations</li><li>
<a href="https://www.python.org/dev/peps/pep-0602/">PEP 602</a>, Python adopts a stable annual release cadence</li><li>
<a href="https://www.python.org/dev/peps/pep-0614/">PEP 614</a>, Relaxing Grammar Restrictions On Decorators</li><li>
<a href="https://www.python.org/dev/peps/pep-0615/">PEP 615</a>, Support for the IANA Time Zone Database in the Standard Library</li><li>
<a href="https://www.python.org/dev/peps/pep-0616/">PEP 616</a>, String methods to remove prefixes and suffixes</li><li>
<a href="https://www.python.org/dev/peps/pep-0617/">PEP 617</a>, New PEG parser for CPython</li><li>
<a href="https://bugs.python.org/issue38379">BPO 38379</a>, garbage collection does not block on resurrected objects;</li><li>
<a href="https://bugs.python.org/issue38692">BPO 38692</a>, os.pidfd_open added that allows process management without races and signals;</li><li>
<a href="https://bugs.python.org/issue39926">BPO 39926</a>, Unicode support updated to version 13.0.0;</li><li>
<a href="https://bugs.python.org/issue1635741">BPO 1635741</a>, when Python is initialized multiple times in the same process, it does not leak memory anymore;</li><li>A number of Python builtins (range, tuple, set, frozenset, list, dict) are now sped up using <a href="https://www.python.org/dev/peps/pep-0590">PEP 590</a> vectorcall;</li><li>A number of Python modules (_abc, audioop, _bz2, _codecs, 
_contextvars, _crypt, _functools, _json, _locale, operator, resource, 
time, _weakref) now use multiphase initialization as defined by <a href="https://www.python.org/dev/peps/pep-0489/">PEP 489</a>;</li><li>A number of standard library modules (audioop, ast, grp, _hashlib, 
pwd, _posixsubprocess, random, select, struct, termios, zlib) are now 
using the stable ABI defined by <a href="https://www.python.org/dev/peps/pep-0384/">PEP 384</a>.</li></ul>
<p>You can find a more comprehensive list in this release’s “<a href="https://docs.python.org/release/3.9.13/whatsnew/3.9.html">What’s New</a>” document.</p>
<h3>
<a class="anchor" href="https://discuss.python.org/t/python-3-9-13-is-now-available/15815#we-hope-you-enjoy-python-39-2" name="we-hope-you-enjoy-python-39-2"></a>We hope you enjoy Python 3.9!</h3>
<p>Thanks to all of the many volunteers who help make Python Development
 and these releases possible! Please consider supporting our efforts by 
volunteering yourself or through organization contributions to the 
Python Software Foundation.</p>
<p>Your friendly release team,<br />
Ned Deily <a class="mention" href="https://discuss.python.org/u/nad">@nad</a><br />
Steve Dower <a class="mention" href="https://discuss.python.org/u/steve.dower">@steve.dower</a><br />
Łukasz Langa <a class="mention" href="https://discuss.python.org/u/ambv">@ambv</a></p></div>Łukasz Langahttps://www.blogger.com/profile/01161413896843370614noreply@blogger.comtag:blogger.com,1999:blog-3941553907430899163.post-22168178761598731492022-05-07T23:31:00.003-04:002022-05-08T10:28:41.044-04:00Python 3.11.0b1 is now available<p>We did it, team! After quite a bumpy release process and a bunch of last-time fixes, we have reached beta 1 and feature freeze. What a ride eh? You can get the shiny new release artefacts from here:</p><p><span style="color: #1155cc;"><u><a href="https://www.python.org/downloads/release/python-3110b1/">https://www.python.org/downloads/release/python-3110b1/</a></u></span></p><h2 style="text-align: left;">This is a beta preview of Python 3.11</h2><p>Python 3.11 is still in development. 3.11.0b1 is the first of four planned beta release previews. Beta release previews are intended to give the wider community the opportunity to test new features and bug fixes and to prepare their projects to support the new feature release.</p><p>We <b>strongly encourage </b>maintainers of third-party Python projects to<b> test with 3.11 </b>during the beta phase and report issues found to the <a href="https://github.com/python/cpython/issues">Python bug tracker </a>as soon as possible. While the release is planned to be feature complete entering the beta phase, it is possible that features may be modified or, in rare cases, deleted up until the start of the release candidate phase (Monday, 2021-08-02). Our goal is have no ABI changes after beta 4 and as few code changes as possible after 3.11.0rc1, the first release candidate. To achieve that, it will be <b>extremely important </b>to get as much exposure for 3.11 as possible during the beta phase.</p><p>Please keep in mind that this is a preview release and its use is <b>not recommended</b> for production environments.</p><div class="gmail_default"><h2><span style="font-family: inherit; font-size: medium;">Major new features of the 3.11 series, compared to 3.10</span></h2><p><span style="font-family: inherit;"><span>Among the new major new features and changes so far:</span><span><br /></span></span></p><ul style="background-color: white; clear: both; margin: 0px; padding: 0px 0px 0px 40px;"><li style="color: #222222;"><span style="font-family: inherit;"><a href="https://www.python.org/dev/peps/pep-0657/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 657</a>&nbsp;– Include Fine-Grained Error Locations in Tracebacks</span></li><li style="color: #222222;"><span style="font-family: inherit;"><a href="https://www.python.org/dev/peps/pep-0654/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 654</a>&nbsp;–&nbsp; Exception Groups and except*</span></li><li style="color: #222222;"><span style="font-family: inherit;"><a href="https://www.python.org/dev/peps/pep-0673/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 673</a>&nbsp;–&nbsp; &nbsp;Self Type</span></li><li style="color: #222222;"><span style="font-family: inherit;"><a href="https://www.python.org/dev/peps/pep-0646/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 646</a>&nbsp;–&nbsp; Variadic Generics</span></li><li style="color: #222222;"><a href="https://www.python.org/dev/peps/pep-0680/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 680</a>– tomllib: Support for Parsing TOML in the Standard Library</li><li style="color: #222222;"><a href="https://www.python.org/dev/peps/pep-0675/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 675</a>– Arbitrary Literal String Type</li><li style="color: #222222;"><a href="https://www.python.org/dev/peps/pep-0655/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 655</a>– Marking individual TypedDict items as required or potentially-missing</li><li style="color: #222222;"><a href="https://bugs.python.org/issue46752" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">bpo-46752</a>– Introduce task groups to asyncio</li><li><span style="color: #222222;">The <a href="https://github.com/faster-cpython" target="_blank">Faster Cpython Project</a> is already yielding some exciting results. Python 3.11 is up to 10-60% faster than Python 3.10. On average, we measured a 1.22x speedup on the standard benchmark suite. See <a href="https://docs.python.org/3.11/whatsnew/3.11.html#faster-cpython" target="_blank">Faster CPython for details.</a></span></li><span style="color: #222222; font-family: inherit;"><span style="font-size: 0.75rem;">(Hey,&nbsp;</span></span><span style="color: #222222; font-family: inherit; font-size: 0.75rem; font-weight: bolder;">fellow core developer,</span><span style="color: #222222; font-family: inherit; font-size: 0.75rem;">&nbsp;if a feature you find important is missing from this list,&nbsp;</span><a href="mailto:pablogsal@python.org" style="background-color: transparent; color: #222222; cursor: pointer; font-family: inherit; font-size: 0.75rem; overflow-wrap: break-word; text-decoration-line: none;">let Pablo know</a><span style="color: #222222; font-family: inherit; font-size: 0.75rem;">.)</span></ul><div><p style="background-color: white;"><span style="color: #222222;">The next pre-release of Python 3.11 will be 3.11.0b2, currently scheduled for Monday, 2022-05-30.</span></p><p style="background-color: white;"><span style="background-color: transparent; font-family: inherit;">More resources</span></p></div><ul style="background-color: white; clear: both; color: #222222; margin: 0px; padding: 0px 0px 0px 40px;"><li><a href="https://docs.python.org/3.10/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">Online Documentation</a></li></ul><ul style="background-color: white; clear: both; color: #222222; margin: 0px; padding: 0px 0px 0px 40px;"><li><a href="https://www.python.org/dev/peps/pep-0664/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 664</a>, 3.11 Release Schedule</li><li><span style="font-family: inherit; font-size: small;">Report bugs at&nbsp;<a href="https://bugs.python.org/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">https://bugs.python.org</a>.</span></li></ul><ul style="background-color: white; clear: both; color: #222222; margin: 0px; padding: 0px 0px 0px 40px;"><li><span style="font-family: inherit; font-size: small;"><a href="https://www.python.org/psf/donations/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">Help fund Python and its community</a>.</span></li></ul><p></p></div><div class="gmail_default"><h2><span style="font-family: inherit; font-size: medium;">And now for something completely different</span></h2><p>The holographic principle is a tenet of string theories and a supposed property of quantum gravity that states that the description of a volume of space can be thought of as encoded on a lower-dimensional boundary to the region—such as a light-like boundary like a gravitational horizon. First proposed by Gerard 't Hooft, it was given a precise string-theory interpretation by Leonard Susskind, who combined his ideas with previous ones of 't Hooft and Charles Thorn.[ Leonard Susskind said, “The three-dimensional world of ordinary experience––the universe filled with galaxies, stars, planets, houses, boulders, and people––is a hologram, an image of reality cited on a distant two-dimensional (2D) surface." As pointed out by Raphael Bousso, Thorn observed in 1978 that string theory admits a lower-dimensional description in which gravity emerges from it in what would now be called a holographic way.</p><p>The holographic principle was inspired by black hole thermodynamics, which conjectures that the maximal entropy in any region scales with the radius squared, and not cubed as might be expected. In the case of a black hole, the insight was that the informational content of all the objects that have fallen into the hole might be entirely contained in surface fluctuations of the event horizon. The holographic principle resolves the black hole information paradox within the framework of string theory. However, there exist classical solutions to the Einstein equations that allow values of the entropy larger than those allowed by an area law, hence in principle larger than those of a black hole. These are the so-called “Wheeler’s bags of gold”. The existence of such solutions conflicts with the holographic interpretation, and their effects in a quantum theory of gravity including the holographic principle are not full</p></div><div class="gmail_default"><h2><span style="font-family: inherit; font-size: medium;">We hope you enjoy the new releases!</span></h2><span style="font-family: inherit;">Thanks to all of the many volunteers who help make Python Development and these releases possible! Please consider supporting our efforts by volunteering yourself or through organization contributions to the Python Software Foundation.<br /></span></div><div class="gmail_default"><span style="font-family: inherit;"><br /></span></div><div class="gmail_default"><span style="font-family: inherit;"><a href="https://www.python.org/psf/"><span style="font-family: inherit;">https://www.python.org/psf/</span><br /></a></span></div><div class="gmail_default"><p><span style="font-family: inherit;">Your friendly release team,<br /><a href="https://discuss.python.org/u/nad">Ned Deily @nad&nbsp;</a><br /><a href="https://discuss.python.org/u/steve.dower">Steve Dower @steve.dower</a>&nbsp;<br /><a href="https://discuss.python.org/u/pablogsal">Pablo Galindo Salgado @pablogsal</a></span></p></div>Pablo Galindohttps://www.blogger.com/profile/07923137967169776470noreply@blogger.comtag:blogger.com,1999:blog-3941553907430899163.post-7491401049138342692022-04-06T06:33:00.002-04:002022-04-06T06:33:18.422-04:00The last Python 3.11 alpha (3.11.0a7) is available<p>Brrrrr… do you feel that? That’s the chill of beta freeze coming closer. Meanwhile, your friendly CPython release team doesn’t rest and we have prepared a shiny new release for you: Python 3.11.0a7.</p><p><a data-saferedirecturl="https://www.google.com/url?q=https://www.python.org/downloads/release/python-3110a1/&amp;source=gmail&amp;ust=1633694408315000&amp;usg=AFQjCNHr_c406_GIntrAeoRIwWUkjho1qQ" href="https://www.python.org/downloads/release/python-3110a7/" style="color: #1155cc;" target="_blank"><span style="font-family: inherit;">https://www.python.org/<wbr></wbr>downloads/release/python-<wbr></wbr>3110a7/</span></a></p><div class="gmail_default"><h2><span style="font-family: inherit; font-size: medium;">Major new features of the 3.11 series, compared to 3.10</span></h2><p><span style="font-family: inherit;"><span>Among the new major new features and changes so far:</span><span><br /></span></span></p><ul style="background-color: white; clear: both; margin: 0px; padding: 0px 0px 0px 40px;"><li style="color: #222222;"><span style="font-family: inherit;"><a href="https://www.python.org/dev/peps/pep-0657/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 657</a>&nbsp;– Include Fine-Grained Error Locations in Tracebacks</span></li><li style="color: #222222;"><span style="font-family: inherit;"><a href="https://www.python.org/dev/peps/pep-0654/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 654</a>&nbsp;–&nbsp; Exception Groups and except*</span></li><li style="color: #222222;"><span style="font-family: inherit;"><a href="https://www.python.org/dev/peps/pep-0673/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 673</a>&nbsp;–&nbsp; &nbsp;Self Type</span></li><li style="color: #222222;"><span style="font-family: inherit;"><a href="https://www.python.org/dev/peps/pep-0646/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 646</a>&nbsp;–&nbsp; Variadic Generics</span></li><li style="color: #222222;"><a href="https://www.python.org/dev/peps/pep-0680/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 680</a>– tomllib: Support for Parsing TOML in the Standard Library</li><li style="color: #222222;"><a href="https://www.python.org/dev/peps/pep-0675/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 675</a>– Arbitrary Literal String Type</li><li style="color: #222222;"><a href="https://www.python.org/dev/peps/pep-0655/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 655</a>– Marking individual TypedDict items as required or potentially-missing</li><li style="color: #222222;"><a href="https://bugs.python.org/issue46752" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">bpo-46752</a>– Introduce task groups to asyncio</li><li><span style="color: #222222;">The&nbsp;<a href="https://github.com/faster-cpython" target="_blank">Faster Cpython Project</a>&nbsp;is already yielding some exciting results: this version of CPython 3.11 is ~19% faster on the geometric mean of the&nbsp;<a href="http://speed.python.org" rel="nofollow" target="_blank">performance benchmarks</a>, compared to 3.10.0.</span></li><span style="color: #222222; font-family: inherit;"><span style="font-size: 0.75rem;">(Hey,&nbsp;</span></span><span style="color: #222222; font-family: inherit; font-size: 0.75rem; font-weight: bolder;">fellow core developer,</span><span style="color: #222222; font-family: inherit; font-size: 0.75rem;">&nbsp;if a feature you find important is missing from this list,&nbsp;</span><a href="mailto:pablogsal@python.org" style="background-color: transparent; color: #222222; cursor: pointer; font-family: inherit; font-size: 0.75rem; overflow-wrap: break-word; text-decoration-line: none;">let Pablo know</a><span style="color: #222222; font-family: inherit; font-size: 0.75rem;">.)</span></ul><div><p style="background-color: white;"><span style="color: #222222;">The next pre-release of Python 3.11 will be 3.11.0b1, currently scheduled for Friday, 2022-05-06.</span></p><p style="background-color: white;"><span style="background-color: transparent; font-family: inherit;">More resources</span></p></div><ul style="background-color: white; clear: both; color: #222222; margin: 0px; padding: 0px 0px 0px 40px;"><li><a href="https://docs.python.org/3.10/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">Online Documentation</a></li></ul><ul style="background-color: white; clear: both; color: #222222; margin: 0px; padding: 0px 0px 0px 40px;"><li><a href="https://www.python.org/dev/peps/pep-0664/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 664</a>, 3.11 Release Schedule</li><li><span style="font-family: inherit; font-size: small;">Report bugs at&nbsp;<a href="https://bugs.python.org/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">https://bugs.python.org</a>.</span></li></ul><ul style="background-color: white; clear: both; color: #222222; margin: 0px; padding: 0px 0px 0px 40px;"><li><span style="font-family: inherit; font-size: small;"><a href="https://www.python.org/psf/donations/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">Help fund Python and its community</a>.</span></li></ul><p></p></div><div class="gmail_default"><h2><span style="font-family: inherit; font-size: medium;">And now for something completely different</span></h2><p>In mathematics, the Dirac delta distribution (δ distribution) is a generalized function or distribution over the real numbers, whose value is zero everywhere except at zero, and whose integral over the entire real line is equal to one. The current understanding of the impulse is as a linear functional that maps every continuous function to its value at zero. The delta function was introduced by physicist Paul Dirac as a tool for the normalization of state vectors. It also has uses in probability theory and signal processing. Its validity was disputed until Laurent Schwartz developed the theory of distributions where it is defined as a linear form acting on functions.&nbsp;</p><p>Defining this distribution as a “function” as many physicist do is known to be one of the easier ways to annoy mathematicians :)</p></div><div class="gmail_default"><h2><span style="font-family: inherit; font-size: medium;">We hope you enjoy the new releases!</span></h2><span style="font-family: inherit;">Thanks to all of the many volunteers who help make Python Development and these releases possible! Please consider supporting our efforts by volunteering yourself or through organization contributions to the Python Software Foundation.<br /></span></div><div class="gmail_default"><span style="font-family: inherit;"><br /></span></div><div class="gmail_default"><span style="font-family: inherit;"><a href="https://www.python.org/psf/"><span style="font-family: inherit;">https://www.python.org/psf/</span><br /></a></span></div><div class="gmail_default"><p><span style="font-family: inherit;">Your friendly release team,<br /><a href="https://discuss.python.org/u/nad">Ned Deily @nad&nbsp;</a><br /><a href="https://discuss.python.org/u/steve.dower">Steve Dower @steve.dower</a>&nbsp;<br /><a href="https://discuss.python.org/u/pablogsal">Pablo Galindo Salgado @pablogsal</a></span></p></div>Pablo Galindohttps://www.blogger.com/profile/07923137967169776470noreply@blogger.comtag:blogger.com,1999:blog-3941553907430899163.post-125908888538616332022-03-24T08:08:00.000-04:002022-03-24T08:08:37.458-04:00Python 3.10.4 and 3.9.12 are now available out of schedule<p>Did anybody say <a href="https://discuss.python.org/t/python-3-10-3-3-9-11-3-8-13-and-3-7-13-are-now-available-with-security-content/14353">cursed releases</a>?
 Well, it turns out that 3.10.3 and 3.9.11 both shipped a regression 
which caused those versions not to build on Red Hat Enterprise Linux 6. 
While this 11-year-old version is now <a href="https://access.redhat.com/support/policy/updates/errata">out of maintenance support</a>, it’s still used in production workloads. Some of those rely on Python 3.9 and/or 3.10. In particular, our own <a href="https://github.com/pypa/manylinux/tree/manylinux2010_x86_64_centos6_no_vsyscall"><code>manylinux2010</code></a> image used to build widely compatible Linux wheels is based on CentOS 6. (Don’t worry, we do have newer <code>manylinux*</code> variants, see <a href="https://peps.python.org/pep-0599/">PEP 599</a> and <a href="https://peps.python.org/pep-0600/">PEP 600</a> for details.)</p><div class="cooked">
<p>Due to the out-of-schedule release, the respective versions released 
today contain a very limited set of changes. Python 3.9.12 only contains
 12 other bug fixes on top of 3.9.11. Python 3.10.4 only contains 10 
other bug fixes on top of 3.10.3.</p>
<p>Get 3.10.4 here: <a class="inline-onebox" href="https://www.python.org/downloads/release/python-3104">Python Release Python 3.10.4 | Python.org</a><br />
Get 3.9.12 here: <a class="inline-onebox" href="https://www.python.org/downloads/release/python-3912">Python Release Python 3.9.12 | Python.org</a></p>
<p>Hopefully, the third time’s a charm and we’ll return no sooner than 
May with the regularly scheduled bug fix releases of 3.9 and 3.10.</p>
<h3>
<a class="anchor" href="https://discuss.python.org/t/python-3-10-4-and-3-9-12-are-now-available-out-of-schedule/14568#we-hope-you-enjoy-the-new-releases-1" name="we-hope-you-enjoy-the-new-releases-1"></a>We hope you enjoy the new releases</h3>
<p>Your friendly release team,<br />
Łukasz Langa <a class="mention" href="https://discuss.python.org/u/ambv">@ambv</a><br />
Pablo Galindo Salgado <a class="mention" href="https://discuss.python.org/u/pablogsal">@pablogsal</a><br />
Ned Deily <a class="mention" href="https://discuss.python.org/u/nad">@nad</a><br />
Steve Dower <a class="mention" href="https://discuss.python.org/u/steve.dower">@steve.dower</a></p></div>Łukasz Langahttps://www.blogger.com/profile/01161413896843370614noreply@blogger.comtag:blogger.com,1999:blog-3941553907430899163.post-48660478150875356602022-03-16T11:55:00.000-04:002022-03-16T11:55:08.886-04:00Python 3.10.3, 3.9.11, 3.8.13, and 3.7.13 are now available with security content<p>Welcome again to the exciting world of releasing new Python versions!</p>
<p>Last time around I was complaining about <a href="https://discuss.python.org/t/python-3-10-2-3-9-10-and-3-11-0a4-are-now-available/13146">cursed releases</a>. This time around I could complain about security content galore and how <a href="https://mta.openssl.org/pipermail/openssl-announce/2022-March/000216.html">one of them</a> ruined my ingenious idea to <a href="https://discuss.python.org/t/py-day-is-coming-a-joint-security-release-spree-for-python-3-7-3-8-3-9-and-3-10-on-march-14th/14109">release Python on Pi Day and call it Py Day</a>. Well, you can’t have everything in life. Or at least not everything <strong>at once</strong>.</p>
<p>And yet it seems this time around we’ve got a lot of security fixes all at once. Just look at this list:</p>
<ul><li>
<strong>15 (sic!) CVEs</strong>: libexpat upgraded from 2.4.1 to 2.4.7 (<a href="https://bugs.python.org/issue46794">BPO-46794</a>, <a href="https://bugs.python.org/issue46932">BPO-46932</a>, <a href="https://bugs.python.org/issue46811">BPO-46811</a>, <a href="https://bugs.python.org/issue46784">BPO-46784</a>, <a href="https://bugs.python.org/issue46400">BPO-46400</a>)</li><li>
<strong>CVE-2022-0778</strong>: OpenSSL upgraded from 1.1.1l to 1.1.1n in macOS and Windows installers (<a href="https://bugs.python.org/issue47024">BPO-47024</a>)</li><li>
<strong>CVE-2016-3189</strong>, <strong>CVE-2019-12900</strong>: bzip2 upgraded from 1.0.6 to 1.0.8 in Windows installers (<a href="https://bugs.python.org/issue44549">BPO-44549</a>)</li><li>
<strong>CVE-2022-26488</strong>: Windows installer now ensures the correct path is being repaired when “Add to PATH” is used (<a href="https://bugs.python.org/issue46948">BPO-46948</a>)</li><li>
<strong>CVE-2021-28363</strong>: bundled <code>pip</code> upgraded from 21.2.4 to 22.0.4 (<a href="https://bugs.python.org/issue46985">BPO-46985</a>)</li><li>authorization bypass fixed in <code>urllib.request</code> (<a href="https://bugs.python.org/issue46756">BPO-46756</a>)</li><li>REDoS avoided in <code>importlib.metadata</code> (<a href="https://bugs.python.org/issue46474">BPO-46474</a>)</li><li>SQLite upgraded from 3.36.0 to 3.37.2 in macOS and Windows installers (<a href="https://bugs.python.org/issue45925">BPO-45925</a>)</li></ul>
<h3>
<a class="anchor" href="https://discuss.python.org/t/python-3-10-3-3-9-11-3-8-13-and-3-7-13-are-now-available-with-security-content/14353#python-3103-1" name="python-3103-1"></a>Python 3.10.3</h3><p>Get it here: <a href="https://www.python.org/downloads/release/python-3103/">https://www.python.org/downloads/release/python-3103/</a></p><p>Python 3.10.3 is the third maintenance release of the newest version 
of the Python programming language, which contains many new features and
 optimizations. We recommend it over the other releases listed below.</p>
<p>This is a large bugfix release with 220 commits since 3.10.2. Just look at <a href="https://docs.python.org/release/3.10.3/whatsnew/changelog.html">the change log</a>!</p>
<p>The next maintenance release of Python 3.10 is planned for early June.</p>
<h3>
<a class="anchor" href="https://discuss.python.org/t/python-3-10-3-3-9-11-3-8-13-and-3-7-13-are-now-available-with-security-content/14353#python-3911-2" name="python-3911-2"></a>Python 3.9.11</h3><p>Get it here: <a href="https://www.python.org/downloads/release/python-3911/ ">https://www.python.org/downloads/release/python-3911/ </a><br /></p><p>This is the penultimate planned full bugfix release of Python 3.9. In
 mid-May, we’ll be releasing the last one, after which the 3.9 series 
will enter its <em>security-only fixes period</em>. More details in <a href="https://www.python.org/dev/peps/pep-0596/">PEP 596</a>.</p>
<p>Python 3.9 is the first Python version since 2.7 to have a regular 
bugfix release larger than “.10”. It’s also still a significant release 
at 163 commits since 3.9.10. That’s in fact 30+ commits more than 
between 3.9.9 and 3.9.10. <a href="https://docs.python.org/release/3.9.11/whatsnew/changelog.html">The change log</a> isn’t as long as the 3.10.3 one but it’s still pretty extensive!</p>
<p>As a reminder, on macOS, the default installer is now the new <code>universal2</code>
 variant. It’s compatible with Mac OS X 10.9 and newer, including macOS 
11 Big Sur and macOS 12 Monterey. Python installed with this variant 
will work natively on Apple Silicon processors.</p>
<h3>
<a class="anchor" href="https://discuss.python.org/t/python-3-10-3-3-9-11-3-8-13-and-3-7-13-are-now-available-with-security-content/14353#python-3813-3" name="python-3813-3"></a>Python 3.8.13</h3><p></p><p>Get it here: <a href="https://www.python.org/downloads/release/python-3813/">https://www.python.org/downloads/release/python-3813/</a></p><p><a href="https://docs.python.org/release/3.8.13/whatsnew/changelog.html">Changes</a>
 here are almost exclusively security-only as the life cycle of Python 
versions prescribes. You might have noticed there is a small number of 
regular bug fixes nonetheless. This is because without those we wouldn’t
 be able to continue running the full test suite for the 3.8 branch. 
This in turn could hide regressions in future security fixes.</p>
<h3>
<a class="anchor" href="https://discuss.python.org/t/python-3-10-3-3-9-11-3-8-13-and-3-7-13-are-now-available-with-security-content/14353#python-3713-4" name="python-3713-4"></a>Python 3.7.13</h3><p></p><p>Get it here: <a href="https://www.python.org/downloads/release/python-3713/">https://www.python.org/downloads/release/python-3713/</a></p><p>Just like 3.8, Python 3.7 is in its security-only fixes period. In turn, the <a href="https://docs.python.org/release/3.7.13/whatsnew/changelog.html">changes in 3.7.13</a> look almost identical to the ones in 3.8.13.</p>
<p>Python 3.7 will continue to receive source-only releases until June 2023.</p>
<h3>
<a class="anchor" href="https://discuss.python.org/t/python-3-10-3-3-9-11-3-8-13-and-3-7-13-are-now-available-with-security-content/14353#we-hope-you-enjoy-the-new-releases-5" name="we-hope-you-enjoy-the-new-releases-5"></a>We hope you enjoy the new releases</h3>
<p>Your friendly release team,<br />
Łukasz Langa <a class="mention" href="https://discuss.python.org/u/ambv">@ambv</a><br />
Pablo Galindo Salgado <a class="mention" href="https://discuss.python.org/u/pablogsal">@pablogsal</a><br />
Ned Deily <a class="mention" href="https://discuss.python.org/u/nad">@nad</a><br />
Steve Dower <a class="mention" href="https://discuss.python.org/u/steve.dower">@steve.dower</a></p><p></p>Łukasz Langahttps://www.blogger.com/profile/01161413896843370614noreply@blogger.comtag:blogger.com,1999:blog-3941553907430899163.post-40709462082083374482022-03-07T13:33:00.004-05:002022-03-07T13:33:52.221-05:00Python 3.11.0a6 is available<p style="background-color: white;"><span style="color: #222222;">There are no easy releases these days! :sweat: After a week of delay due to several release blockers, buildbot problems and pandemic-related difficulties here is 3.11.0a6 for you to test.</span></p><p style="background-color: white;"><a data-saferedirecturl="https://www.google.com/url?q=https://www.python.org/downloads/release/python-3110a1/&amp;source=gmail&amp;ust=1633694408315000&amp;usg=AFQjCNHr_c406_GIntrAeoRIwWUkjho1qQ" href="https://www.python.org/downloads/release/python-3110a6/" style="color: #1155cc;" target="_blank"><span style="font-family: inherit;">https://www.python.org/<wbr></wbr>downloads/release/python-<wbr></wbr>3110a6/</span></a></p><div class="gmail_default"><h2><span style="font-family: inherit; font-size: medium;">Major new features of the 3.11 series, compared to 3.10</span></h2><p><span style="font-family: inherit;"><span>Among the new major new features and changes so far:</span><span><br /></span></span></p><ul style="background-color: white; clear: both; margin: 0px; padding: 0px 0px 0px 40px;"><li style="color: #222222;"><span style="font-family: inherit;"><a href="https://www.python.org/dev/peps/pep-0657/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 657</a>&nbsp;– Include Fine-Grained Error Locations in Tracebacks</span></li><li style="color: #222222;"><span style="font-family: inherit;"><a href="https://www.python.org/dev/peps/pep-0654/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 654</a>&nbsp;–&nbsp; Exception Groups and except*</span></li><li style="color: #222222;"><span style="font-family: inherit;"><a href="https://www.python.org/dev/peps/pep-0673/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 673</a>&nbsp;–&nbsp; &nbsp;Self Type</span></li><li style="color: #222222;"><span style="font-family: inherit;"><a href="https://www.python.org/dev/peps/pep-0646/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 646</a>&nbsp;–&nbsp; Variadic Generics</span></li><li><span style="color: #222222;">The&nbsp;<a href="https://github.com/faster-cpython" target="_blank">Faster Cpython Project</a>&nbsp;is already yielding some exciting results: this version of CPython 3.11 is ~19% faster on the geometric mean of the&nbsp;<a href="http://speed.python.org" rel="nofollow" target="_blank">performance benchmarks</a>, compared to 3.10.0.</span></li><span style="color: #222222; font-family: inherit;"><span style="font-size: 0.75rem;">(Hey,&nbsp;</span></span><span style="color: #222222; font-family: inherit; font-size: 0.75rem; font-weight: bolder;">fellow core developer,</span><span style="color: #222222; font-family: inherit; font-size: 0.75rem;">&nbsp;if a feature you find important is missing from this list,&nbsp;</span><a href="mailto:pablogsal@python.org" style="background-color: transparent; color: #222222; cursor: pointer; font-family: inherit; font-size: 0.75rem; overflow-wrap: break-word; text-decoration-line: none;">let Pablo know</a><span style="color: #222222; font-family: inherit; font-size: 0.75rem;">.)</span></ul><div><p style="background-color: white;"><span style="color: #222222;">The next pre-release of Python 3.11 will be 3.11.0a7, currently scheduled for Tuesday, 2022-04-05.</span></p></div><h3><span style="font-family: inherit; font-size: small;">More resources</span></h3><ul style="background-color: white; clear: both; color: #222222; margin: 0px; padding: 0px 0px 0px 40px;"><li><a href="https://docs.python.org/3.10/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">Online Documentation</a></li></ul><ul style="background-color: white; clear: both; color: #222222; margin: 0px; padding: 0px 0px 0px 40px;"><li><a href="https://www.python.org/dev/peps/pep-0664/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 664</a>, 3.11 Release Schedule</li><li><span style="font-family: inherit; font-size: small;">Report bugs at&nbsp;<a href="https://bugs.python.org/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">https://bugs.python.org</a>.</span></li></ul><ul style="background-color: white; clear: both; color: #222222; margin: 0px; padding: 0px 0px 0px 40px;"><li><span style="font-family: inherit; font-size: small;"><a href="https://www.python.org/psf/donations/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">Help fund Python and its community</a>.</span></li></ul><p></p></div><div class="gmail_default"><h2><span style="font-family: inherit; font-size: medium;">And now for something completely different</span></h2><p>In astrophysics and nuclear physics, nuclear pasta is a theoretical type of degenerate matter that is postulated to exist within the crusts of neutron stars. If it does in fact exist, nuclear pasta is the strongest material in the universe. Between the surface of a neutron star and the quark-gluon plasma at the core, at matter densities of 1014 g/cm3, nuclear attraction and Coulomb repulsion forces are of similar magnitude. The competition between the forces leads to the formation of a variety of complex structures assembled from neutrons and protons. Astrophysicists call these types of structures nuclear pasta because the geometry of the structures resembles various types of pasta.</p><p>There are several phases of evolution (I swear these names are real), including the gnocchi phase, the spaghetti phase, the lasagna phase, the bucatini phase and the Swiss cheese phase.</p></div><div class="gmail_default"><h2><span style="font-family: inherit; font-size: medium;">We hope you enjoy the new releases!</span></h2><span style="font-family: inherit;">Thanks to all of the many volunteers who help make Python Development and these releases possible! Please consider supporting our efforts by volunteering yourself or through organization contributions to the Python Software Foundation.<br /></span></div><div class="gmail_default"><span style="font-family: inherit;"><br /></span></div><div class="gmail_default"><span style="font-family: inherit;"><a href="https://www.python.org/psf/"><span style="font-family: inherit;">https://www.python.org/psf/</span><br /></a></span></div><div class="gmail_default"><p><span style="font-family: inherit;">Your friendly release team,<br /><a href="https://discuss.python.org/u/nad">Ned Deily @nad&nbsp;</a><br /><a href="https://discuss.python.org/u/steve.dower">Steve Dower @steve.dower</a>&nbsp;<br /><a href="https://discuss.python.org/u/pablogsal">Pablo Galindo Salgado @pablogsal</a></span></p></div>Pablo Galindohttps://www.blogger.com/profile/07923137967169776470noreply@blogger.comtag:blogger.com,1999:blog-3941553907430899163.post-13323776857128445132022-02-03T18:22:00.002-05:002022-02-03T18:26:21.002-05:00Python 3.11.0a5 is available<p style="background-color: white;"><span style="color: #222222;">We needed to tame some angry buildbots, but after a small fight, we won with just some scratches! Here you have a shiny new alpha release: Python 3.11.0a5.</span></p><div class="gmail_default" style="background-color: white;"><a data-saferedirecturl="https://www.google.com/url?q=https://www.python.org/downloads/release/python-3110a1/&amp;source=gmail&amp;ust=1633694408315000&amp;usg=AFQjCNHr_c406_GIntrAeoRIwWUkjho1qQ" href="https://www.python.org/downloads/release/python-3110a5/" style="color: #1155cc;" target="_blank"><span style="font-family: inherit;">https://www.python.org/<wbr></wbr>downloads/release/python-<wbr></wbr>3110a5/</span></a></div><div class="gmail_default" style="background-color: white;"><br /></div><div class="gmail_default"><h2 style="text-align: left;"><span style="font-family: inherit; font-size: medium;">Major new features of the 3.11 series, compared to 3.10</span></h2><p><span style="font-family: inherit;"><span>Among the new major new features and changes so far:</span><span><br /></span></span></p><ul style="background-color: white; clear: both; margin: 0px; padding: 0px 0px 0px 40px;"><li style="color: #222222;"><span style="font-family: inherit;"><a href="https://www.python.org/dev/peps/pep-0657/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 657</a>&nbsp;– Include Fine-Grained Error Locations in Tracebacks</span></li><li style="color: #222222;"><span style="font-family: inherit;"><a href="https://www.python.org/dev/peps/pep-0654/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 654</a>&nbsp;–&nbsp; Exception Groups and except*</span></li><li style="color: #222222;"><span style="font-family: inherit;"><a href="https://www.python.org/dev/peps/pep-0673/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 673</a>&nbsp;–&nbsp; &nbsp;Self Type</span></li><li style="color: #222222;"><span style="font-family: inherit;"><a href="https://www.python.org/dev/peps/pep-0646/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 646</a>&nbsp;–&nbsp; Variadic Generics</span></li><li><span style="color: #222222;">The <a href="https://github.com/faster-cpython" target="_blank">Faster Cpython Project</a> is already yielding some exciting results: this version of CPython 3.11 is ~19% faster on the geometric mean of the <a href="http://speed.python.org" rel="nofollow" target="_blank">performance benchmarks</a>, compared to 3.10.0.</span></li><span style="color: #222222; font-family: inherit;"><span style="font-size: 0.75rem;">(Hey,&nbsp;</span></span><span style="color: #222222; font-family: inherit; font-size: 0.75rem; font-weight: bolder;">fellow core developer,</span><span style="color: #222222; font-family: inherit; font-size: 0.75rem;">&nbsp;if a feature you find important is missing from this list,&nbsp;</span><a href="mailto:pablogsal@python.org" style="background-color: transparent; color: #222222; cursor: pointer; font-family: inherit; font-size: 0.75rem; overflow-wrap: break-word; text-decoration-line: none;">let Pablo know</a><span style="color: #222222; font-family: inherit; font-size: 0.75rem;">.)</span></ul><div><p style="background-color: white; color: #222222; text-align: left;"><span style="font-family: inherit;">The next pre-release of Python 3.11 will be 3.11.0a6, currently scheduled for Monday, 2022-02-28.</span></p></div><h3 style="text-align: left;"><span style="font-family: inherit; font-size: small;">More resources</span></h3><ul style="background-color: white; clear: both; color: #222222; margin: 0px; padding: 0px 0px 0px 40px;"><li><a href="https://docs.python.org/3.10/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">Online Documentation</a></li></ul><ul style="background-color: white; clear: both; color: #222222; margin: 0px; padding: 0px 0px 0px 40px;"><li><a href="https://www.python.org/dev/peps/pep-0664/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 664</a>, 3.11 Release Schedule</li><li><span style="font-family: inherit; font-size: small;">Report bugs at&nbsp;<a href="https://bugs.python.org/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">https://bugs.python.org</a>.</span></li></ul><ul style="background-color: white; clear: both; color: #222222; margin: 0px; padding: 0px 0px 0px 40px;"><li><span style="font-family: inherit; font-size: small;"><a href="https://www.python.org/psf/donations/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">Help fund Python and its community</a>.</span></li></ul><p></p></div><div class="gmail_default" style="text-align: left;"><h2 style="text-align: left;"><span style="font-family: inherit; font-size: medium;">And now for something completely different</span></h2><p>In physics, the Poynting vector (Umov-Poynting vector) represents the directional energy flux (the energy transfer per unit area per unit time) or power flow of an electromagnetic field.&nbsp; It is named after its discoverer John Henry Poynting who first derived it in 1884. Oliver Heaviside also discovered it independently in the more general form that recognises the freedom of adding the curl of an arbitrary vector field to the definition. The Poynting vector is used throughout electromagnetics in conjunction with Poynting's theorem, the continuity equation expressing conservation of electromagnetic energy, to calculate the power flow in electromagnetic fields.</p></div><div class="gmail_default"><h2 style="text-align: left;"><span style="font-family: inherit; font-size: medium;">We hope you enjoy the new releases!</span></h2><span style="font-family: inherit;">Thanks to all of the many volunteers who help make Python Development and these releases possible! Please consider supporting our efforts by volunteering yourself or through organization contributions to the Python Software Foundation.<br /></span></div><div class="gmail_default"><span style="font-family: inherit;"><br /></span></div><div class="gmail_default"><span style="font-family: inherit;"><a href="https://www.python.org/psf/"><span style="font-family: inherit;">https://www.python.org/psf/</span><br /></a></span></div><div class="gmail_default"><p><span style="font-family: inherit;">Your friendly release team,<br /><a href="https://discuss.python.org/u/nad">Ned Deily @nad&nbsp;</a><br /><a href="https://discuss.python.org/u/steve.dower">Steve Dower @steve.dower</a>&nbsp;<br /><a href="https://discuss.python.org/u/pablogsal">Pablo Galindo Salgado @pablogsal</a></span></p></div>Pablo Galindohttps://www.blogger.com/profile/07923137967169776470noreply@blogger.comtag:blogger.com,1999:blog-3941553907430899163.post-63638008784056638632022-01-14T18:11:00.001-05:002022-01-14T18:11:34.866-05:00Python 3.10.2, 3.9.10, and 3.11.0a4 are now available<p></p><p>Before we begin the usual round of release notes, please do note that
 the three new versions of Python released today do not contain Windows 
installers yet. This is temporary, due to a more complex than expected 
code signing certificate renewal.</p>
<p>We’ve held the releases all week while the situation is getting 
resolved but the urgency of 3.10.2 in particular made us release without
 the Windows installers after all. We apologize for the inconvenience 
and are doing everything we can to put the Windows installer in place as
 soon as possible.</p>
<p>We’re rooting for both Ee Durbin and Steve Dower who are helping us 
resolve this. Thanks for your hard work! Hopefully, by this time next 
week, this will only be a footnote in release management history.</p>
<p>The releases you’re looking at were all <b>cursed</b> in some way. What a way to start 2022! Besides the certificate hold up, <i>Python 3.10.2</i> is an expedited release (you’ll want to upgrade, read below!), <i>Python 3.11.0a4</i> had almost 20 (sic, twenty!) release blockers before being finally green, and <i>Python 3.9.10</i>
 was made from a new M1 Mac on macOS Monterey which made the usually 
boring process quite a ride. We’re hoping 2022 won’t be this intense all
 year!</p>
<h3>
<a class="anchor" href="https://discuss.python.org/t/python-3-10-2-3-9-10-and-3-11-0a4-are-now-available/13146#python-3102-1" name="python-3102-1"></a>Python 3.10.2</h3><p>Get it here: <a href="https://www.python.org/downloads/release/python-3102/">https://www.python.org/downloads/release/python-3102/</a><b><a href="https://www.python.org/downloads/release/python-3102/" target="_blank"> </a><br /></b></p><p><b>This is a special bugfix release ahead of schedule to address
 a memory leak that was happening on certain function calls when using <a href="https://github.com/cython/cython">Cython</a></b>.
 The memory leak consisted of a small constant amount of bytes in 
certain function calls from Cython code. Although in most cases this was
 not very noticeable, it was very impactful for long-running 
applications and certain usage patterns. Check <a href="https://bugs.python.org/issue46347">bpo-46347</a> for more information.</p>
<p><b>Upgrading existing Python 3.10 installations is highly recommended.</b> Even though this is an expedited release, it still contains over 100 other bug fixes. See the <a href="https://docs.python.org/release/3.10.2/whatsnew/changelog.html">change log</a> for details.</p>
<p>The next Python 3.10 maintenance release will be 3.10.3, currently scheduled for 2022-04-04.</p>
<h3>
<a class="anchor" href="https://discuss.python.org/t/python-3-10-2-3-9-10-and-3-11-0a4-are-now-available/13146#python-3910-2" name="python-3910-2"></a>Python 3.9.10</h3><p>Get it here: <a href="https://www.python.org/downloads/release/python-3910/" target="_blank">https://www.python.org/downloads/release/python-3910/ </a><br /></p><p>Python 3.9.10 is the ninth maintenance release of the legacy 3.9 series. <b>Note:</b> Python 3.10 is now the latest feature release series of Python 3.</p>
<p>Python 3.9 micro-releases enter double digits! There’s been 130 
commits since 3.9.9 which is a higher number of fixes for this stage of 
the life cycle compared to 3.8. See the <a href="https://docs.python.org/release/3.9.10/whatsnew/changelog.html">changelog</a> for details on what changed.</p>
<p>As a reminder, on macOS, the default installer is now the new <code>universal2</code>
 variant. It’s compatible with Mac OS X 10.9 and newer, including macOS 
11 Big Sur and macOS 12 Monterey. Python installed with this variant 
will work natively on Apple Silicon processors.</p>
<p>The next Python 3.9 maintenance release will be 3.9.11, currently scheduled for Pi Day '22 (2022-03-14).</p>
<h3>
<a class="anchor" href="https://discuss.python.org/t/python-3-10-2-3-9-10-and-3-11-0a4-are-now-available/13146#python-3110a4-3" name="python-3110a4-3"></a>Python 3.11.0a4</h3><p>Get it here: <a href="https://www.python.org/downloads/release/python-3110a4/" target="_blank">https://www.python.org/downloads/release/python-3110a4/ </a><br /></p><p>Python 3.11 is still in development.  This release, 3.11.0a4, is the fourth of seven planned alpha releases.</p>
<p>Alpha releases are intended to make it easier to test the current 
state of new features and bug fixes by the community, as well as to test
 the release process.</p>
<p>During the alpha phase, features may be added up until the start of 
the beta phase (2022-05-06) and, if necessary, may be modified or 
deleted up until the release candidate phase (2022-08-01).  Please keep 
in mind that this is a preview release and its use is <b>not</b> recommended for production environments.</p>
<p>Many new features for Python 3.11 are still being planned and written.  Among the new major new features and changes so far:</p>
<ul><li>
<a href="https://www.python.org/dev/peps/pep-0657/">PEP 657</a> – Include Fine-Grained Error Locations in Tracebacks</li><li>
<a href="https://www.python.org/dev/peps/pep-0654/">PEP 654</a> – Exception Groups and except*</li><li>The <a href="https://github.com/faster-cpython">Faster CPython Project</a> is already yielding some exciting results: this version of CPython 3.11 is ~ 19% faster on the geometric mean of the <a>PyPerformance benchmarks</a>, compared to 3.10.0.</li><li><small>(Hey, <b>fellow core developer,</b> if a feature you find important is missing from this list, <a href="mailto:pablogsal@python.org">let Pablo know</a>.)</small></li></ul>
<p>The next pre-release of Python 3.11 will be 3.11.0a5, currently scheduled for Wednesday, 2022-02-02.</p>
<h3>
<a class="anchor" href="https://discuss.python.org/t/python-3-10-2-3-9-10-and-3-11-0a4-are-now-available/13146#python-36-is-pining-for-the-fjords-4" name="python-36-is-pining-for-the-fjords-4"></a>Python 3.6 is pining for the fjords</h3>
<p>Python 3.6 is no more. It’s an ex-Python. It has ceased to be. On December 23rd 2021 is has <a href="https://www.python.org/dev/peps/pep-0494/">reached its end-of-life phase</a> after five successful years.</p>
<p>It’s been the first truly popular Python 3 release, introducing 
f-strings to the world and making big improvements to both asyncio 
(async generators!) and typing (variable annotations!).</p>
<p>We’d like to congratulate Ned Deily <a class="mention" href="https://discuss.python.org/u/nad">@nad</a>
 on successfully driving the 3.6 series to completion as Release 
Manager. He’s not fully retired yet, as 3.7, which he is also managing, 
is still receiving security patches until June 2023.</p>
<h3>
<a class="anchor" href="https://discuss.python.org/t/python-3-10-2-3-9-10-and-3-11-0a4-are-now-available/13146#we-hope-you-enjoy-the-new-releases-5" name="we-hope-you-enjoy-the-new-releases-5"></a>We hope you enjoy the new releases</h3>
<p>Your friendly release team,<br />
Pablo Galindo Salgado <a class="mention" href="https://discuss.python.org/u/pablogsal">@pablogsal</a><br />
Łukasz Langa <a class="mention" href="https://discuss.python.org/u/ambv">@ambv</a></p>Łukasz Langahttps://www.blogger.com/profile/01161413896843370614noreply@blogger.comtag:blogger.com,1999:blog-3941553907430899163.post-59218571610946053032021-12-08T18:54:00.003-05:002021-12-09T08:08:37.371-05:00Python 3.11.0a3 is available<p style="background-color: white; text-align: left;"><span style="color: #222222;">You can tell that we are slowly getting closer to the first beta as the number of release blockers that we need to fix on every release starts to increase</span><span face="Arial, sans-serif" style="color: #222222; font-size: 15.008px;">&nbsp;</span><img alt=":sweat_smile:" class="emoji" src="https://emoji.discourse-cdn.com/apple/sweat_smile.png?v=10" style="border-style: none; color: #222222; font-family: Arial, sans-serif; font-size: 15.008px; height: 20px; vertical-align: middle; width: 20px;" title=":sweat_smile:" />&nbsp;<span style="color: #222222;">But we did it!&nbsp;</span></p><div class="gmail_default" style="background-color: white;"><a data-saferedirecturl="https://www.google.com/url?q=https://www.python.org/downloads/release/python-3110a1/&amp;source=gmail&amp;ust=1633694408315000&amp;usg=AFQjCNHr_c406_GIntrAeoRIwWUkjho1qQ" href="https://www.python.org/downloads/release/python-3110a3/" style="color: #1155cc;" target="_blank"><span style="font-family: inherit;">https://www.python.org/<wbr></wbr>downloads/release/python-<wbr></wbr>3110a1/</span></a></div><div class="gmail_default" style="background-color: white;"><br /></div><div class="gmail_default"><h2 style="text-align: left;"><span style="font-family: inherit; font-size: medium;">Major new features of the 3.11 series, compared to 3.10</span></h2><p><span style="font-family: inherit;"><span>Among the new major new features and changes so far:</span><span><br /></span></span></p><ul style="background-color: white; clear: both; margin: 0px; padding: 0px 0px 0px 40px;"><li style="color: #222222;"><span style="font-family: inherit;"><a href="https://www.python.org/dev/peps/pep-0657/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 657</a>&nbsp;– Include Fine-Grained Error Locations in Tracebacks</span></li><li style="color: #222222;"><span style="font-family: inherit;"><a href="https://www.python.org/dev/peps/pep-0654/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 654</a>&nbsp;– PEP 654 – Exception Groups and except*<br /></span></li><li></li><li><span style="color: #222222;">The <a href="https://github.com/faster-cpython" target="_blank">Faster Cpython Project</a> is already yielding some exciting results: this version of CPython 3.11 is ~19% faster on the geometric mean of the <a href="http://speed.python.org" rel="nofollow" target="_blank">performance benchmarks</a>, compared to 3.10.0.</span></li><span style="color: #222222; font-family: inherit;"><span style="font-size: 0.75rem;">(Hey,&nbsp;</span></span><span style="color: #222222; font-family: inherit; font-size: 0.75rem; font-weight: bolder;">fellow core developer,</span><span style="color: #222222; font-family: inherit; font-size: 0.75rem;">&nbsp;if a feature you find important is missing from this list,&nbsp;</span><a href="mailto:pablogsal@python.org" style="background-color: transparent; color: #222222; cursor: pointer; font-family: inherit; font-size: 0.75rem; overflow-wrap: break-word; text-decoration-line: none;">let Pablo know</a><span style="color: #222222; font-family: inherit; font-size: 0.75rem;">.)</span></ul><div><p style="background-color: white; color: #222222; text-align: left;"><span style="font-family: inherit;">The next pre-release of Python 3.11 will be 3.11.0a3, currently scheduled for 2022-01-03.</span></p></div><h3 style="text-align: left;"><span style="font-family: inherit; font-size: small;">More resources</span></h3><ul style="background-color: white; clear: both; color: #222222; margin: 0px; padding: 0px 0px 0px 40px;"><li><a href="https://docs.python.org/3.10/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">Online Documentation</a></li></ul><ul style="background-color: white; clear: both; color: #222222; margin: 0px; padding: 0px 0px 0px 40px;"><li><a href="https://www.python.org/dev/peps/pep-0664/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 664</a>, 3.11 Release Schedule</li><li><span style="font-family: inherit; font-size: small;">Report bugs at&nbsp;<a href="https://bugs.python.org/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">https://bugs.python.org</a>.</span></li></ul><ul style="background-color: white; clear: both; color: #222222; margin: 0px; padding: 0px 0px 0px 40px;"><li><span style="font-family: inherit; font-size: small;"><a href="https://www.python.org/psf/donations/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">Help fund Python and its community</a>.</span></li></ul><p></p></div><div class="gmail_default" style="text-align: left;"><h2 style="text-align: left;"><span style="font-family: inherit; font-size: medium;">And now for something completely different</span></h2><p>Rayleigh scattering, named after the nineteenth-century British physicist Lord Rayleigh is the predominantly elastic scattering of light or other electromagnetic radiation by particles much smaller than the wavelength of the radiation. For light frequencies well below the resonance frequency of the scattering particle, the amount of scattering is inversely proportional to the fourth power of the wavelength. Rayleigh scattering results from the electric polarizability of the particles. The oscillating electric field of a light wave acts on the charges within a particle, causing them to move at the same frequency. The particle, therefore, becomes a small radiating dipole whose radiation we see as scattered light. The particles may be individual atoms or molecules; it can occur when light travels through transparent solids and liquids but is most prominently seen in gases.</p><p>The strong wavelength dependence of the scattering means that shorter (blue) wavelengths are scattered more strongly than longer (red) wavelengths. This results in the indirect blue light coming from all regions of the sky.</p></div><div class="gmail_default"><h2 style="text-align: left;"><span style="font-family: inherit; font-size: medium;">We hope you enjoy the new releases!</span></h2><span style="font-family: inherit;">Thanks to all of the many volunteers who help make Python Development and these releases possible! Please consider supporting our efforts by volunteering yourself or through organization contributions to the Python Software Foundation.<br /></span></div><div class="gmail_default"><span style="font-family: inherit;"><br /></span></div><div class="gmail_default"><span style="font-family: inherit;"><a href="https://www.python.org/psf/"><span style="font-family: inherit;">https://www.python.org/psf/</span><br /></a></span></div><div class="gmail_default"><p><span style="font-family: inherit;">Your friendly release team,<br /><a href="https://discuss.python.org/u/nad">Ned Deily @nad&nbsp;</a><br /><a href="https://discuss.python.org/u/steve.dower">Steve Dower @steve.dower</a>&nbsp;<br /><a href="https://discuss.python.org/u/pablogsal">Pablo Galindo Salgado @pablogsal</a></span></p></div>Pablo Galindohttps://www.blogger.com/profile/07923137967169776470noreply@blogger.comtag:blogger.com,1999:blog-3941553907430899163.post-23370224160570283932021-12-06T19:07:00.003-05:002021-12-06T19:07:51.818-05:00Python 3.10.1 is available<p><span style="color: #212529; white-space: pre-wrap;">I hope you like bug fixes, because we have a whole shipment of them! Python 3.10.1 is the first maintenance release of Python 3.10 as we have packed more than 330 commits of fixes and general improvements. You can get it here:</span></p><div class="gmail_default"><p><u style="color: #0000ee;">https://www.python.org/downloads/release/python-3101/</u></p><h2><span style="font-family: inherit; font-size: medium;"></span></h2><h2><span style="font-size: medium;">This is the first maintenance release of Python 3.10</span></h2><div><span style="font-family: inherit;"><br /></span></div><div><span style="font-family: inherit;">Python 3.10.1 is the newest major release of the Python programming language, and it contains many new features and optimizations.</span></div><h2><span style="font-family: inherit; font-size: medium;"><br /></span></h2><h2><span style="font-family: inherit; font-size: medium;">Major new features of the 3.10 series, compared to 3.9</span></h2><p><span style="font-family: inherit;">Among the new major new features and changes so far:</span><span style="font-family: inherit;"><br /></span></p><ul style="background-color: white; clear: both; color: #222222; margin: 0px; padding: 0px 0px 0px 40px;"><li><span style="font-family: inherit;"><a href="https://www.python.org/dev/peps/pep-0623/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 623</a>&nbsp;– Deprecate and prepare for the removal of the wstr member in PyUnicodeObject.</span></li></ul><ul style="background-color: white; clear: both; color: #222222; margin: 0px; padding: 0px 0px 0px 40px;"><li><span style="font-family: inherit;"><a href="https://www.python.org/dev/peps/pep-0604/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 604</a>&nbsp;– Allow writing union types as X | Y</span></li></ul><ul style="background-color: white; clear: both; color: #222222; margin: 0px; padding: 0px 0px 0px 40px;"><li><span style="font-family: inherit;"><a href="https://www.python.org/dev/peps/pep-0612/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 612</a>&nbsp;– Parameter Specification Variables</span></li></ul><ul style="background-color: white; clear: both; color: #222222; margin: 0px; padding: 0px 0px 0px 40px;"><li><span style="font-family: inherit;"><a href="https://www.python.org/dev/peps/pep-0626/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 626</a>&nbsp;– Precise line numbers for debugging and other tools.</span></li></ul><ul style="background-color: white; clear: both; color: #222222; margin: 0px; padding: 0px 0px 0px 40px;"><li><span style="font-family: inherit;"><a href="https://www.python.org/dev/peps/pep-0618/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 618&nbsp;</a>– Add Optional Length-Checking To zip.</span></li></ul><ul style="background-color: white; clear: both; color: #222222; margin: 0px; padding: 0px 0px 0px 40px;"><li><span style="font-family: inherit;"><a href="https://bugs.python.org/issue12782" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">bpo-12782</a>: Parenthesized context managers are now officially allowed.</span></li></ul><ul style="background-color: white; clear: both; color: #222222; margin: 0px; padding: 0px 0px 0px 40px;"><li><span style="font-family: inherit;"><a href="https://www.python.org/dev/peps/pep-0632/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 632&nbsp;</a>– Deprecate distutils module.</span></li></ul><ul style="background-color: white; clear: both; color: #222222; margin: 0px; padding: 0px 0px 0px 40px;"><li><span style="font-family: inherit;"><a href="https://www.python.org/dev/peps/pep-0613/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 613&nbsp;</a>– Explicit Type Aliases</span></li></ul><ul style="background-color: white; clear: both; color: #222222; margin: 0px; padding: 0px 0px 0px 40px;"><li><span style="font-family: inherit;"><a href="https://www.python.org/dev/peps/pep-0634/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 634&nbsp;</a>– Structural Pattern Matching: Specification</span></li></ul><ul style="background-color: white; clear: both; color: #222222; margin: 0px; padding: 0px 0px 0px 40px;"><li><span style="font-family: inherit;"><a href="https://www.python.org/dev/peps/pep-0635/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 635&nbsp;</a>– Structural Pattern Matching: Motivation and Rationale</span></li></ul><ul style="background-color: white; clear: both; color: #222222; margin: 0px; padding: 0px 0px 0px 40px;"><li><span style="font-family: inherit;"><a href="https://www.python.org/dev/peps/pep-0636/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 636&nbsp;</a>– Structural Pattern Matching: Tutorial</span></li></ul><ul style="background-color: white; clear: both; color: #222222; margin: 0px; padding: 0px 0px 0px 40px;"><li><span style="font-family: inherit;"><a href="https://www.python.org/dev/peps/pep-0644/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 644&nbsp;</a>– Require OpenSSL 1.1.1 or newer</span></li></ul><ul style="background-color: white; clear: both; color: #222222; margin: 0px; padding: 0px 0px 0px 40px;"><li><span style="font-family: inherit;"><a href="https://www.python.org/dev/peps/pep-0624/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 624&nbsp;</a>– Remove Py_UNICODE encoder APIs</span></li></ul><ul style="background-color: white; clear: both; color: #222222; margin: 0px; padding: 0px 0px 0px 40px;"><li><span style="font-family: inherit;"><a href="https://www.python.org/dev/peps/pep-0597/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 597&nbsp;</a>– Add optional EncodingWarning</span></li></ul><div><span style="color: #222222;"><br /></span></div><span style="font-family: inherit;">More resources</span><ul style="background-color: white; clear: both; color: #222222; margin: 0px; padding: 0px 0px 0px 40px;"><li><a href="https://docs.python.org/3.10/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">Online Documentation</a></li></ul><ul style="background-color: white; clear: both; color: #222222; margin: 0px; padding: 0px 0px 0px 40px;"><li><span style="font-family: inherit; font-size: small;"><a href="https://www.python.org/dev/peps/pep-0619/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 619</a>, 3.10 Release Schedule</span></li></ul><ul style="background-color: white; clear: both; color: #222222; margin: 0px; padding: 0px 0px 0px 40px;"><li><span style="font-family: inherit; font-size: small;">Report bugs at&nbsp;<a href="https://bugs.python.org/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">https://bugs.python.org</a>.</span></li></ul><ul style="background-color: white; clear: both; color: #222222; margin: 0px; padding: 0px 0px 0px 40px;"><li><span style="font-family: inherit; font-size: small;"><a href="https://www.python.org/psf/donations/" style="background-color: transparent; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">Help fund Python and its community</a>.</span></li></ul><p></p></div><div class="gmail_default"><p><span style="font-family: inherit;"><a href="https://bugs.python.org/issue38605" style="background-color: white; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">bpo-38605</a><span face="Arial, sans-serif" style="background-color: white; color: #222222;">:&nbsp;</span><code style="color: var(--primary-very-high);">from __future__ import annotations</code><span face="Arial, sans-serif" style="background-color: white; color: #222222;">&nbsp;(</span><a href="https://www.python.org/dev/peps/pep-0563/" style="background-color: white; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">PEP 563</a><span face="Arial, sans-serif" style="background-color: white; color: #222222;">) used to be on this list in previous pre-releases but it has been postponed to Python 3.11 due to some compatibility concerns. You can read the Steering Council communication about it&nbsp;</span><a href="https://mail.python.org/archives/list/python-dev@python.org/thread/CLVXXPQ2T2LQ5MP2Y53VVQFCXYWQJHKZ/" style="background-color: white; cursor: pointer; overflow-wrap: break-word; text-decoration-line: none;">here</a><span face="Arial, sans-serif" style="background-color: white; color: #222222;">&nbsp;to learn more.</span></span></p><h2><span style="font-family: inherit; font-size: small;">And now for something completely different</span></h2></div><div class="gmail_default"><p>The Meissner effect (or Meissner–Ochsenfeld effect) is the expulsion of a magnetic field from a superconductor during its transition to the superconducting state when it is cooled below the critical temperature. This expulsion will repel a nearby magnet. The German physicists Walther Meissner and Robert Ochsenfeld discovered this phenomenon in 1933 by measuring the magnetic field distribution outside superconducting tin and lead samples. The experiment demonstrated for the first time that superconductors were more than just perfect conductors and provided a uniquely defining property of the superconductor state. The ability for the expulsion effect is determined by the nature of equilibrium formed by the neutralization within the unit cell of a superconductor.</p><p><a href="https://www.youtube.com/watch?v=HRLvVkkq5GE" target="_blank">You can do very cool things with it!</a></p></div><div class="gmail_default"><h2><span style="font-family: inherit; font-size: small;">We hope you enjoy the new releases!</span></h2><span style="font-family: inherit;">Thanks to all of the many volunteers who help make Python Development and these releases possible! Please consider supporting our efforts by volunteering yourself or through organization contributions to the Python Software Foundation.<br /></span></div><div class="gmail_default"><span style="font-family: inherit;"><br /></span></div><div class="gmail_default"><span style="font-family: inherit;"><a href="https://www.python.org/psf/"><span style="font-family: inherit;">https://www.python.org/psf/</span><br /></a></span></div><div class="gmail_default"><p><span style="font-family: inherit;">Your friendly release team,<br /><a href="https://discuss.python.org/u/nad">Ned Deily @nad&nbsp;</a><br /><a href="https://discuss.python.org/u/steve.dower">Steve Dower @steve.dower</a>&nbsp;<br /><a href="https://discuss.python.org/u/pablogsal">Pablo Galindo Salgado @pablogsal</a></span></p></div>Pablo Galindohttps://www.blogger.com/profile/07923137967169776470noreply@blogger.comtag:blogger.com,1999:blog-3941553907430899163.post-26507434152764149412021-11-15T17:09:00.004-05:002021-11-15T17:10:17.075-05:00Python 3.9.9 hotfix release is now available<p>Get it here: <a href="https://www.python.org/downloads/release/python-399/">https://www.python.org/downloads/release/python-399/</a></p><p></p><p><i>Python 3.9.9</i> is the eighth maintenance release of the legacy 3.9 series. <i>Python 3.10</i> is now the latest feature release series of Python 3. <a href="https://python.org/downloads/" tabindex="-1">Get the latest release of 3.10.x here</a>.</p>
<p>3.9.9 was released out of schedule as a <b>hotfix</b> for an <code>argparse</code> regression in Python 3.9.8 which caused complex command-line tools to fail recognizing sub-commands properly. Details in <a href="https://bugs.python.org/issue45235" tabindex="-1">BPO-45235</a>. There are only three other bugfixes in this release compared to 3.9.8. See the <a href="https://docs.python.org/release/3.9.9/whatsnew/changelog.html" tabindex="-1">changelog</a> for details on what changed.</p>
<p>Upgrading to 3.9.9 is highly recommended if you’re running Python 3.9.8.</p>
<p>The next Python 3.9 maintenance release will be 3.9.10, currently scheduled for 2022-01-03.</p>
<h2>We apologize for the inconvenience</h2>
<p>…and still hope you’ll enjoy the new release!</p>
<p>Your friendly release team,<br />
Ned Deily <a class="mention" href="https://discuss.python.org/u/nad" tabindex="-1">@nad</a><br />
Steve Dower <a class="mention" href="https://discuss.python.org/u/steve.dower" tabindex="-1">@steve.dower</a><br />
Łukasz Langa <a class="mention" href="https://discuss.python.org/u/ambv" tabindex="-1">@ambv</a></p>Łukasz Langahttps://www.blogger.com/profile/01161413896843370614noreply@blogger.comtag:blogger.com,1999:blog-3941553907430899163.post-23350422603339230442021-11-05T19:09:00.000-04:002021-11-05T19:09:55.373-04:00Python 3.9.8 and 3.11.0a2 are now available<p></p><h2>Tcl/Tk updates</h2>
<p>With the recent release of macOS 12 Monterey, we noticed that <code>tkinter</code>
 file dialogs are failing to show up on this new operating system, 
including in our built-in IDLE. Thanks to rapid help from the Tk team, 
and Marc Culler in particular, we were able to fix the issue by bundling
 Python 3.9.8 and Python 3.11.0a2 with a fixed Tcl/Tk version. In 3.9.8 
it’s a patched 8.6.11 release while 3.11.0a2 is rocking the 
bleeding-edge 8.6.12rc1.</p>
<p>Since the issue also affected our latest stable version, 3.10.0, an 
updated macOS installer for this version was issued. You can recognize 
it by the <code>post2</code> version appendix: <a href="https://www.python.org/ftp/python/3.10.0/python-3.10.0post2-macos11.pkg">python-3.10.0post2-macos11.pkg</a>.
 We didn’t have to bump the version number of Python itself since there 
are no Python source differences between this package and the original 
3.10.0. The only difference is the bundled patched Tcl/Tk library.</p>
<p>Initially the original 3.10.0 installer was removed from the website 
after all URLs got updated to point to the patched version but <a href="https://discuss.python.org/t/disappearing-macos-packages-on-python-org/11737">it turned out this breaks some workflows</a> so the patched installer is now also available under the original filename.</p>
<h2>
<a class="anchor" href="https://discuss.python.org/t/python-3-9-8-and-3-11-0a2-are-now-available/11763#python-398-2" name="python-398-2"></a>Python 3.9.8</h2><p>Get it here: <a href="https://www.python.org/downloads/release/python-398/">https://www.python.org/downloads/release/python-398/ </a><br /></p><p>Python 3.9.8 is the seventh maintenance release of the legacy 3.9 series. <em>Python 3.10</em> is now the latest feature release series of Python 3. <a href="https://python.org/downloads/">Get the latest release of 3.10.x here</a>.
</p><p>There’s been 202 commits since 3.9.7 which shows that there’s still 
considerable interest in improving Python 3.9. To compare, at the same 
stage of the release cycle Python 3.8 received over 25% fewer commits. 
See the <a href="https://docs.python.org/release/3.9.8/whatsnew/changelog.html">changelog</a> for details on what changed.</p>
<p>On macOS, the default installer is now the new <code>universal2</code>
 variant. It’s compatible with Mac OS X 10.9 and newer, including macOS 
11 Big Sur and macOS 12 Monterey. You may need to upgrade third-party 
components, like <code>pip</code>, to the newest versions. You may 
experience differences in behavior in IDLE and other Tk-based 
applications due to using the newest version of Tk. As always, if you 
encounter problems when using this installer variant, please check <a href="https://bugs.python.org">https://bugs.python.org</a> for existing reports and for opening new issues.</p>
<p>The next Python 3.9 maintenance release will be 3.9.9, currently scheduled for 2022-01-03.</p>
<h2>
<a class="anchor" href="https://discuss.python.org/t/python-3-9-8-and-3-11-0a2-are-now-available/11763#python-3110a2-3" name="python-3110a2-3"></a>Python 3.11.0a2</h2>
<aside class="onebox allowlistedgeneric" data-onebox-src="https://www.python.org/downloads/release/python-3110a2/">Get it here: <a href="https://www.python.org/downloads/release/python-3110a2/">https://www.python.org/downloads/release/python-3110a2/</a><div class="onebox-metadata">
    
    
  </div>
  
</aside>
<p>
Python 3.11 is still in development.  This release, 3.11.0a2 is the second of seven planned alpha releases.</p>
<p>Alpha releases are intended to make it easier to test the current 
state of new features and bug fixes and to test the release process.</p>
<p>During the alpha phase, features may be added up until the start of 
the beta phase (2022-05-06) and, if necessary, may be modified or 
deleted up until the release candidate phase (2022-08-01).  Please keep 
in mind that this is a preview release and its use is <strong>not</strong> recommended for production environments.</p>
<p>Many new features for Python 3.11 are still being planned and written.  Among the new major new features and changes so far:</p>
<ul><li>
<a href="https://www.python.org/dev/peps/pep-0657/">PEP 657</a> – Include Fine-Grained Error Locations in Tracebacks</li><li>The <a href="https://github.com/faster-cpython">Faster CPython Project <span class="badge badge-notification clicks" title="1 click">1</span></a> is already yielding some exciting results: this version of CPython 3.11 is ~12% faster on the geometric mean of the <a>PyPerformance benchmarks</a>, compared to 3.10.0.</li><li><small>(Hey, <strong>fellow core developer,</strong> if a feature you find important is missing from this list, <a href="mailto:pablogsal@python.org">let Pablo know</a>.)</small></li></ul>
<p>The next pre-release of Python 3.11 will be 3.11.0a3, currently scheduled for Monday, 2021-12-06.</p>
<h2>
<a class="anchor" href="https://discuss.python.org/t/python-3-9-8-and-3-11-0a2-are-now-available/11763#we-hope-you-enjoy-the-new-releases-4" name="we-hope-you-enjoy-the-new-releases-4"></a>We hope you enjoy the new releases</h2>
<p>Your friendly release team,<br />
Ned Deily <a class="mention" href="https://discuss.python.org/u/nad">@nad</a><br />
Pablo Galindo Salgado <a class="mention" href="https://discuss.python.org/u/pablogsal">@pablogsal</a><br />
Steve Dower <a class="mention" href="https://discuss.python.org/u/steve.dower">@steve.dower</a><br />
Łukasz Langa <a class="mention" href="https://discuss.python.org/u/ambv">@ambv</a></p><h2>&nbsp;</h2>Łukasz Langahttps://www.blogger.com/profile/01161413896843370614noreply@blogger.com
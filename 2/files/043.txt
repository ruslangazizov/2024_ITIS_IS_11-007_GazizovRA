тип
коллекция
SwiftBook
учебник
курсы
онлайн
iOS
курсы
подписка
копошилка
статья
видео
входить
вход
сброс
пароль
находить
учебник
курсы
онлайн
iOS
курсы
подписка
копошилка
статья
видео
входить
вход
сброс
пароль
находить
документация
развертывать
свертывать
документация
знакомство
Swift
язык
Swift
совместимость
версия
Swift
тур
Swift
руководство
Swift
основа
базовый
оператор
строка
символ
тип
коллекция
управление
поток
функция
замыкание
перечисление
структура
класс
свойство
метод
сабскрипт
наследование
инициализация
деинициализация
опциональный
последовательность
обработка
ошибка
согласованность
приведение
тип
вкладывать
тип
расширение
непрозрачный
тип
протокол
универсальный
шаблон
автоматический
подсчет
ссылка
ARC
безопасность
хранение
контроль
доступ
продвигать
оператор
справочник
язык
лексический
структура
тип
выражение
инструкция
объявление
атрибут
шаблон
параметр
аргумент
универсальный
тип
резюме
грамматика
тип
коллекция
тип
коллекция
Swift
обеспечивать
основной
тип
коллекция
это
массив
множество
словарь
хранение
коллекция
значение
массив
это
упорядочивать
коллекция
значение
множество
это
неупорядоченный
коллекция
уникальный
значение
словарь
это
неупорядоченный
коллекция
хранить
пара
ключ
массив
множество
словарь
Swift
понятно
тип
значение
ключ
мочь
хранить
это
означать
мочь
ошибка
вставлять
неверный
значение
коллекция
это
также
означать
мочь
уверять
тип
значение
который
получать
коллекция
заметка
забегать
вперед
скажем
массив
словарь
множество
Swift
реализовать
универсальный
коллекция
подробный
информация
универсальный
тип
коллекция
получать
глава
универсальный
шаблон
изменчивость
коллекция
создавать
массив
словарь
множество
присваивать
переменная
создавать
коллекция
изменять
это
означать
мочь
изменять
коллекция
создание
путем
добавление
удаление
изменение
элемент
коллекция
наоборот
присваивать
массив
словарь
константа
неизменяемый
размер
содержимое
изменять
заметка
хороший
практика
являться
создание
неизменяемый
коллекция
случай
коллекция
нужно
менять
делать
это
позволять
компилятор
Swift
оптимизировать
производительность
наш
коллекция
массив
массив
хранить
значение
одинаковый
тип
упорядочивать
список
значение
массив
появляться
несколько
разный
позиция
заметка
массив
Swift
связанный
класс
Foundation
NSArray
подробный
информация
использование
Array
Foundation
Cocoa
см
Bridging
Between
Array
and
NSArray
сокращать
синтаксис
массив
полный
форма
запись
массив
Swift
писаться
Array
Element
Element
это
тип
значение
который
хранить
массив
мочь
также
написать
массив
сокращенный
форма
Element
хотя
форма
функционально
идентичный
краткий
форма
являться
предпочтительный
использоваться
данный
руководство
обращение
тип
массив
создание
пустой
массив
мочь
создавать
пустой
массив
определенный
тип
помощь
синтаксис
инициализатор
var
someInts
Int
print
someInts
is
of
type
Int
with
someInts
items
выводить
someInts
is
of
type
Int
with
items
обращать
внимание
тип
переменная
someInts
выводиться
Int
тип
инициализатор
качество
альтернатива
контекст
содержать
информация
тип
например
аргумент
функция
типизированный
переменный
константа
мочь
создавать
пустой
массив
помощь
пустой
литерал
массив
который
записываться
вид
пустой
пара
квадратный
скобка
someInts
массив
someInts
содержать
значение
тип
Int
someInts
массив
someInts
пустой
равно
иметь
тип
Int
создание
массив
дефолтное
значение
тип
массив
Swift
также
обеспечивать
инициализатор
создание
массив
определенный
размер
значение
установленный
дефолтное
значение
передавать
это
инициализатор
дефолтное
значение
соответствующий
тип
называть
repeating
сколько
это
значение
повторяться
новый
массив
называть
count
var
threeDoubles
Array
repeating
count
threeDoubles
иметь
тип
Double
равный
создание
массив
путем
объединение
массив
мочь
создавать
новый
массив
объединять
существовать
массив
совместимый
тип
оператор
сложение
новый
тип
массив
выводиться
тип
массив
который
объединять
вместе
var
anotherThreeDoubles
Array
repeating
count
anotherThreeDoubles
иметь
тип
Double
равный
var
sixDoubles
threeDoubles
anotherThreeDoubles
тип
sixDoubles
вывести
Double
равный
создание
массив
литерал
массив
мочь
инициализировать
массив
помощь
литерал
массив
который
являться
быстрый
способ
писать
несколько
значение
набор
значение
массив
литерал
массив
писаться
вид
список
значение
разделять
запятая
окружать
пара
квадратный
скобка
значение
значение
значение
приводить
ниже
пример
создаваться
массив
название
shoppingList
хранение
String
значение
var
shoppingList
String
Eggs
Milk
shoppingList
инициализировать
элемент
переменный
shoppingList
объявлять
массив
String
значение
который
записываться
String
поскольку
это
массив
указывать
тип
значение
String
разрешать
хранить
String
значение
массив
shoppingList
инициализировать
String
значение
Eggs
Milk
написать
внутри
литерал
массив
заметка
массив
shoppingList
объявлять
переменный
помощь
var
константа
помощь
let
поскольку
элемент
добавляться
список
покупка
пример
ниже
данный
случай
литерал
массив
содержать
String
значение
это
подходить
тип
который
присваивать
объявление
переменная
shoppingList
массив
который
хранить
String
значение
поэтому
присвоение
литерал
массив
разрешать
способ
инициализация
shoppingList
начальный
элемент
благодаря
вывод
тип
Swift
мочь
писать
тип
массив
который
инициализировать
помощь
литерал
массив
хранить
значение
тип
вместо
это
инициализация
shoppingList
записывать
сокращенный
форма
var
shoppingList
Eggs
Milk
поскольку
значение
внутри
литерал
массив
одинаковый
тип
Swift
выводить
String
являться
правильный
тип
переменная
shoppingList
доступ
изменение
массив
мочь
получать
доступ
массив
изменять
либо
метод
свойство
либо
использовать
синтаксис
сабскрипт
узнавать
количество
элемент
массив
проверять
read
свойство
count
print
The
shopping
list
contains
shoppingList
items
выводить
The
shopping
list
contains
items
логический
свойство
isEmpty
использовать
качество
быстрый
способ
узнавать
являться
свойство
count
равный
if
shoppingList
print
The
shopping
list
is
empty
else
print
The
shopping
list
is
not
empty
выводить
The
shopping
list
is
not
empty
мочь
добавлять
новый
элемент
конец
массив
вызов
метода
append
shoppingList
Flour
shoppingList
содержать
элемент
кое-кто
делать
блин
кроме
добавлять
массив
несколько
совместимый
элемент
помощь
оператор
сложение
присвоение
shoppingList
Baking
Powder
shoppingList
хранить
элемент
shoppingList
Chocolate
Spread
Cheese
Butter
shoppingList
хранить
элемент
извлекать
значение
массив
помощь
синтаксис
сабскрипт
помещать
индекс
значение
который
хотеть
получать
внутри
квадратный
скобка
сразу
имя
массив
var
firstItem
shoppingList
firstItem
равный
Eggs
заметка
первый
элемент
это
массив
иметь
индекс
массив
Swift
начинаться
мочь
использовать
синтаксис
сабскрипт
изменение
существующий
значение
данный
индекс
shoppingList
Six
eggs
первый
элемент
список
равный
Six
eggs
Eggs
также
мочь
использовать
синтаксис
сабскрипт
изменение
диапазон
значение
набор
изменять
значение
иметь
разный
длина
сравнение
диапазон
который
требоваться
заменять
следующий
пример
заменять
Chocolate
Spread
Cheese
Butter
Bananas
Apples
shoppingList
Bananas
Apples
shoppingList
содержать
элемент
вставка
элемент
заданный
индекс
внутрь
массив
вызывать
метод
insert
at
shoppingList
Maple
Syrup
at
shoppingList
содержать
элемент
Maple
Syrup
первый
элемент
список
вызывать
insert
at
метод
вставлять
новый
элемент
значение
Maple
Syrup
самый
начало
список
покупка
элемент
индекс
аналогичный
образ
удалять
элемент
массив
помощь
метода
remove
at
метод
удалять
элемент
указанный
индекс
возвращать
удалять
элемент
хотя
мочь
игнорировать
возвращать
значение
оно
нужно
let
mapleSyrup
shoppingList
at
элемент
который
иметь
индекс
удалять
shoppingList
содержать
элемент
Maple
Syrup
константа
mapleSyrup
равный
удаленный
строка
Maple
Syrup
заметка
пытаться
получать
доступ
изменять
значение
индекс
который
находиться
предел
существовать
граница
массив
ошибка
исполнение
мочь
проверять
действительный
индекс
прежде
использовать
сравнивать
свойство
count
массив
исключение
случай
count
равный
массив
пустой
самый
большой
валидный
индекс
массив
count
массив
индексироваться
c
ноль
любой
пробел
внутри
массив
закрываться
удаляться
элемент
поэтому
значение
индекс
равно
Six
eggs
firstItem
shoppingList
firstItem
равный
Six
eggs
хотеть
удалять
последний
элемент
массив
использовать
метод
removeLast
вместо
remove
at
избегать
необходимость
запрос
свойство
count
массив
также
метод
remove
at
removeLast
возвращать
удаленный
элемент
let
последний
элемент
массив
удалять
shoppingList
содержать
элемент
яблоко
константа
apples
равный
удаленный
строка
Apples
итерация
массив
мочь
выполнять
итерация
набор
значение
внутри
массив
помощь
цикл
for
for
item
in
shoppingList
print
item
Six
eggs
Milk
Flour
Baking
Powder
Bananas
нужный
целочисленный
индекс
каждый
значение
значение
использовать
вместо
это
глобальный
функция
enumerated
итерация
массив
функция
enumerated
возвращать
кортеж
каждый
элемент
массив
собирать
вместе
индекс
значение
это
элемент
мочь
раскладывать
кортеж
временный
константа
переменная
рамка
итерация
for
index
value
in
shoppingList
print
Item
index
value
Item
Six
eggs
Item
Milk
Item
Flour
Item
Baking
Powder
Item
Bananas
получать
подробный
информация
цикл
for
смотреть
глава
цикл
For
множество
множество
хранить
различный
значение
тип
вид
коллекция
неупорядоченный
форма
мочь
использовать
множество
альтернатива
массив
порядок
значение
иметь
нужно
уверенный
значение
внутри
коллекция
повторяться
заметка
тип
Swift
Set
связанный
класс
Foundation
NSSet
получать
информация
использование
множество
фреймворка
Foundation
Cocoa
Bridging
Between
Set
and
NSSet
хеш
значение
тип
Set
тип
должный
хешировать
мочь
храниться
множество
образ
тип
должный
предоставлять
возможность
вычисление
собственный
значение
хеш
тип
значение
хеш
Int
должный
объект
одинаковый
проводить
сравнение
a
b
a
b
базовый
тип
Swift
Int
String
Double
Bool
являться
хешировать
тип
умолчание
мочь
использовать
качество
тип
значение
множество
качество
тип
ключ
словарь
значение
член
перечисление
какой-либо
связанный
значение
описывать
глава
перечисление
являться
хешировать
умолчание
заметка
мочь
использовать
ваш
собственный
тип
качество
тип
значение
множество
тип
ключ
словарь
подписывать
протокол
Hashable
стандартный
библиотека
Swift
тип
который
подписывать
протокол
Hashable
должный
обеспечивать
gettable
свойство
hashValue
значение
который
возвращать
hashValue
обязательно
должно
иметь
значение
выполнение
программа
разный
программа
протокол
Hashable
подписывать
протокол
Equatable
подписывать
тип
должный
предоставлять
реализация
оператор
равенство
протокол
Equatable
требовать
любой
реализация
оператор
равенство
реализация
возможность
сравнение
образ
реализация
оператор
должный
удовлетворять
следующий
условие
значение
a
b
c
a
a
рефлексивность
a
b
значит
b
a
симметрия
b
a
b
c
значит
a
c
транзитивность
подробный
информация
читать
глава
протокол
синтаксис
тип
множество
тип
множество
Swift
записываться
Set
Element
Element
являться
тип
который
храниться
множество
отличие
массив
множество
иметь
сокращенный
форма
запись
создание
инициализация
пустой
множество
мочь
создавать
пустой
множество
конкретный
тип
использовать
синтаксис
инициализатор
var
letters
Set
Character
print
letters
иметь
тип
Set
Character
letters
элемент
выводить
letters
иметь
тип
Set
Character
элемент
заметка
тип
переменная
letters
вывести
тип
инициализатор
Set
Character
альтернативный
контекст
предоставлять
информация
тип
например
аргумент
функция
просто
явный
указание
тип
переменная
константа
мочь
создавать
пустой
множество
помощь
пустой
литерал
массив
letters
a
letters
содержать
элемент
тип
Character
letters
letters
являться
пустой
множество
иметь
тип
Set
Character
создание
множество
помощь
литерал
массив
мочь
инициализировать
множество
помощь
литерал
массив
использовать
качество
сокращенный
запись
несколько
элемент
качество
коллекция
множество
пример
ниже
создавать
множество
favoriteGenres
хранение
String
var
favoriteGenres
Set
String
Rock
Classical
Hip
hop
favoriteGenres
инициализировать
помощь
начальный
элемент
переменный
favoriteGenres
объявлять
множество
значение
тип
String
который
записываться
Set
String
это
множество
иметь
определенный
тип
String
это
множество
позволять
хранить
значение
тип
String
поэтому
инициализировать
favoriteGenres
значение
тип
String
записывать
вид
литерал
массив
заметка
множество
favoriteGenres
объявлять
переменный
ключевой
слово
var
константа
ключевой
слово
let
добавлять
удалять
элемент
пример
ниже
тип
множество
вывести
литерал
тип
должный
указывать
явно
однако
из-за
вывод
тип
Swift
должный
писать
тип
множество
инициализировать
помощь
литерал
массив
который
содержать
элемент
тип
вместо
это
инициализация
favoriteGenres
записывать
короткий
форма
var
favoriteGenres
Set
Rock
Classical
Hip
hop
элемент
литерал
массив
тип
Swift
выводить
Set
String
являться
корректный
тип
переменная
favoriteGenres
доступ
изменение
множество
получать
доступ
модифицировать
множество
свойство
метод
выяснять
количество
элемент
множество
нужно
использовать
свойство
count
print
favoriteGenres
любимый
музыкальный
жанр
выводить
любимый
музыкальный
жанр
использовать
булев
свойство
isEmpty
качество
сокращенный
проверка
наличие
элемент
множество
слово
равно
свойство
count
if
favoriteGenres
print
равно
музыка
играть
придирчивый
else
print
свой
музыкальный
предпочтение
выводить
свой
музыкальный
предпочтение
мочь
добавлять
новый
элемент
множество
использовать
метод
insert
favoriteGenres
Jazz
favoriteGenres
находиться
элемент
мочь
удалять
элемент
множество
использовать
метод
remove
который
удалять
элемент
который
являться
член
множество
возвращать
удаленный
значение
nil
удалять
элемент
объект
множество
мочь
удалять
единовременно
помощь
метода
removeAll
if
let
removedGenre
favoriteGenres
Rock
print
removedGenre
хватить
else
print
это
сильно
заботить
выводить
Rock
хватить
проверять
наличие
определенный
элемент
множество
использовать
метод
contains
if
favoriteGenres
Funk
print
вставать
правильный
нога
else
print
слишком
Funk
выводить
слишком
Funk
итерация
множество
мочь
совершать
итерация
множество
помощь
цикл
for
for
genre
in
favoriteGenres
print
genre
Classical
Jazz
Hip
hop
подробный
информация
цикл
for
читать
глава
цикл
For
множество
Swift
иметь
определенный
порядок
проводить
итерация
множество
определенный
порядок
нужно
использовать
метод
sorted
который
возвращать
элемент
коллекция
вид
отсортировывать
массив
умолчание
использовать
оператор
for
genre
in
favoriteGenres
print
genre
Classical
Hip
hop
Jazz
выполнение
операция
множество
мочь
очень
эффективно
использовать
базовый
операция
множество
например
комбинирование
множество
определение
общий
значение
множество
определять
содержать
множество
несколько
одинаковый
значение
базовый
операция
множество
иллюстрация
внизу
изображать
множество
a
b
результат
применение
различный
метод
использовать
метод
union
создание
новое
множество
состоять
значение
оба
множество
использовать
метод
intersection
создание
новое
множество
общий
значение
входной
множество
использовать
метод
subtracting
создание
множество
значение
принадлежать
указанный
множество
входной
использовать
метод
symmetricDifference
создание
новое
множество
значение
который
повторяться
входной
множество
let
oddDigits
Set
let
evenDigits
Set
let
singleDigitPrimeNumbers
Set
oddDigits
evenDigits
oddDigits
evenDigits
oddDigits
singleDigitPrimeNumbers
oddDigits
singleDigitPrimeNumbers
взаимосвязь
равенство
множество
иллюстрация
ниже
отображать
множество
a
b
c
множество
a
являться
надмножество
множество
b
содержать
элемент
соответственно
множество
b
являться
подмножество
множество
a
таки
элемент
находиться
a
множество
b
c
называться
разделять
общий
элемент
использовать
оператор
равенство
определение
значение
множество
одинаковый
использовать
метод
isSubset
of
определение
значение
множество
содержаться
указанный
множество
использовать
метод
isSuperset
of
определять
содержать
множество
значение
указанный
множество
использовать
метод
isStrictSubset
of
isStrictSuperset
of
определение
являться
множество
подмножество
надмножество
равный
указанный
сет
использовать
метод
isDisjoint
with
определение
отсутствовать
общий
значение
множество
let
houseAnimals
Set
собака
кошка
let
farmAnimals
Set
корова
курица
баран
собака
кошка
let
cityAnimals
Set
ворона
мышь
houseAnimals
of
farmAnimals
true
farmAnimals
of
houseAnimals
true
farmAnimals
with
cityAnimals
true
словарь
словарь
представлять
контейнер
который
хранить
несколько
значение
тип
каждый
значение
связанный
уникальный
ключ
который
выступать
качество
идентификатор
это
значение
внутри
словарь
отличие
элемент
массив
элемент
словарь
иметь
определенный
порядок
использовать
словарь
нужно
искать
значение
основа
идентификатор
реальный
мир
словарь
использоваться
поиск
определение
конкретный
слово
заметка
тип
словарь
Swift
иметь
связь
класс
Foundation
NSDictionary
подробно
использование
словарь
Foundation
Cocoa
см
Bridging
Between
Dictionary
and
NSDictionary
сокращенный
синтаксис
словарь
Swift
тип
словарь
полный
форма
писаться
Dictionary
Key
Value
Key
это
тип
значение
который
использоваться
ключ
словарь
Value
это
тип
значение
который
словарь
хранить
ключ
заметка
тип
словарь
Key
должный
подчиняться
протокол
Hashable
тип
значение
множество
мочь
также
написать
словарь
сокращенный
форма
Key
Value
хотя
форма
функционально
идентичный
краткий
форма
являться
предпочтительный
использоваться
данный
руководство
обращение
тип
словарь
создание
пустой
словарь
подобно
массив
мочь
создавать
пустой
словарь
определенный
тип
помощь
синтаксис
инициализатор
var
namesOfIntegers
Int
String
namesOfIntegers
являться
пустой
Int
String
словарь
это
пример
создаваться
пустой
словарь
тип
Int
String
хранение
удобный
восприятие
имя
числовой
значение
ключ
иметь
тип
Int
значение
String
контекст
предоставлять
информация
тип
мочь
создавать
пустой
словарь
помощь
литерал
пустой
словарь
который
писаться
двоеточие
внутри
пара
квадратный
скобка
namesOfIntegers
sixteen
namesOfIntegers
содержать
пара
ключ
namesOfIntegers
namesOfIntegers
пустой
словарь
тип
Int
String
создание
словарь
литерал
словарь
мочь
инициализировать
словарь
помощь
литерал
словарь
который
иметь
схожий
синтаксис
литерал
массив
рассматривать
ранее
литерал
словарь
это
краткий
способ
написать
несколько
пар
ключ
вид
коллекция
словарь
пара
ключ
являться
комбинация
ключ
значение
литерал
словарь
ключ
значение
каждый
пара
ключ
разделять
двоеточие
пара
ключ
написать
список
разделять
запятая
окружать
пара
квадратный
скобка
ключ
значение
ключ
значение
ключ
значение
пример
ниже
создаваться
словарь
который
хранить
имя
международный
аэропорт
это
словарь
ключ
являться
трехбуквенный
код
международный
ассоциация
воздушный
транспорт
значение
название
аэропорт
var
airports
String
String
YYZ
Toronto
Pearson
DUB
Dublin
словарь
airports
объявлять
тип
означать
словарь
ключ
который
иметь
тип
String
значение
который
также
иметь
тип
String
заметка
словарь
airports
объявлять
переменный
помощь
var
константа
помощь
let
поскольку
аэропорт
добавляться
словарь
пример
ниже
словарь
airports
инициализировать
помощь
литерал
словарь
содержать
пара
ключ
первый
пара
иметь
ключ
YYZ
значение
Toronto
Pearson
второй
пара
иметь
ключ
DUB
значение
Dublin
словарь
содержать
пара
String
String
тип
ключ
подходить
тип
который
присваивать
переменная
airports
словарь
содержать
String
ключ
String
значение
поэтому
присвоение
литерал
словарь
допустимый
качество
способ
инициализация
словарь
airports
начальный
элемент
подобно
массив
мочь
писать
тип
словарь
инициализировать
помощь
литерал
словарь
чей
ключ
значение
иметь
соответствующий
тип
инициализация
airports
записывать
краткий
форма
var
airports
YYZ
Toronto
Pearson
DUB
Dublin
поскольку
ключ
литерал
иметь
одинаковый
тип
точно
значение
иметь
одинаковый
тип
Swift
выводить
String
String
являться
правильный
тип
использование
словарь
airports
доступ
изменение
словарь
мочь
получать
доступ
словарь
изменять
либо
метод
свойство
либо
использовать
синтаксис
индекс
подобно
массив
мочь
узнавать
количество
элемент
словарь
read
свойство
count
print
The
airports
dictionary
contains
airports
items
выводить
The
airports
dictionary
contains
items
логический
свойство
isEmpty
использовать
качество
быстрый
способ
узнавать
являться
свойство
count
равный
if
airports
print
The
airports
dictionary
is
empty
else
print
The
airports
dictionary
is
not
empty
выводить
The
airports
dictionary
is
not
empty
мочь
добавлять
новый
элемент
словарь
помощь
синтаксис
индекс
использовать
новый
ключ
соответствующий
тип
качество
индекс
затем
присваивать
новое
значение
соответствующий
тип
airports
LHR
London
словарь
airports
содержать
элемент
также
мочь
использовать
синтаксис
индекс
изменение
значение
связанный
определенный
ключ
airports
LHR
London
Heathrow
значение
LHR
поменяться
London
Heathrow
качество
альтернатива
индекс
использовать
метод
словарь
updateValue
forKey
устанавливать
обновлять
значение
определенный
ключ
подобно
пример
индекс
вверху
метод
updateValue
forKey
устанавливать
значение
ключ
оно
существовать
обновлять
значение
ключ
существовать
однако
отличие
индекс
метод
updateValue
forKey
возвращать
старое
значение
выполнение
обновление
это
позволять
проверять
состояться
обновление
метод
updateValue
forKey
возвращать
опциональный
значение
соответствующий
тип
значение
словарь
например
словарь
который
хранить
String
значение
метод
возвращать
String
тип
опциональный
String
это
опциональный
значение
содержать
старое
значение
это
ключ
оно
существовать
обновление
либо
nil
значение
существовать
if
let
oldValue
airports
Dublin
Airport
forKey
DUB
print
The
old
value
for
DUB
was
oldValue
выводить
The
old
value
for
DUB
was
Dublin
также
мочь
использовать
синтаксис
индекс
получать
значение
словарь
конкретный
ключ
поскольку
вероятность
запрашивать
ключ
несуществующий
значение
индекс
словарь
возвращать
опциональный
значение
соответствующий
тип
значение
словарь
словарь
содержать
значение
запрашивать
ключ
индекс
возвращать
опциональный
значение
содержать
существующий
значение
это
ключ
противный
случай
индекс
возвращать
nil
if
let
airportName
airports
DUB
print
The
name
of
the
airport
is
airportName
else
print
That
airport
is
not
in
the
airports
dictionary
выводить
The
name
of
the
airport
is
Dublin
Airport
мочь
использовать
синтаксис
индекс
удаление
пара
ключ
словарь
путем
присвоение
nil
значение
это
ключ
airports
APL
Apple
International
Apple
International
несуществующий
аэропорт
APL
удалять
airports
APL
nil
APL
удалять
словарь
кроме
удалять
пара
ключ
словарь
помощь
метода
removeValue
forKey
метод
удалять
пара
ключ
существовать
затем
возвращать
значение
либо
возвращать
nil
значение
существовать
if
let
removedValue
airports
forKey
DUB
print
The
removed
airport
name
is
removedValue
else
print
The
airports
dictionary
does
not
contain
a
value
for
DUB
выводить
The
removed
airport
name
is
Dublin
Airport
итерация
словарь
мочь
сделать
итерация
пара
ключ
словарь
помощь
for
цикл
каждый
значение
словарь
возвращаться
кортеж
ключ
значение
мочь
раскладывать
часть
кортеж
временный
константа
переменный
рамка
итерация
for
airportCode
airportName
in
airports
print
airportCode
airportName
LHR
London
Heathrow
YYZ
Toronto
Pearson
подробно
узнавать
цикл
for
смотреть
глава
цикл
for
также
мочь
получать
коллекция
ключ
значение
словарь
обращение
свойство
keys
values
for
airportCode
in
airports
print
Airport
code
airportCode
Airport
code
LHR
Airport
code
YYZ
for
airportName
in
airports
print
Airport
name
airportName
Airport
name
London
Heathrow
Airport
name
Toronto
Pearson
нужно
использовать
ключ
значение
словарь
вместе
какой-либо
API
который
принимать
объект
Array
инициализировать
новый
массив
помощь
свойство
keys
values
let
airportCodes
String
airports
airportCodes
YYZ
LHR
let
airportNames
String
airports
airportNames
Toronto
Pearson
London
Heathrow
тип
словарь
Swift
являться
неупорядоченный
коллекция
итерация
ключ
значение
словарь
определенный
последовательность
использовать
метод
sorted
свойство
keys
values
словарь
находить
ошибка
пожалуйста
выделять
фрагмент
текст
нажимать
Ctrl
строка
символ
управление
поток
SwiftBook
самый
крупный
сообщество
iOS
разработчик
язык
Swift
социальный
сетяхYouTubeVKontakteFacebookЧат
instagramПолезноеPodlodka
подписываться
новость
политика
конфиденциальность
пользовательский
соглашение
находить
акулов
сообщать
опечатка
текст
который
отправлять
наш
редактор
ваш
комментарий
необязательно
отправлять
отмена
